name: Test Core Packages

on:
  push:
    branches: [main, develop]
    paths:
      - 'packages/common/**'
      - 'packages/eventemitter/**'
      - 'packages/smartbuffer/**'
      - 'packages/messagepack/**'
      - '.github/workflows/test-core-packages.yml'
      - 'package.json'
      - 'yarn.lock'
      - 'turbo.json'
  pull_request:
    branches: [main, develop]
    paths:
      - 'packages/common/**'
      - 'packages/eventemitter/**'
      - 'packages/smartbuffer/**'
      - 'packages/messagepack/**'
      - '.github/workflows/test-core-packages.yml'
      - 'package.json'
      - 'yarn.lock'
      - 'turbo.json'

jobs:
  test:
    name: Test ${{ matrix.package }} on Node ${{ matrix.node-version }}
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        node-version: [20.x, 22.x]
        package: 
          - common
          - eventemitter
          - smartbuffer
          - messagepack
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: Enable Corepack
        run: corepack enable

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "dir=$(yarn config get cacheFolder)" >> $GITHUB_OUTPUT

      - name: Cache yarn dependencies
        uses: actions/cache@v4
        id: yarn-cache
        with:
          path: |
            ${{ steps.yarn-cache-dir-path.outputs.dir }}
            .yarn/cache
            .yarn/unplugged
            .yarn/install-state.gz
          key: ${{ runner.os }}-yarn-${{ matrix.node-version }}-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-${{ matrix.node-version }}-
            ${{ runner.os }}-yarn-

      - name: Cache turbo build
        uses: actions/cache@v4
        with:
          path: .turbo
          key: ${{ runner.os }}-turbo-${{ matrix.node-version }}-${{ matrix.package }}-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-turbo-${{ matrix.node-version }}-${{ matrix.package }}-
            ${{ runner.os }}-turbo-${{ matrix.node-version }}-

      - name: Install dependencies
        run: yarn install --immutable

      - name: Build dependencies for ${{ matrix.package }}
        run: |
          # Build only the dependencies needed for the target package
          yarn turbo build --filter=@omnitron-dev/${{ matrix.package }}^...

      - name: Build @omnitron-dev/${{ matrix.package }}
        run: yarn workspace @omnitron-dev/${{ matrix.package }} build

      - name: Run tests for @omnitron-dev/${{ matrix.package }}
        run: yarn workspace @omnitron-dev/${{ matrix.package }} test
        env:
          NODE_OPTIONS: --max-old-space-size=4096

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: test-results-${{ matrix.package }}-node-${{ matrix.node-version }}
          path: packages/${{ matrix.package }}/coverage
          retention-days: 7

  test-summary:
    name: Test Summary
    runs-on: ubuntu-latest
    needs: test
    if: always()
    
    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test.result }}" == "success" ]; then
            echo "✅ All tests passed successfully!"
            exit 0
          else
            echo "❌ Some tests failed. Check the logs above."
            exit 1
          fi