
> @omnitron-dev/aether@0.1.0 test
> vitest


 RUN  v3.2.4 /Users/taaliman/projects/omnitron-dev/omni/packages/aether

 ✓ tests/integration/reactive-system-extended.test.ts (1 test) 1ms
 ✓ tests/integration/reactive-system.test.ts (1 test) 1ms
 ✓ tests/unit/control-flow/Switch.spec.ts (9 tests) 2ms
 ✓ tests/unit/di/container.test.ts (20 tests) 5ms
 ✓ tests/unit/control-flow/Suspense.spec.ts (10 tests) 4ms
 ✓ tests/unit/control-flow/Portal.spec.ts (12 tests) 7ms
 ✓ tests/unit/control-flow/Show.spec.ts (20 tests) 15ms
 ✓ tests/unit/control-flow/For.spec.ts (18 tests) 50ms
stderr | tests/integration/complex-scenarios.test.ts > Complex Reactive Scenarios > Circular Reference Prevention > should detect actual circular dependencies
Circular dependency detected: anonymous -> anonymous -> anonymous
Circular dependency in computed 'anonymous': Circular dependency detected: computed_19 -> computed_20 -> computed_19
Circular dependency in computed 'anonymous': Circular dependency detected: computed_19 -> computed_20 -> computed_19

 ✓ tests/integration/store-patterns.test.ts (12 tests) 49ms
 ✓ tests/integration/reactive-comprehensive.test.ts (18 tests) 88ms
 ✓ tests/integration/reactive-spec-compliance.test.ts (19 tests) 97ms
 ✓ tests/integration/complex-scenarios.test.ts (14 tests) 114ms
 ❯ tests/unit/primitives/Tree.test.ts (32 tests | 3 failed) 77ms
   ✓ Tree > Basic functionality > should render tree with correct role 5ms
   ✓ Tree > Basic functionality > should render tree items 3ms
   ✓ Tree > TreeItem > should render with treeitem role 1ms
   ✓ Tree > TreeItem > should not be expanded initially 1ms
   ✓ Tree > TreeItem > should not be selected initially 1ms
   ✓ Tree > TreeItem > should support disabled state 0ms
   ✓ Tree > TreeTrigger > should render as button 0ms
   ✓ Tree > TreeTrigger > should have closed state initially 0ms
   × Tree > TreeTrigger > should expand on click 6ms
     → expected false to be true // Object.is equality
   ✓ Tree > TreeTrigger > should toggle expansion state 15ms
   ✓ Tree > TreeTrigger > should not expand when disabled 0ms
   ✓ Tree > TreeContent > should not render when collapsed 0ms
   × Tree > TreeContent > should render when expanded 3ms
     → expected null to be truthy
   ✓ Tree > TreeLabel > should render label 0ms
   ✓ Tree > TreeLabel > should be clickable 0ms
   ✓ Tree > TreeLabel > should select item on click 3ms
   ✓ Tree > TreeLabel > should not be clickable when disabled 1ms
   ✓ Tree > Expansion control > should support controlled expanded state 1ms
   ✓ Tree > Expansion control > should support defaultExpanded for uncontrolled mode 0ms
   ✓ Tree > Expansion control > should support multiple expanded items 0ms
   ✓ Tree > Selection control > should support controlled selected state 1ms
   ✓ Tree > Selection control > should support defaultSelected for uncontrolled mode 0ms
   ✓ Tree > Selection control > should call onSelectedChange when item is clicked 0ms
   ✓ Tree > Selection control > should only allow single selection 9ms
   × Tree > Nested tree structure > should render nested tree items 5ms
     → expected 1 to be 3 // Object.is equality
   ✓ Tree > Nested tree structure > should support deeply nested structures 1ms
   ✓ Tree > ARIA attributes > should have proper ARIA on tree 0ms
   ✓ Tree > ARIA attributes > should have proper ARIA on tree item 0ms
   ✓ Tree > ARIA attributes > should update ARIA when expanded 4ms
   ✓ Tree > ARIA attributes > should update ARIA when selected 6ms
   ✓ Tree > ARIA attributes > should have proper ARIA on disabled item 0ms
   ✓ Tree > Mixed tree structure > should handle mix of folders and files 1ms
 ✓ tests/unit/di/injectable.test.ts (14 tests) 4ms
 ✓ tests/unit/di/tokens.test.ts (7 tests) 2ms
 ✓ tests/integration/reactive-system.integration.test.ts (16 tests) 253ms
 ✓ tests/unit/di/module.test.ts (15 tests) 8ms
 ✓ tests/unit/patterns/composition.test.ts (18 tests) 6ms
stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should lazily load components
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should show fallback while loading
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should cache loaded components
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/jsx-runtime/jsx-runtime.test.ts (38 tests) 14ms
stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should support route-based code splitting
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should split large components into chunks
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should handle parallel component loading
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch synchronous errors in components
[handleComponentError] Called with error: Sync error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Sync error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch synchronous errors in components
  Error: Error: Sync error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:27:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:32:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Sync error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:27:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:32:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:30:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in render functions
[handleComponentError] Called with error: Render error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Render error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in render functions
  Error: Error: Render error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:44:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:50:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Render error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:44:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:50:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:48:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in lifecycle hooks
[handleComponentError] Called with error: Mount error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Mount error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in lifecycle hooks
  Error: Error: Mount error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:62:17
      at triggerMount [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/lifecycle.ts:99:7[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:81:7[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:69:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
  Error: Error: Mount error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:62:17
      at triggerMount [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/lifecycle.ts:99:7[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:81:7[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:69:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:67:7
      at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should render fallback UI on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should render fallback UI on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:82:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:87:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:82:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:87:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:85:22

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support nested error boundaries with inner catching first
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support nested error boundaries with inner catching first
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:100:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:107:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:100:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:107:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:105:11
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:100:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:107:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:100:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:107:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:105:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should propagate to outer boundary if inner has no handler
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should propagate to outer boundary if inner has no handler
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:126:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:131:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:136:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:126:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:131:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:136:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support multiple levels of error boundaries
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support multiple levels of error boundaries
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:153:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:153:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:153:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:148:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:155:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:153:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should allow different error boundaries for different subtrees
[handleComponentError] Called with error: Left error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Left error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Right error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Right error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should allow different error boundaries for different subtrees
  Error: Error: Left error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:183:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:194:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Left error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:183:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:194:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:192:11
  Error: Error: Right error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:187:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:198:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Right error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:187:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:198:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:196:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support manual error recovery with reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support manual error recovery with reset
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:218:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:240:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:218:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:240:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:236:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support retry with exponential backoff
[handleComponentError] Called with error: Temporary error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Temporary error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support retry with exponential backoff
  Error: Error: Temporary error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:253:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:274:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Temporary error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:253:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:274:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:270:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should limit retry attempts
[handleComponentError] Called with error: Persistent error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Persistent error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should limit retry attempts
  Error: Error: Persistent error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:285:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:307:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Persistent error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:285:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:307:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:303:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should reset error state when children change
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should reset error state when children change
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:317:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:324:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:317:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:324:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:321:24

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture error stack trace
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture error stack trace
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:352:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:357:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:352:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:357:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:355:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should track error count across retries
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should track error count across retries
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:369:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:374:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:369:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:374:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:372:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture component stack information
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture component stack information
  Error: Error: Child error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:385:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:389:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:394:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
  Error: Error: Child error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:385:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:389:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:394:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should provide error context to children via hook
[handleComponentError] Called with error: expected undefined to be defined
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should provide error context to children via hook
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:406:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:424:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:406:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:424:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:422:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should wrap component with error boundary using HOC
[handleComponentError] Called with error: HOC error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: HOC error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should wrap component with error boundary using HOC
  Error: Error: HOC error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:434:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: HOC error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:434:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:368:46

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should allow custom fallback in HOC
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should allow custom fallback in HOC
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:465:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:465:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:368:46

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle errors with no message
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle errors with no message
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:482:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:487:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:482:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:487:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:485:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle non-Error objects thrown
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle non-Error objects thrown
  Error: String error
  Error: String error

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should gracefully handle errors in error handlers
[handleComponentError] Called with error: Original error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation
ErrorBoundary reset
[handleComponentError] Called with error: Original error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should support custom error recovery strategies
[handleComponentError] Called with error: Retry error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Retry error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should support custom error recovery strategies
  Error: Error: Retry error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:532:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:550:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Retry error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:532:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:550:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:547:22

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should handle rapid consecutive errors
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should handle rapid consecutive errors
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:567:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:572:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:567:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:572:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:570:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should maintain separate error states for multiple boundaries
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should maintain separate error states for multiple boundaries
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:583:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:593:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:583:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:593:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:591:7
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:587:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:598:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:587:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:598:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:596:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should clean up error state on component unmount
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should clean up error state on component unmount
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:616:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:621:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:616:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:621:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:619:24

 ✓ tests/unit/patterns/error-handling.test.ts (27 tests) 43ms
 ✓ tests/unit/router/route-matcher.test.ts (34 tests) 5ms
 ✓ tests/unit/forms/create-form.spec.ts (26 tests) 68ms
 ✓ tests/unit/router/router.test.ts (11 tests) 6ms
 ✓ tests/unit/router/Link.test.ts (20 tests) 38ms
 ✓ tests/unit/utils/styles.spec.ts (31 tests) 4ms
 ✓ tests/unit/utils/events.spec.ts (15 tests) 8ms
 ✓ tests/unit/utils/binding.spec.ts (17 tests) 6ms
 ✓ tests/unit/utils/classes.spec.ts (30 tests) 4ms
 ✓ tests/unit/utils/directive.spec.ts (16 tests) 8ms
 ✓ tests/unit/patterns/performance.test.ts (26 tests) 354ms
 ✓ tests/unit/primitives/Alert.test.ts (55 tests) 14ms
 ❯ tests/unit/primitives/Accordion.test.ts (11 tests | 3 failed) 23ms
   ✓ Accordion > Single type > should render accordion with single type 6ms
   × Accordion > Single type > should toggle items in single mode 6ms
     → expected 'Content 1' to be 'Content 2' // Object.is equality
   × Accordion > Single type > should support collapsible mode 5ms
     → expected false to be true // Object.is equality
   ✓ Accordion > Single type > should not collapse when collapsible is false 1ms
   ✓ Accordion > Multiple type > should allow multiple items open 1ms
   × Accordion > Multiple type > should toggle items independently in multiple mode 1ms
     → expected 1 to be 2 // Object.is equality
   ✓ Accordion > Multiple type > should support controlled value in multiple mode 1ms
   ✓ Accordion > Disabled state > should disable entire accordion 0ms
   ✓ Accordion > Disabled state > should disable individual items 1ms
   ✓ Accordion > Accessibility > should have proper ARIA attributes 0ms
   ✓ Accordion > forceMount > should keep content mounted when forceMount is true 0ms
 ✓ tests/unit/primitives/AlertDialog.test.ts (70 tests) 20ms
 ✓ tests/unit/primitives/Affix.test.ts (39 tests) 78ms
 ✓ tests/unit/primitives/AspectRatio.test.ts (27 tests) 16ms
 ✓ tests/unit/primitives/Badge.test.ts (46 tests) 16ms
 ✓ tests/unit/primitives/Avatar.test.ts (42 tests) 55ms
 ✓ tests/unit/primitives/Box.test.ts (46 tests) 17ms
 ✓ tests/unit/primitives/Card.test.ts (73 tests) 15ms
 ✓ tests/unit/primitives/Breadcrumb.test.ts (73 tests) 27ms
 ✓ tests/unit/primitives/Center.test.ts (42 tests) 16ms
 ❯ tests/unit/primitives/Carousel.test.ts (86 tests | 1 failed) 50ms
   ✓ Carousel > Carousel Root Rendering Tests > should render Carousel root 4ms
   ✓ Carousel > Carousel Root Rendering Tests > should render as div element 1ms
   ✓ Carousel > Carousel Root Rendering Tests > should have role="region" 0ms
   ✓ Carousel > Carousel Root Rendering Tests > should have aria-roledescription="carousel" 0ms
   ✓ Carousel > Carousel Root Rendering Tests > should have aria-label 0ms
   ✓ Carousel > Carousel Root Rendering Tests > should render with horizontal orientation by default 0ms
   ✓ Carousel > Carousel Root Rendering Tests > should render with vertical orientation 0ms
   ✓ Carousel > Carousel Root Rendering Tests > should render with function children (Pattern 17) 1ms
   ✓ Carousel > Carousel Root Rendering Tests > should render multiple children using function (Pattern 17) 1ms
   ✓ Carousel > Carousel Root Rendering Tests > should render with empty children 0ms
   ✓ Carousel > Carousel Context Tests > should provide currentIndex signal through context 1ms
   ✓ Carousel > Carousel Context Tests > should provide totalSlides signal through context 0ms
   ✓ Carousel > Carousel Context Tests > should provide orientation through context 0ms
   ✓ Carousel > Carousel Context Tests > should provide loop flag through context 0ms
   ✓ Carousel > Carousel Context Tests > should provide navigation functions through context 0ms
   ✓ Carousel > Carousel Context Tests > should provide canGoPrevious computed signal 0ms
   ✓ Carousel > Carousel Context Tests > should provide canGoNext computed signal 0ms
   ✓ Carousel > Carousel Context Tests > should allow all sub-components to access context 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should work in uncontrolled mode with defaultValue 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should work in controlled mode with value prop 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should call onValueChange when slide changes 5ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should use controlled value over internal state 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should default to index 0 when no value provided 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should handle negative index with loop 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should clamp index when not looping 0ms
   ✓ Carousel > Controlled/Uncontrolled Tests > should handle empty slides gracefully 0ms
   ✓ Carousel > CarouselViewport Tests > should render as div 0ms
   ✓ Carousel > CarouselViewport Tests > should have role="presentation" 0ms
   ✓ Carousel > CarouselViewport Tests > should have data-orientation from context 0ms
   ✓ Carousel > CarouselViewport Tests > should render children 0ms
   ✓ Carousel > CarouselViewport Tests > should accept additional props 0ms
   ✓ Carousel > CarouselViewport Tests > should render with empty children 0ms
   ✓ Carousel > CarouselSlide Tests > should render as div 0ms
   ✓ Carousel > CarouselSlide Tests > should have role="group" 0ms
   ✓ Carousel > CarouselSlide Tests > should have aria-roledescription="slide" 0ms
   ✓ Carousel > CarouselSlide Tests > should have aria-label with position 0ms
   ✓ Carousel > CarouselSlide Tests > should mark active slide with data-active 0ms
   ✓ Carousel > CarouselSlide Tests > should set aria-hidden on inactive slides 0ms
   ✓ Carousel > CarouselSlide Tests > should render children 0ms
   ✓ Carousel > CarouselSlide Tests > should register with carousel context 0ms
   ✓ Carousel > CarouselSlide Tests > should accept additional props 0ms
   ✓ Carousel > CarouselSlide Tests > should handle multiple slides correctly 0ms
   ✓ Carousel > CarouselPrevious Tests > should render as button 0ms
   ✓ Carousel > CarouselPrevious Tests > should have type="button" 0ms
   ✓ Carousel > CarouselPrevious Tests > should have aria-label 0ms
   ✓ Carousel > CarouselPrevious Tests > should navigate to previous slide on click 0ms
   ✓ Carousel > CarouselPrevious Tests > should be disabled at first slide when not looping 0ms
   ✓ Carousel > CarouselPrevious Tests > should not be disabled at first slide when looping 0ms
   ✓ Carousel > CarouselPrevious Tests > should render children 0ms
   × Carousel > CarouselPrevious Tests > should call custom onClick handler 5ms
     → expected "spy" to be called at least once
   ✓ Carousel > CarouselNext Tests > should render as button 0ms
   ✓ Carousel > CarouselNext Tests > should have type="button" 0ms
   ✓ Carousel > CarouselNext Tests > should have aria-label 0ms
   ✓ Carousel > CarouselNext Tests > should navigate to next slide on click 1ms
   ✓ Carousel > CarouselNext Tests > should be disabled at last slide when not looping 0ms
   ✓ Carousel > CarouselNext Tests > should not be disabled at last slide when looping 0ms
   ✓ Carousel > CarouselNext Tests > should render children 0ms
   ✓ Carousel > CarouselNext Tests > should call custom onClick handler 0ms
   ✓ Carousel > CarouselIndicators Tests > should render as div 0ms
   ✓ Carousel > CarouselIndicators Tests > should have role="group" 0ms
   ✓ Carousel > CarouselIndicators Tests > should have aria-label 0ms
   ✓ Carousel > CarouselIndicators Tests > should generate indicator buttons for each slide 0ms
   ✓ Carousel > CarouselIndicators Tests > should mark active indicator with data-active 0ms
   ✓ Carousel > CarouselIndicators Tests > should set aria-current on active indicator 5ms
   ✓ Carousel > CarouselIndicators Tests > should navigate to specific slide on indicator click 1ms
   ✓ Carousel > CarouselIndicators Tests > should have aria-label on each indicator button 0ms
   ✓ Carousel > Navigation Tests > should navigate forward through slides 1ms
   ✓ Carousel > Navigation Tests > should navigate backward through slides 1ms
   ✓ Carousel > Navigation Tests > should wrap to first slide when looping forward 1ms
   ✓ Carousel > Navigation Tests > should wrap to last slide when looping backward 0ms
   ✓ Carousel > Navigation Tests > should stay at last slide when not looping 0ms
   ✓ Carousel > Navigation Tests > should stay at first slide when not looping 0ms
   ✓ Carousel > Navigation Tests > should navigate to specific slide via goTo 1ms
   ✓ Carousel > Navigation Tests > should update indicators when navigating 1ms
   ✓ Carousel > Autoplay Tests > should not autoplay by default 0ms
   ✓ Carousel > Autoplay Tests > should autoplay when autoplay prop is set 0ms
   ✓ Carousel > Autoplay Tests > should reset autoplay on manual navigation 1ms
   ✓ Carousel > Autoplay Tests > should continue autoplay after reaching end when looping 0ms
   ✓ Carousel > Autoplay Tests > should handle autoplay with single slide 0ms
   ✓ Carousel > Autoplay Tests > should not autoplay when autoplay is 0 0ms
   ✓ Carousel > Integration Tests > should render complete carousel with all components 1ms
   ✓ Carousel > Integration Tests > should synchronize all navigation methods 1ms
   ✓ Carousel > Integration Tests > should handle controlled mode with external state 0ms
   ✓ Carousel > Integration Tests > should work with vertical orientation 0ms
   ✓ Carousel > Integration Tests > should handle dynamic slide addition (Pattern 17 slide registration) 0ms
   ✓ Carousel > Integration Tests > should handle empty carousel gracefully 0ms
 ❯ tests/unit/primitives/Checkbox.spec.ts (55 tests | 1 failed) 90ms
   ✓ Checkbox > Exports > should export Checkbox component 1ms
   ✓ Checkbox > Exports > should export CheckboxIndicator component 0ms
   ✓ Checkbox > Exports > should attach Indicator as Checkbox.Indicator 0ms
   ✓ Checkbox > Structure > should render checkbox as button with type="button" 8ms
   ✓ Checkbox > Structure > should render with role="checkbox" 1ms
   ✓ Checkbox > Structure > should render with aria-checked attribute 1ms
   ✓ Checkbox > Structure > should render with data-state attribute 0ms
   ✓ Checkbox > Structure > should accept custom id 1ms
   ✓ Checkbox > State - Uncontrolled > should default to unchecked when defaultChecked is not provided 0ms
   ✓ Checkbox > State - Uncontrolled > should render unchecked with defaultChecked=false 0ms
   ✓ Checkbox > State - Uncontrolled > should render checked with defaultChecked=true 0ms
   ✓ Checkbox > State - Uncontrolled > should toggle checked state on click 1ms
   ✓ Checkbox > State - Uncontrolled > should call onCheckedChange when state changes 1ms
   ✓ Checkbox > State - Controlled > should support controlled mode with checked prop 1ms
   ✓ Checkbox > State - Controlled > should update when controlled signal changes 0ms
   ✓ Checkbox > State - Controlled > should call onCheckedChange in controlled mode 0ms
   ✓ Checkbox > Indeterminate State > should render indeterminate state with defaultChecked="indeterminate" 0ms
   ✓ Checkbox > Indeterminate State > should support controlled indeterminate state 0ms
   ✓ Checkbox > Indeterminate State > should transition from indeterminate to checked on click 0ms
   ✓ Checkbox > Indeterminate State > should call onCheckedChange with true when clicked from indeterminate 0ms
   ✓ Checkbox > Disabled State > should render disabled state 0ms
   ✓ Checkbox > Disabled State > should not toggle when disabled and clicked 0ms
   ✓ Checkbox > Disabled State > should not call onCheckedChange when disabled 0ms
   ✓ Checkbox > Required State > should have aria-required when required 0ms
   ✓ Checkbox > Required State > should not have aria-required when not required 0ms
   ✓ Checkbox > ARIA & Accessibility > should set aria-checked to "true" when checked 0ms
   ✓ Checkbox > ARIA & Accessibility > should set aria-checked to "false" when unchecked 0ms
   ✓ Checkbox > ARIA & Accessibility > should set aria-checked to "mixed" when indeterminate 0ms
   ✓ Checkbox > ARIA & Accessibility > should set data-state to "checked" when checked 0ms
   ✓ Checkbox > ARIA & Accessibility > should set data-state to "unchecked" when unchecked 0ms
   ✓ Checkbox > ARIA & Accessibility > should set data-state to "indeterminate" when indeterminate 0ms
   ✓ Checkbox > ARIA & Accessibility > should set data-disabled when disabled 0ms
   ✓ Checkbox > ARIA & Accessibility > should not set data-disabled when not disabled 0ms
   ✓ Checkbox > Keyboard Interaction > should toggle on Space key 0ms
   ✓ Checkbox > Keyboard Interaction > should toggle on Enter key 0ms
   ✓ Checkbox > Keyboard Interaction > should not toggle when disabled on Space key 0ms
   ✓ Checkbox > Keyboard Interaction > should not toggle when disabled on Enter key 0ms
   ✓ Checkbox > Keyboard Interaction > should call onCheckedChange on keyboard toggle 0ms
   ✓ Checkbox > Keyboard Interaction > should ignore other keys 0ms
   ✓ Checkbox > Form Integration > should render hidden input with name and value 1ms
   ✓ Checkbox > Form Integration > should update hidden input value when checked 1ms
   ✓ Checkbox > Form Integration > should default value to "on" when value prop not provided 0ms
   ✓ Checkbox > Form Integration > should not render hidden input when name is not provided 0ms
   ✓ Checkbox > Form Integration > should set required on hidden input when required 0ms
   ✓ Checkbox > Form Integration > should set disabled on hidden input when disabled 0ms
   ✓ Checkbox > Form Integration > should not check hidden input when indeterminate 0ms
   ✓ Checkbox > Checkbox.Indicator > should render indicator only when checked 10ms
   ✓ Checkbox > Checkbox.Indicator > should not render indicator when unchecked 8ms
   ✓ Checkbox > Checkbox.Indicator > should render indicator when indeterminate 1ms
   ✓ Checkbox > Checkbox.Indicator > should render indicator with forceMount even when unchecked 6ms
   ✓ Checkbox > Checkbox.Indicator > should set data-state to "checked" on indicator when checked 5ms
   ✓ Checkbox > Checkbox.Indicator > should set data-state to "indeterminate" on indicator when indeterminate 4ms
   ✓ Checkbox > Checkbox.Indicator > should accept custom children (checkmark icon) 9ms
   × Checkbox > Checkbox.Indicator > should update indicator visibility when checkbox toggles 15ms
     → expected 'none' to be '' // Object.is equality
   ✓ Checkbox > Checkbox.Indicator > should keep indicator visible with forceMount during all states 6ms
 ✓ tests/unit/primitives/Checkbox.test.ts (60 tests) 31ms
 ✓ tests/unit/primitives/Code.test.ts (46 tests) 21ms
 ✓ tests/unit/primitives/ColorPicker.test.ts (82 tests) 34ms
 ✓ tests/unit/primitives/Calendar.test.ts (105 tests) 273ms
 ✓ tests/unit/primitives/CommandPalette.test.ts (31 tests | 1 skipped) 25ms
 ❯ tests/unit/primitives/Collapsible.test.ts (30 tests | 2 failed) 72ms
   ✓ Collapsible > Basic functionality > should render collapsible with default closed state 5ms
   ✓ Collapsible > Basic functionality > should render collapsible with default open state 1ms
   ✓ Collapsible > Basic functionality > should render trigger and content components 1ms
   ✓ Collapsible > Basic functionality > should toggle open state on trigger click 4ms
   ✓ Collapsible > Basic functionality > should show content when open 1ms
   ✓ Collapsible > Basic functionality > should hide content when closed 0ms
   ✓ Collapsible > Controlled mode > should support controlled open state 11ms
   ✓ Collapsible > Controlled mode > should call onOpenChange callback 5ms
   ✓ Collapsible > Controlled mode > should work with both controlled state and callback 5ms
   ✓ Collapsible > Disabled state > should render disabled state 1ms
   ✓ Collapsible > Disabled state > should not toggle when disabled 2ms
   ✓ Collapsible > Disabled state > should not call onOpenChange when disabled 3ms
   ✓ Collapsible > forceMount > should keep content mounted when forceMount is true 0ms
   ✓ Collapsible > forceMount > should show content when opened with forceMount 2ms
   ✓ Collapsible > forceMount > should apply display none style when closed without forceMount 2ms
   ✓ Collapsible > Accessibility > should have proper ARIA attributes on trigger 0ms
   ✓ Collapsible > Accessibility > should update aria-expanded when toggled 2ms
   ✓ Collapsible > Accessibility > should link trigger and content with IDs 0ms
   × Collapsible > Accessibility > should have data-state attributes 9ms
     → expected 'closed' to be 'open' // Object.is equality
   ✓ Collapsible > Custom props > should pass through custom props to root 1ms
   ✓ Collapsible > Custom props > should pass through custom props to trigger 0ms
   ✓ Collapsible > Custom props > should pass through custom props to content 0ms
   ✓ Collapsible > Custom props > should merge custom styles with content styles 0ms
   ✓ Collapsible > Edge cases > should handle rapid toggling 4ms
   ✓ Collapsible > Edge cases > should handle no content 0ms
   ✓ Collapsible > Edge cases > should handle empty children in content 0ms
   ✓ Collapsible > Edge cases > should handle switching from uncontrolled to controlled 2ms
   ✓ Collapsible > Edge cases > should handle multiple content sections 1ms
   × Collapsible > State synchronization > should synchronize state between trigger and content 3ms
     → expected 'closed' to be 'open' // Object.is equality
   ✓ Collapsible > State synchronization > should update all states when controlled value changes 3ms
 ❯ tests/unit/primitives/Combobox.test.ts (82 tests | 3 failed) 52ms
   ✓ Combobox > Rendering Tests > should render Combobox root 4ms
   ✓ Combobox > Rendering Tests > should render as div element 1ms
   ✓ Combobox > Rendering Tests > should render with disabled state 1ms
   ✓ Combobox > Rendering Tests > should not have data-disabled when not disabled 0ms
   ✓ Combobox > Rendering Tests > should render with children using function (Pattern 17) 1ms
   ✓ Combobox > Rendering Tests > should render multiple children using function (Pattern 17) 2ms
   ✓ Combobox > Rendering Tests > should render all sub-components together 1ms
   ✓ Combobox > Rendering Tests > should render with empty children 0ms
   ✓ Combobox > Rendering Tests > should render with closed state by default 0ms
   ✓ Combobox > Rendering Tests > should render with open state when defaultOpen is true 0ms
   ✓ Combobox > Rendering Tests > should render with custom className 0ms
   ✓ Combobox > Rendering Tests > should render ComboboxIcon 0ms
   ✓ Combobox > Context Tests > should provide value signal through context 0ms
   ✓ Combobox > Context Tests > should provide open state through context 0ms
   ✓ Combobox > Context Tests > should provide disabled state through context 0ms
   ✓ Combobox > Context Tests > should allow sub-components to access context 0ms
   ✓ Combobox > Context Tests > should provide trigger ID through context 0ms
   ✓ Combobox > Context Tests > should provide content ID through context 0ms
   ✓ Combobox > Context Tests > should link input to content via aria-controls 0ms
   ✓ Combobox > Context Tests > should register and track item values 1ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should work in uncontrolled mode with defaultValue 0ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should work in controlled mode with value prop 0ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should call onValueChange callback when value changes 2ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should use controlled value over internal state 0ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should work in controlled open state 0ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should call onOpenChange callback when open state changes 1ms
   ✓ Combobox > Controlled/Uncontrolled Tests > should default to null value when no value provided 0ms
   ✓ Combobox > ComboboxTrigger Tests > should render as div 0ms
   ✓ Combobox > ComboboxTrigger Tests > should have data-state attribute 0ms
   ✓ Combobox > ComboboxTrigger Tests > should have data-disabled when combobox is disabled 0ms
   ✓ Combobox > ComboboxTrigger Tests > should render children 0ms
   ✓ Combobox > ComboboxTrigger Tests > should have unique ID 0ms
   ✓ Combobox > ComboboxTrigger Tests > should accept additional props 0ms
   ✓ Combobox > ComboboxInput Tests > should render as input element 0ms
   ✓ Combobox > ComboboxInput Tests > should have role="combobox" 0ms
   ✓ Combobox > ComboboxInput Tests > should have aria-expanded attribute 0ms
   ✓ Combobox > ComboboxInput Tests > should have aria-autocomplete="list" 0ms
   ✓ Combobox > ComboboxInput Tests > should be disabled when combobox is disabled 0ms
   ✓ Combobox > ComboboxInput Tests > should open combobox on focus 1ms
   ✓ Combobox > ComboboxInput Tests > should call onInput callback 1ms
   ✓ Combobox > ComboboxInput Tests > should have value prop 0ms
   ✓ Combobox > ComboboxInput Tests > should have data-state attribute 0ms
   ✓ Combobox > ComboboxInput Tests > should have type="text" 0ms
   ✓ Combobox > ComboboxContent Tests > should render when open 0ms
   ✓ Combobox > ComboboxContent Tests > should not render when closed 0ms
   ✓ Combobox > ComboboxContent Tests > should have role="listbox" 0ms
   ✓ Combobox > ComboboxContent Tests > should have data-state="open" 0ms
   ✓ Combobox > ComboboxContent Tests > should render in portal by default 0ms
   ✓ Combobox > ComboboxContent Tests > should not render in portal when portal=false 0ms
   ✓ Combobox > ComboboxContent Tests > should apply zIndex style 0ms
   ✓ Combobox > ComboboxContent Tests > should have absolute position 0ms
   ✓ Combobox > ComboboxViewport Tests > should render as div 0ms
   ✓ Combobox > ComboboxViewport Tests > should render children 0ms
   ✓ Combobox > ComboboxViewport Tests > should accept additional props 0ms
   ✓ Combobox > ComboboxItem Tests > should render as div 0ms
   ✓ Combobox > ComboboxItem Tests > should have role="option" 0ms
   ✓ Combobox > ComboboxItem Tests > should have aria-selected when selected 0ms
   ✓ Combobox > ComboboxItem Tests > should have data-state="checked" when selected 0ms
   ✓ Combobox > ComboboxItem Tests > should have data-state="unchecked" when not selected 0ms
   ✓ Combobox > ComboboxItem Tests > should call selectItem on click 1ms
   ✓ Combobox > ComboboxItem Tests > should not call selectItem when disabled 0ms
   ✓ Combobox > ComboboxItem Tests > should have data-disabled when disabled 0ms
   × Combobox > ComboboxItem Tests > should have data-highlighted when mouse enters 13ms
     → expected false to be true // Object.is equality
   ✓ Combobox > ComboboxItem Tests > should render children 0ms
   ✓ Combobox > ComboboxEmpty Tests > should render as div 0ms
   ✓ Combobox > ComboboxEmpty Tests > should have role="status" 0ms
   ✓ Combobox > ComboboxEmpty Tests > should render children 0ms
   ✓ Combobox > Keyboard Navigation Tests > should open on ArrowDown 1ms
   ✓ Combobox > Keyboard Navigation Tests > should open on ArrowUp 0ms
   ✓ Combobox > Keyboard Navigation Tests > should close on Escape 1ms
   ✓ Combobox > Keyboard Navigation Tests > should prevent default on ArrowDown 1ms
   ✓ Combobox > Keyboard Navigation Tests > should prevent default on ArrowUp 4ms
   ✓ Combobox > Keyboard Navigation Tests > should prevent default on Enter 1ms
   ✓ Combobox > Keyboard Navigation Tests > should prevent default on Escape 0ms
   × Combobox > Keyboard Navigation Tests > should navigate down through items with ArrowDown 1ms
     → expected false to be true // Object.is equality
   × Combobox > Keyboard Navigation Tests > should wrap to first item when pressing ArrowDown on last item 1ms
     → expected false to be true // Object.is equality
   ✓ Combobox > Keyboard Navigation Tests > should select item on Enter when item is highlighted 1ms
   ✓ Combobox > Edge Cases > should handle empty children 0ms
   ✓ Combobox > Edge Cases > should not open when disabled 0ms
   ✓ Combobox > Edge Cases > should handle clicking disabled items 0ms
   ✓ Combobox > Edge Cases > should focus input after item selection 1ms
   ✓ Combobox > Edge Cases > should reset highlighted index on input 1ms
 ✓ tests/unit/primitives/Container.test.ts (59 tests) 21ms
 ✓ tests/unit/primitives/ContextMenu.test.ts (71 tests) 18ms
 ✓ tests/unit/primitives/Dialog.spec.ts (46 tests) 15ms
 ✓ tests/unit/primitives/DateRangePicker.test.ts (84 tests) 38ms
 ✓ tests/unit/primitives/Divider.test.ts (65 tests) 37ms
 ❯ tests/unit/primitives/DatePicker.test.ts (79 tests | 10 failed) 42ms
   ✓ DatePicker > Rendering Tests > should render DatePicker root 4ms
   ✓ DatePicker > Rendering Tests > should render with children using function (Pattern 17) 1ms
   × DatePicker > Rendering Tests > should render multiple children using function (Pattern 17) 5ms
     → expected null to be truthy
   × DatePicker > Rendering Tests > should render all sub-components together 3ms
     → expected null to be truthy
   ✓ DatePicker > Rendering Tests > should render with empty children 1ms
   ✓ DatePicker > Rendering Tests > should render with disabled state 0ms
   ✓ DatePicker > Rendering Tests > should not be disabled by default 0ms
   ✓ DatePicker > Rendering Tests > should render with default value 10ms
   ✓ DatePicker > Rendering Tests > should render with value prop 1ms
   ✓ DatePicker > Rendering Tests > should render with minDate and maxDate props 0ms
   ✓ DatePicker > Context Tests > should provide value signal through context 0ms
   ✓ DatePicker > Context Tests > should provide disabled state through context 0ms
   ✓ DatePicker > Context Tests > should provide minDate through context 0ms
   ✓ DatePicker > Context Tests > should provide maxDate through context 0ms
   ✓ DatePicker > Context Tests > should provide weekStartsOn through context 0ms
   ✓ DatePicker > Context Tests > should default weekStartsOn to 0 (Sunday) 0ms
   ✓ DatePicker > Context Tests > should provide isDateDisabled function through context 0ms
   × DatePicker > Context Tests > should allow sub-components to access context 0ms
     → expected null to be truthy
   ✓ DatePicker > Controlled/Uncontrolled Tests > should work in uncontrolled mode with defaultValue 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should work in controlled mode with value prop 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should call onValueChange callback when value changes 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should use controlled value over internal state 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should handle null value 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should handle undefined value 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should default to null when no value provided 0ms
   ✓ DatePicker > Controlled/Uncontrolled Tests > should respect defaultMonth prop 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should render as button 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should have data-datepicker-trigger attribute 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should render children 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should respect disabled state 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should not be disabled by default 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should accept additional props 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should work with value and icon children 0ms
   ✓ DatePicker > DatePickerTrigger Tests > should render multiple children in trigger 0ms
   ✓ DatePicker > DatePickerValue Tests > should render as span 0ms
   ✓ DatePicker > DatePickerValue Tests > should display placeholder when no date selected 0ms
   ✓ DatePicker > DatePickerValue Tests > should display custom placeholder 0ms
   ✓ DatePicker > DatePickerValue Tests > should display selected date in default format 0ms
   ✓ DatePicker > DatePickerValue Tests > should support custom render function 0ms
   ✓ DatePicker > DatePickerValue Tests > should render custom render function with null date 0ms
   ✓ DatePicker > DatePickerValue Tests > should have data-placeholder attribute when no date 0ms
   ✓ DatePicker > DatePickerValue Tests > should not have data-placeholder attribute when date is selected 0ms
   ✓ DatePicker > DatePickerValue Tests > should render static children instead of date 0ms
   ✓ DatePicker > DatePickerValue Tests > should accept additional props 0ms
   ✓ DatePicker > DatePickerIcon Tests > should render as span 0ms
   ✓ DatePicker > DatePickerIcon Tests > should have aria-hidden="true" 0ms
   ✓ DatePicker > DatePickerIcon Tests > should render children 0ms
   ✓ DatePicker > DatePickerIcon Tests > should accept additional props 0ms
   ✓ DatePicker > DatePickerIcon Tests > should render SVG icon 0ms
   × DatePicker > DatePickerContent Tests > should render content when opened 0ms
     → expected null to be truthy
   × DatePicker > DatePickerContent Tests > should render children when opened 1ms
     → the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
   × DatePicker > DatePickerContent Tests > should accept additional props 1ms
     → expected undefined to be 'date-content' // Object.is equality
   × DatePicker > DatePickerContent Tests > should wrap Calendar component 0ms
     → expected null to be truthy
   × DatePicker > DatePickerContent Tests > should render multiple children 0ms
     → the given combination of arguments (undefined and string) is invalid for this assertion. You can use an array, a map, an object, a set, a string, or a weakset instead of a string
   ✓ DatePicker > DatePickerCalendar Tests > should render calendar 0ms
   ✓ DatePicker > DatePickerCalendar Tests > should pass value to Calendar 0ms
   ✓ DatePicker > DatePickerCalendar Tests > should pass minDate to Calendar 0ms
   ✓ DatePicker > DatePickerCalendar Tests > should pass maxDate to Calendar 0ms
   ✓ DatePicker > DatePickerCalendar Tests > should pass weekStartsOn to Calendar 0ms
   ✓ DatePicker > DatePickerCalendar Tests > should pass disabled state to Calendar 0ms
   ✓ DatePicker > Date Constraints Tests > should respect minDate constraint 0ms
   ✓ DatePicker > Date Constraints Tests > should respect maxDate constraint 0ms
   ✓ DatePicker > Date Constraints Tests > should respect both minDate and maxDate 0ms
   ✓ DatePicker > Date Constraints Tests > should use isDateDisabled function 0ms
   ✓ DatePicker > Date Constraints Tests > should allow disabling weekends 0ms
   ✓ DatePicker > Date Constraints Tests > should allow disabling specific dates 0ms
   ✓ DatePicker > Date Constraints Tests > should handle minDate same as maxDate 0ms
   ✓ DatePicker > Date Constraints Tests > should handle past dates with maxDate 0ms
   × DatePicker > Integration Tests > should render complete DatePicker with all components 1ms
     → expected null to be truthy
   ✓ DatePicker > Integration Tests > should coordinate trigger and value display 1ms
   ✓ DatePicker > Integration Tests > should render with custom placeholder and icon 0ms
   ✓ DatePicker > Integration Tests > should handle date formatting with custom render 0ms
   × DatePicker > Integration Tests > should work with all constraints together 1ms
     → expected null to be truthy
   ✓ DatePicker > Edge Cases > should handle empty children 0ms
   ✓ DatePicker > Edge Cases > should handle leap year dates 0ms
   ✓ DatePicker > Edge Cases > should handle year boundaries 0ms
   ✓ DatePicker > Edge Cases > should handle very old dates 0ms
   ✓ DatePicker > Edge Cases > should handle future dates 0ms
   ✓ DatePicker > Edge Cases > should use default props when missing 0ms
 ✓ tests/unit/primitives/DropdownMenu.test.ts (57 tests) 13ms
stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should create drawer with default props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept open prop (controlled)
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept defaultOpen prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept onOpenChange callback
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept side prop - right
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept side prop - left
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept side prop - top
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept side prop - bottom
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should use default side of right
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept modal prop - true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept modal prop - false
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should use default modal of true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept closeOnOutsideClick prop - true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept closeOnOutsideClick prop - false
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should use default closeOnOutsideClick of true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept closeOnEscape prop - true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept closeOnEscape prop - false
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should use default closeOnEscape of true
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept children as single element
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Drawer Root > should accept children as array
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should create trigger with children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should accept string children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should accept additional props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should accept style prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should accept id prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should accept disabled prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerTrigger > should have type button
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should create overlay
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should accept children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should accept additional props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should accept style prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should not render when closed
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should render when open and modal
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerOverlay > should not render when non-modal
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should create content with children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should accept string children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should accept additional props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should accept style prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should accept id prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should not render when closed
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should render when open
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerContent > should accept nested children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should create close button
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should use default children (×)
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should accept custom children
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should accept additional props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should accept style prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should accept disabled prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > DrawerClose > should have type button
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose all sub-components
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose with all sides
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose with modal mode
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose with non-modal mode
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose with all props
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Composition > should compose using attached components
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Controlled vs Uncontrolled > should work in uncontrolled mode with defaultOpen
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Controlled vs Uncontrolled > should work in controlled mode with open prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Controlled vs Uncontrolled > should work with only open prop
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Controlled vs Uncontrolled > should work with only onOpenChange
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Type Safety > should enforce valid side values
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Type Safety > should accept boolean props correctly
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Type Safety > should accept callback types correctly
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have aria-expanded on trigger
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have role dialog on content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have aria-modal on content when modal
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have aria-modal false on content when non-modal
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have aria-hidden on overlay
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > ARIA Attributes > should have aria-label on close button
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-drawer on root
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-state on root
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-drawer-trigger on trigger
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-drawer-overlay on overlay
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-drawer-content on content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-side on overlay
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-side on content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Data Attributes > should have data-drawer-close on close button
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Modal Mode > should render overlay in modal mode
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Modal Mode > should not render overlay in non-modal mode
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Modal Mode > should support modal with all sides
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Keyboard Support > should support Escape key to close
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Keyboard Support > should support disabling Escape key
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Outside Click > should support closing on outside click
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Outside Click > should support disabling outside click close
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Outside Click > should not close when clicking content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle rapid open/close
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle content without title
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle content without description
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle empty content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle multiple triggers
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle multiple close buttons
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle long content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle special characters in content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle unicode in content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Edge Cases > should handle nested drawers
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Focus Management > should set tabIndex on content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Drawer.spec.ts > Drawer Primitive > Focus Management > should support focusable elements in content
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Drawer components must be used within a Drawer
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Empty.test.ts (63 tests) 16ms
 ✓ tests/unit/primitives/Drawer.spec.ts (123 tests) 49ms
 ✓ tests/unit/primitives/Flex.test.ts (68 tests) 17ms
stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormLabel > should create FormLabel with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > should create FormControl with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > should enhance child with accessibility props
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should accept asChild prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should merge props into child when asChild is true
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should handle invalid child with asChild gracefully
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should work without asChild (default behavior)
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should merge accessibility props correctly with asChild
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormMessage > should create FormMessage with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormMessage > should support forceMount prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormDescription > should create FormDescription with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should allow composing all sub-components
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should work with nested fields
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should work with asChild in composition
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Type Safety > should accept all FormField props
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Type Safety > should accept FormControl with asChild prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Form.spec.ts (33 tests) 15ms
 ❯ tests/unit/primitives/Editable.test.ts (64 tests | 6 failed) 145ms
   ✓ Editable > Component Exports > should export Editable component 1ms
   ✓ Editable > Component Exports > should export EditablePreview component 0ms
   ✓ Editable > Component Exports > should export EditableInput component 0ms
   ✓ Editable > Component Exports > should export EditableControls component 0ms
   ✓ Editable > Component Exports > should export EditableSubmit component 0ms
   ✓ Editable > Component Exports > should export EditableCancel component 0ms
   ✓ Editable > Component Exports > should have sub-components attached 0ms
   ✓ Editable > Basic Rendering > should render container with data-editable attribute 4ms
   ✓ Editable > Basic Rendering > should render preview in display mode 1ms
   ✓ Editable > Basic Rendering > should not render input in display mode 1ms
   ✓ Editable > Display Mode vs Edit Mode > should start in display mode by default 0ms
   ✓ Editable > Display Mode vs Edit Mode > should start in edit mode when startWithEditView is true 1ms
   ✓ Editable > Display Mode vs Edit Mode > should switch to edit mode when preview is clicked 2ms
   × Editable > Display Mode vs Edit Mode > should render input in edit mode 8ms
     → expected '' to be 'Test' // Object.is equality
   × Editable > Display Mode vs Edit Mode > should hide preview in edit mode 2ms
     → expected '' to be 'none' // Object.is equality
   ✓ Editable > Controlled Mode > should use controlled value 0ms
   ✓ Editable > Controlled Mode > should update when signal changes 2ms
   ✓ Editable > Controlled Mode > should call onValueChange when submitted 4ms
   ✓ Editable > Uncontrolled Mode > should use defaultValue 0ms
   ✓ Editable > Uncontrolled Mode > should start with empty value if no defaultValue 0ms
   ✓ Editable > onValueChange Callback > should call onValueChange when value is submitted 3ms
   ✓ Editable > onValueChange Callback > should work with vi.fn() spy 5ms
   ✓ Editable > Submit on Enter > should submit value on Enter key 2ms
   ✓ Editable > Submit on Enter > should prevent default on Enter key 3ms
   ✓ Editable > Submit on Enter > should not submit on Shift+Enter 3ms
   ✓ Editable > Submit on Enter > should return to preview mode after submit 5ms
   ✓ Editable > Cancel on Escape > should cancel edit on Escape key 2ms
   ✓ Editable > Cancel on Escape > should prevent default on Escape key 2ms
   ✓ Editable > Cancel on Escape > should revert to original value on cancel 9ms
   ✓ Editable > Cancel on Escape > should return to preview mode after cancel 6ms
   ✓ Editable > Submit on Blur > should submit on blur by default 2ms
   ✓ Editable > Submit on Blur > should not submit on blur when submitOnBlur is false 3ms
   ✓ Editable > Disabled State > should have data-disabled attribute 0ms
   ✓ Editable > Disabled State > should not switch to edit mode when disabled 1ms
   ✓ Editable > Disabled State > should disable input when disabled 1ms
   ✓ Editable > Placeholder Text > should show placeholder when value is empty 1ms
   ✓ Editable > Placeholder Text > should use default placeholder if not provided 1ms
   ✓ Editable > Placeholder Text > should show value instead of placeholder when value exists 1ms
   ✓ Editable > Placeholder Text > should set placeholder on input element 3ms
   ✓ Editable > ARIA Attributes > should have role="button" on preview 1ms
   ✓ Editable > ARIA Attributes > should have aria-label on preview 0ms
   ✓ Editable > ARIA Attributes > should have tabIndex=0 on preview when not disabled 0ms
   ✓ Editable > ARIA Attributes > should have tabIndex=-1 on preview when disabled 0ms
   ✓ Editable > ARIA Attributes > should have aria-label on submit button 1ms
   ✓ Editable > ARIA Attributes > should have aria-label on cancel button 0ms
   × Editable > Data Attributes > should have data-editing when in edit mode 4ms
     → expected false to be true // Object.is equality
   ✓ Editable > Data Attributes > should not have data-editing in preview mode 0ms
   ✓ Editable > EditableControls > should render controls in edit mode 0ms
   ✓ Editable > EditableControls > should not render controls in preview mode 0ms
   ✓ Editable > EditableSubmit Button > should render submit button with default text 0ms
   ✓ Editable > EditableSubmit Button > should submit on click 1ms
   ✓ Editable > EditableSubmit Button > should be disabled when editable is disabled 0ms
   ✓ Editable > EditableCancel Button > should render cancel button with default text 0ms
   ✓ Editable > EditableCancel Button > should cancel on click 1ms
   ✓ Editable > EditableCancel Button > should be disabled when editable is disabled 0ms
   ✓ Editable > Custom Props Pass-through > should pass custom props to input 0ms
   ✓ Editable > Custom Props Pass-through > should pass custom props to preview 0ms
   ✓ Editable > Edge Cases > should handle empty value 5ms
   × Editable > Edge Cases > should handle very long text 6ms
     → expected '' to be 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa…' // Object.is equality
   × Editable > Edge Cases > should handle special characters 22ms
     → expected '' to be '<script>alert("xss")</script>' // Object.is equality
   ✓ Editable > Edge Cases > should handle rapid mode switches 4ms
   ✓ Editable > Real-world Scenarios > should work as an inline text editor 3ms
   ✓ Editable > Real-world Scenarios > should work with validation 3ms
   × Editable > Real-world Scenarios > should work with full controls 9ms
     → expected '' to be 'Changed' // Object.is equality
 ✓ tests/unit/primitives/FileUpload.test.ts (79 tests) 51ms
 ✓ tests/unit/primitives/Grid.test.ts (96 tests) 20ms
 ✓ tests/unit/primitives/HoverCard.spec.ts (76 tests) 44ms
 ✓ tests/unit/primitives/Input.test.ts (79 tests) 23ms
 ✓ tests/unit/primitives/Image.test.ts (54 tests) 24ms
 ✓ tests/unit/primitives/Kbd.test.ts (56 tests) 14ms
 ✓ tests/unit/primitives/Label.test.ts (51 tests) 15ms
 ❯ tests/unit/primitives/Mentions.test.ts (36 tests | 1 failed) 17ms
   ✓ Mentions > Basic functionality > should render mentions container 3ms
   ✓ Mentions > Basic functionality > should render with default @ trigger 1ms
   ✓ Mentions > Basic functionality > should support custom trigger 0ms
   ✓ Mentions > Basic functionality > should support disabled state 0ms
   ✓ Mentions > MentionsInput > should render textarea 1ms
   ✓ Mentions > MentionsInput > should handle value changes 1ms
   ✓ Mentions > MentionsSuggestions > should not render when closed 0ms
   ✓ Mentions > MentionsSuggestions > should have listbox role when open 0ms
   ✓ Mentions > MentionsSuggestion > should render suggestion item 0ms
   ✓ Mentions > MentionsSuggestion > should have option role 0ms
   ✓ Mentions > MentionsSuggestion > should handle click 0ms
   × Mentions > Controlled mode > should support controlled value 5ms
     → expected '' to be 'Hello @alice' // Object.is equality
   ✓ Mentions > Controlled mode > should call onValueChange 1ms
   ✓ Mentions > Uncontrolled mode > should support defaultValue 0ms
   ✓ Mentions > Mention selection > should call onMentionSelect when mention is selected 0ms
   ✓ Mentions > Filtering > should filter mentions based on search query 0ms
   ✓ Mentions > Filtering > should be case-insensitive 0ms
   ✓ Mentions > Trigger detection > should detect @ trigger 0ms
   ✓ Mentions > Trigger detection > should detect # trigger 0ms
   ✓ Mentions > Context values > should provide context to child components 0ms
   ✓ Mentions > Placeholder > should support placeholder on input 0ms
   ✓ Mentions > Multiple mentions > should handle multiple mentions in text 0ms
   ✓ Mentions > Mention display > should use display property 0ms
   ✓ Mentions > Mention display > should support custom children in suggestion 0ms
   ✓ Mentions > Navigation > should support up navigation 0ms
   ✓ Mentions > Navigation > should support down navigation 0ms
   ✓ Mentions > ARIA attributes > should have proper ARIA on suggestions 0ms
   ✓ Mentions > ARIA attributes > should have proper ARIA on suggestion items 0ms
   ✓ Mentions > Empty state > should handle empty mentions array 0ms
   ✓ Mentions > Empty state > should handle no matches 0ms
   ✓ Mentions > Mention insertion > should insert mention at cursor position 0ms
   ✓ Mentions > Mention insertion > should replace trigger and query with mention 0ms
   ✓ Mentions > Mention insertion > should add space after mention 0ms
   ✓ Mentions > Complex scenarios > should handle mention at start of text 0ms
   ✓ Mentions > Complex scenarios > should handle mention at end of text 0ms
   ✓ Mentions > Complex scenarios > should handle mention in middle of text 0ms
 ✓ tests/unit/primitives/NavigationMenu.test.ts (27 tests) 19ms
 ❯ tests/unit/primitives/MultiSelect.test.ts (80 tests | 2 failed) 74ms
   ✓ MultiSelect > Rendering Tests > should render MultiSelect root 3ms
   ✓ MultiSelect > Rendering Tests > should render as div element 1ms
   ✓ MultiSelect > Rendering Tests > should render with disabled state 0ms
   ✓ MultiSelect > Rendering Tests > should not have data-disabled when not disabled 0ms
   ✓ MultiSelect > Rendering Tests > should render with children using function (Pattern 17) 1ms
   ✓ MultiSelect > Rendering Tests > should render multiple children using function (Pattern 17) 2ms
   ✓ MultiSelect > Rendering Tests > should render all sub-components together 2ms
   ✓ MultiSelect > Rendering Tests > should render with empty children 0ms
   ✓ MultiSelect > Rendering Tests > should render with searchable prop 1ms
   ✓ MultiSelect > Rendering Tests > should render with maxSelections prop 0ms
   ✓ MultiSelect > Rendering Tests > should render with placeholder prop 0ms
   ✓ MultiSelect > Rendering Tests > should render with defaultValue 1ms
   ✓ MultiSelect > Context Tests > should provide value signal through context 0ms
   ✓ MultiSelect > Context Tests > should provide isOpen state through context 0ms
   ✓ MultiSelect > Context Tests > should provide disabled state through context 0ms
   ✓ MultiSelect > Context Tests > should provide searchable state through context 0ms
   ✓ MultiSelect > Context Tests > should provide maxSelections through context 0ms
   ✓ MultiSelect > Context Tests > should allow sub-components to access context 0ms
   ✓ MultiSelect > Context Tests > should register and track item values 0ms
   ✓ MultiSelect > Context Tests > should provide toggleValue function through context 1ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should work in uncontrolled mode with defaultValue 0ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should work in controlled mode with value prop 0ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should call onValueChange callback when value changes 0ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should use controlled value over internal state 0ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should default to empty array when no value provided 0ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should toggle values on and off 1ms
   ✓ MultiSelect > Controlled/Uncontrolled Tests > should support multiple selections 1ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should render as button 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should have type="button" 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should have data-state attribute 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should toggle open state on click 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should have aria-expanded attribute 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should have aria-haspopup="listbox" 0ms
   ✓ MultiSelect > MultiSelectTrigger Tests > should be disabled when MultiSelect is disabled 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should show placeholder when no items selected 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should show custom placeholder 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should show count when items are selected 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should show correct count with one item 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should render custom children 0ms
   ✓ MultiSelect > MultiSelectValue Tests > should update count when selection changes 1ms
   ✓ MultiSelect > MultiSelectContent Tests > should render when open 0ms
   ✓ MultiSelect > MultiSelectContent Tests > should not render when closed 0ms
   ✓ MultiSelect > MultiSelectContent Tests > should have role="listbox" 0ms
   ✓ MultiSelect > MultiSelectContent Tests > should have aria-multiselectable="true" 0ms
   ✓ MultiSelect > MultiSelectContent Tests > should render children 0ms
   ✓ MultiSelect > MultiSelectSearch Tests > should render when searchable is true 0ms
   ✓ MultiSelect > MultiSelectSearch Tests > should not render when searchable is false 0ms
   ✓ MultiSelect > MultiSelectSearch Tests > should render as input 0ms
   ✓ MultiSelect > MultiSelectSearch Tests > should have type="text" 0ms
   ✓ MultiSelect > MultiSelectSearch Tests > should have placeholder 0ms
   × MultiSelect > MultiSelectSearch Tests > should filter items based on search query 16ms
     → expected 2 to be 1 // Object.is equality
   ✓ MultiSelect > MultiSelectItem Tests > should render as div 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should have role="option" 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should have data-value attribute 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should have data-selected when selected 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should have aria-selected when selected 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should toggle selection on click 1ms
   ✓ MultiSelect > MultiSelectItem Tests > should not toggle when disabled 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should have data-disabled when disabled 0ms
   ✓ MultiSelect > MultiSelectItem Tests > should render children 0ms
   × MultiSelect > MultiSelectItem Tests > should filter based on search query 18ms
     → expected 2 to be 1 // Object.is equality
   ✓ MultiSelect > MultiSelectItemIndicator Tests > should render as span 0ms
   ✓ MultiSelect > MultiSelectItemIndicator Tests > should render default checkmark 0ms
   ✓ MultiSelect > MultiSelectItemIndicator Tests > should render custom children 0ms
   ✓ MultiSelect > MultiSelectActions Tests > should render default actions 0ms
   ✓ MultiSelect > MultiSelectActions Tests > should have Select All button 0ms
   ✓ MultiSelect > MultiSelectActions Tests > should have Clear All button 0ms
   ✓ MultiSelect > MultiSelectActions Tests > should select all items on Select All click 1ms
   ✓ MultiSelect > MultiSelectActions Tests > should clear all items on Clear All click 0ms
   ✓ MultiSelect > MultiSelectActions Tests > should render custom children 0ms
   ✓ MultiSelect > Max Selections Tests > should enforce max selections limit 1ms
   ✓ MultiSelect > Max Selections Tests > should allow unlimited selections when maxSelections is 0 5ms
   ✓ MultiSelect > Max Selections Tests > should disable Select All when max selections is reached 0ms
   ✓ MultiSelect > Max Selections Tests > should limit Select All to maxSelections 1ms
   ✓ MultiSelect > Max Selections Tests > should allow deselection even when max is reached 0ms
   ✓ MultiSelect > Edge Cases > should handle empty children 0ms
   ✓ MultiSelect > Edge Cases > should not toggle when MultiSelect is disabled 0ms
   ✓ MultiSelect > Edge Cases > should clear search when closing 1ms
   ✓ MultiSelect > Edge Cases > should not register disabled items 0ms
   ✓ MultiSelect > Edge Cases > should disable Clear All when no items selected 0ms
 ✓ tests/unit/primitives/Pagination.test.ts (81 tests) 41ms
 ✓ tests/unit/primitives/Popover.test.ts (37 tests) 11ms
stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should create Popconfirm with required props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept title prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept description prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept onCancel callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept okText prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept cancelText prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should start closed by default
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should create trigger with children
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should accept additional props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should accept style prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should create content with children
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should accept additional props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should have role="dialog"
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should allow composing trigger and content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should work with minimal composition
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should work without content component
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Type Safety > should accept all popconfirm props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Type Safety > should accept async onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm on root
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm-trigger on trigger
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm-content on content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should call onConfirm when confirmed
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should call onCancel when cancelled
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should support async onConfirm
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing onCancel callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing okText
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing cancelText
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with empty description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with long title
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with long description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle multiple triggers
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle multiple content components
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with custom button text
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle onConfirm throwing error
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle async onConfirm rejecting
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Accessibility > should have role="dialog" on content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Accessibility > should be keyboard accessible
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work in a form context
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work with destructive actions
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work with non-destructive confirmations
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Popconfirm.test.ts (50 tests) 18ms
 ✓ tests/unit/primitives/RadioGroup.spec.ts (62 tests) 20ms
 ✓ tests/unit/primitives/Progress.test.ts (45 tests) 22ms
 ❯ tests/unit/primitives/NumberInput.test.ts (97 tests | 21 failed) 199ms
   ✓ NumberInput > Basic Rendering > should render root container with children 6ms
   ✓ NumberInput > Basic Rendering > should render input field 1ms
   ✓ NumberInput > Basic Rendering > should render increment button 1ms
   ✓ NumberInput > Basic Rendering > should render decrement button 1ms
   ✓ NumberInput > Basic Rendering > should render all sub-components together 1ms
   ✓ NumberInput > Basic Rendering > should have default increment button content 0ms
   ✓ NumberInput > Basic Rendering > should have default decrement button content 0ms
   ✓ NumberInput > Basic Rendering > should allow custom increment button content 0ms
   ✓ NumberInput > Basic Rendering > should allow custom decrement button content 1ms
   ✓ NumberInput > Default Value (Uncontrolled Mode) > should use defaultValue of 0 when not provided 0ms
   ✓ NumberInput > Default Value (Uncontrolled Mode) > should use provided defaultValue 0ms
   ✓ NumberInput > Default Value (Uncontrolled Mode) > should allow defaultValue to be negative 1ms
   ✓ NumberInput > Default Value (Uncontrolled Mode) > should allow defaultValue with decimals 1ms
   ✓ NumberInput > Controlled Mode > should use controlled value 1ms
   ✓ NumberInput > Controlled Mode > should update when controlled value changes 1ms
   ✓ NumberInput > Controlled Mode > should call onValueChange when value is modified 1ms
   ✓ NumberInput > Controlled Mode > should handle controlled mode with signal 2ms
   ✓ NumberInput > Min and Max Props > should default to -Infinity min and Infinity max 1ms
   ✓ NumberInput > Min and Max Props > should use custom min value 1ms
   ✓ NumberInput > Min and Max Props > should use custom max value 1ms
   ✓ NumberInput > Min and Max Props > should clamp value to min when keepWithinRange is true 1ms
   ✓ NumberInput > Min and Max Props > should clamp value to max when keepWithinRange is true 1ms
   × NumberInput > Min and Max Props > should not clamp during typing when keepWithinRange is true by default 26ms
     → expected '50' to be '10' // Object.is equality
   × NumberInput > Step Prop > should default to step of 1 3ms
     → expected '10' to be '11' // Object.is equality
   × NumberInput > Step Prop > should increment by custom step 2ms
     → expected '10' to be '15' // Object.is equality
   × NumberInput > Step Prop > should decrement by custom step 2ms
     → expected '10' to be '5' // Object.is equality
   × NumberInput > Step Prop > should support decimal step 4ms
     → expected '1.0' to be '1.1' // Object.is equality
   ✓ NumberInput > Precision Prop > should default to precision of 0 1ms
   ✓ NumberInput > Precision Prop > should format value with specified precision 4ms
   ✓ NumberInput > Precision Prop > should round to precision when setting value 1ms
   × NumberInput > Precision Prop > should handle precision with increment 2ms
     → expected '0.00' to be '0.01' // Object.is equality
   × NumberInput > Increment Button > should increment value when clicked 2ms
     → expected '5' to be '6' // Object.is equality
   ✓ NumberInput > Increment Button > should be disabled when value is at max 9ms
   ✓ NumberInput > Increment Button > should be enabled when value is below max 1ms
   × NumberInput > Increment Button > should not increment beyond max 2ms
     → expected '99' to be '100' // Object.is equality
   ✓ NumberInput > Increment Button > should have aria-label 1ms
   × NumberInput > Decrement Button > should decrement value when clicked 6ms
     → expected '5' to be '4' // Object.is equality
   ✓ NumberInput > Decrement Button > should be disabled when value is at min 1ms
   ✓ NumberInput > Decrement Button > should be enabled when value is above min 1ms
   × NumberInput > Decrement Button > should not decrement below min 1ms
     → expected '5' to be '0' // Object.is equality
   ✓ NumberInput > Decrement Button > should have aria-label 1ms
   ✓ NumberInput > Disabled State > should set disabled attribute on root 1ms
   ✓ NumberInput > Disabled State > should disable input field 3ms
   ✓ NumberInput > Disabled State > should disable increment button 1ms
   ✓ NumberInput > Disabled State > should disable decrement button 1ms
   ✓ NumberInput > Disabled State > should not increment when disabled 1ms
   ✓ NumberInput > Disabled State > should not decrement when disabled 1ms
   ✓ NumberInput > ReadOnly State > should set readonly attribute on root 1ms
   ✓ NumberInput > ReadOnly State > should set readonly on input field 2ms
   ✓ NumberInput > ReadOnly State > should disable increment button when readonly 1ms
   ✓ NumberInput > ReadOnly State > should disable decrement button when readonly 1ms
   ✓ NumberInput > ReadOnly State > should not increment when readonly 8ms
   ✓ NumberInput > ReadOnly State > should not decrement when readonly 1ms
   × NumberInput > Keyboard Navigation > should increment on ArrowUp 2ms
     → expected '50' to be '51' // Object.is equality
   × NumberInput > Keyboard Navigation > should decrement on ArrowDown 1ms
     → expected '50' to be '49' // Object.is equality
   × NumberInput > Keyboard Navigation > should increment by 10 steps on PageUp 1ms
     → expected '50' to be '60' // Object.is equality
   × NumberInput > Keyboard Navigation > should decrement by 10 steps on PageDown 1ms
     → expected '50' to be '40' // Object.is equality
   × NumberInput > Keyboard Navigation > should jump to min on Home 1ms
     → expected '50' to be '10' // Object.is equality
   × NumberInput > Keyboard Navigation > should jump to max on End 3ms
     → expected '50' to be '100' // Object.is equality
   ✓ NumberInput > Keyboard Navigation > should prevent default on handled keys 3ms
   ✓ NumberInput > Keyboard Navigation > should not respond to keyboard when disabled 2ms
   ✓ NumberInput > Keyboard Navigation > should not respond to keyboard when readonly 1ms
   ✓ NumberInput > Keyboard Navigation > should not exceed max on keyboard increment 1ms
   ✓ NumberInput > Keyboard Navigation > should not go below min on keyboard decrement 1ms
   × NumberInput > Manual Input > should update value on input 3ms
     → expected '0' to be '42' // Object.is equality
   ✓ NumberInput > Manual Input > should parse numeric string input 2ms
   × NumberInput > Manual Input > should handle negative input 2ms
     → expected '0' to be '-50' // Object.is equality
   × NumberInput > Manual Input > should handle decimal input 2ms
     → expected '0.00' to be '3.14' // Object.is equality
   ✓ NumberInput > Manual Input > should handle invalid input as 0 2ms
   ✓ NumberInput > Format Options > should format as decimal by default 1ms
   ✓ NumberInput > Format Options > should format as currency 2ms
   ✓ NumberInput > Format Options > should format as percentage 1ms
   ✓ NumberInput > Format Options > should parse currency input 2ms
   ✓ NumberInput > Format Options > should parse percentage input 2ms
   ✓ NumberInput > Accessibility > should have role="group" on root 1ms
   ✓ NumberInput > Accessibility > should have inputMode="numeric" on input 2ms
   ✓ NumberInput > Accessibility > should have aria-valuemin on input 1ms
   ✓ NumberInput > Accessibility > should have aria-valuemax on input 1ms
   ✓ NumberInput > Accessibility > should have aria-valuenow on input 1ms
   ✓ NumberInput > Accessibility > should update aria-valuenow when value changes 2ms
   ✓ NumberInput > Accessibility > should have aria-label on increment button 1ms
   ✓ NumberInput > Accessibility > should have aria-label on decrement button 2ms
   ✓ NumberInput > Edge Cases > should handle very large numbers 2ms
   ✓ NumberInput > Edge Cases > should handle very small numbers 1ms
   ✓ NumberInput > Edge Cases > should handle zero 1ms
   ✓ NumberInput > Edge Cases > should handle negative zero 1ms
   ✓ NumberInput > Edge Cases > should handle negative numbers 1ms
   ✓ NumberInput > Edge Cases > should handle min equals max 3ms
   ✓ NumberInput > Edge Cases > should handle negative min and max 2ms
   × NumberInput > Edge Cases > should handle floating point precision issues 3ms
     → expected '0.1' to be '0.3' // Object.is equality
   ✓ NumberInput > Custom Props Pass-through > should pass custom props to input field 2ms
   ✓ NumberInput > Custom Props Pass-through > should pass custom props to increment button 1ms
   ✓ NumberInput > Custom Props Pass-through > should pass custom props to decrement button 7ms
   × NumberInput > Real-world Scenarios > should work as quantity selector 8ms
     → expected '1' to be '2' // Object.is equality
   ✓ NumberInput > Real-world Scenarios > should work as price input 2ms
   ✓ NumberInput > Real-world Scenarios > should work as percentage input 2ms
   ✓ NumberInput > Real-world Scenarios > should work with form 2ms
 ❯ tests/unit/primitives/RadioGroup.test.ts (67 tests | 9 failed) 87ms
   ✓ RadioGroup > Rendering > should render a div with role="radiogroup" 3ms
   ✓ RadioGroup > Rendering > should render children 1ms
   ✓ RadioGroup > Rendering > should generate unique ID 1ms
   ✓ RadioGroup > Rendering > should default to vertical orientation 0ms
   ✓ RadioGroup > Rendering > should support horizontal orientation 0ms
   ✓ RadioGroup > Value State - Uncontrolled > should have no value by default 1ms
   ✓ RadioGroup > Value State - Uncontrolled > should use defaultValue 1ms
   ✓ RadioGroup > Value State - Uncontrolled > should select item on click 1ms
   ✓ RadioGroup > Value State - Controlled > should use controlled value signal 1ms
   ✓ RadioGroup > Value State - Controlled > should update when controlled signal changes 1ms
   ✓ RadioGroup > Value State - Controlled > should NOT update controlled signal on click 0ms
   ✓ RadioGroup > onValueChange Callback > should call onValueChange when value changes 1ms
   ✓ RadioGroup > onValueChange Callback > should not call onValueChange on render 0ms
   ✓ RadioGroup > onValueChange Callback > should call onValueChange in controlled mode 0ms
   ✓ RadioGroup > Disabled State > should not be disabled by default 0ms
   ✓ RadioGroup > Disabled State > should disable group when disabled=true 0ms
   ✓ RadioGroup > Disabled State > should not select on click when disabled 0ms
   ✓ RadioGroup > Disabled State > should disable individual item 0ms
   ✓ RadioGroup > Disabled State > should not select disabled item on click 0ms
   ✓ RadioGroup > Required State > should not be required by default 0ms
   ✓ RadioGroup > Required State > should have aria-required when required=true 0ms
   × RadioGroup > Keyboard Navigation - Vertical > should focus next item on ArrowDown 10ms
     → expected <body><div>…(1)</div>
…(21)</body> to be <button id="opt2" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Vertical > should focus previous item on ArrowUp 4ms
     → expected <body><div>…(1)</div>
…(22)</body> to be <button id="opt1" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Vertical > should loop to first item on ArrowDown from last 3ms
     → expected <body><div>…(1)</div>
…(23)</body> to be <button id="opt1" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Vertical > should loop to last item on ArrowUp from first 3ms
     → expected <body><div>…(1)</div>
…(24)</body> to be <button id="opt2" …(6)></button> // Object.is equality
   ✓ RadioGroup > Keyboard Navigation - Vertical > should not loop when loop=false 1ms
   × RadioGroup > Keyboard Navigation - Horizontal > should focus next item on ArrowRight 3ms
     → expected <body><div>…(1)</div>
…(26)</body> to be <button id="opt2" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Horizontal > should focus previous item on ArrowLeft 12ms
     → expected <body><div>…(1)</div>
…(27)</body> to be <button id="opt1" …(6)></button> // Object.is equality
   ✓ RadioGroup > Keyboard Navigation - Horizontal > should not respond to vertical arrows in horizontal mode 0ms
   × RadioGroup > Keyboard Navigation - Home/End > should focus first item on Home key 3ms
     → expected <body><div>…(1)</div>
…(29)</body> to be <button id="opt1" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Home/End > should focus last item on End key 4ms
     → expected <body><div>…(1)</div>
…(30)</body> to be <button id="opt3" …(6)></button> // Object.is equality
   × RadioGroup > Keyboard Navigation - Disabled Items > should skip disabled items 3ms
     → expected <body><div>…(1)</div>
…(31)</body> to be <button id="opt3" …(6)></button> // Object.is equality
   ✓ RadioGroup > Keyboard Navigation - Disabled Items > should not navigate when group is disabled 0ms
   ✓ RadioGroup > Form Integration > should not render hidden input when name is not provided 0ms
   ✓ RadioGroup > Form Integration > should render hidden input when name is provided 2ms
   ✓ RadioGroup > Form Integration > should sync hidden input value with selected value 1ms
   ✓ RadioGroup > Form Integration > should have empty value when nothing selected 0ms
   ✓ RadioGroup > Form Integration > should have aria-hidden on hidden input 0ms
   ✓ RadioGroup > Form Integration > should hide hidden input with styles 0ms
   ✓ RadioGroupItem > Rendering > should render a button with role="radio" 0ms
   ✓ RadioGroupItem > Rendering > should render with type="button" 0ms
   ✓ RadioGroupItem > Rendering > should render children 0ms
   ✓ RadioGroupItem > Rendering > should generate unique ID when not provided 0ms
   ✓ RadioGroupItem > Rendering > should use provided ID 0ms
   ✓ RadioGroupItem > Rendering > should have data-value attribute 0ms
   ✓ RadioGroupItem > Checked State > should be unchecked by default 7ms
   ✓ RadioGroupItem > Checked State > should be checked when value matches group value 0ms
   ✓ RadioGroupItem > Checked State > should update checked state when group value changes 0ms
   ✓ RadioGroupItem > TabIndex > should have tabIndex=0 when checked 0ms
   ✓ RadioGroupItem > TabIndex > should have tabIndex=-1 when unchecked 0ms
   ✓ RadioGroupItem > Keyboard Handling > should select on Space key 0ms
   ✓ RadioGroupItem > Keyboard Handling > should select on Enter key 0ms
   ✓ RadioGroupItem > Keyboard Handling > should not select on other keys 0ms
   ✓ RadioGroupItem > Keyboard Handling > should not select on Space when disabled 0ms
   ✓ RadioGroupItem > Props > should accept and apply className 0ms
   ✓ RadioGroupItem > Props > should accept and apply style 0ms
   ✓ RadioGroupItem > Props > should accept and apply data attributes 0ms
   ✓ RadioGroupItem > Props > should accept and apply aria attributes 0ms
   ✓ RadioGroupIndicator > Rendering > should not render when radio is unchecked 0ms
   ✓ RadioGroupIndicator > Rendering > should render when radio is checked 0ms
   ✓ RadioGroupIndicator > Rendering > should show/hide when radio is toggled 1ms
   ✓ RadioGroupIndicator > Rendering > should render as span element 0ms
   ✓ RadioGroupIndicator > Data State > should have data-state="checked" when visible 0ms
   ✓ RadioGroupIndicator > Data State > should update data-state when radio state changes 0ms
   ✓ RadioGroupIndicator > Props > should accept and apply className 10ms
   ✓ RadioGroupIndicator > Props > should accept and apply style 0ms
   ✓ RadioGroupIndicator > Props > should accept and apply data attributes 0ms
 ✓ tests/unit/primitives/Resizable.test.ts (75 tests) 23ms
 ✓ tests/unit/primitives/ScrollArea.test.ts (63 tests) 23ms
 ❯ tests/unit/primitives/Rating.test.ts (56 tests | 2 failed) 81ms
   ✓ Rating > Component Exports > should export Rating component 1ms
   ✓ Rating > Component Exports > should export RatingItem component 0ms
   ✓ Rating > Component Exports > should have Rating.Item attached 0ms
   ✓ Rating > Basic Rendering > should render a container with data-rating attribute 3ms
   ✓ Rating > Basic Rendering > should render with default max of 5 3ms
   ✓ Rating > Basic Rendering > should render with custom max 1ms
   ✓ Rating > Basic Rendering > should render items with correct indices 0ms
   ✓ Rating > Uncontrolled Mode > should start with defaultValue 1ms
   ✓ Rating > Uncontrolled Mode > should start with 0 if no defaultValue 0ms
   × Rating > Uncontrolled Mode > should update value on item click 26ms
     → expected '0' to be '3' // Object.is equality
   ✓ Rating > Controlled Mode > should use controlled value 1ms
   ✓ Rating > Controlled Mode > should update when signal changes 3ms
   ✓ Rating > Controlled Mode > should call onValueChange when item clicked 1ms
   ✓ Rating > onValueChange Callback > should call onValueChange with new value 1ms
   ✓ Rating > onValueChange Callback > should work with vi.fn() spy 1ms
   ✓ Rating > Disabled State > should have data-disabled attribute 0ms
   ✓ Rating > Disabled State > should have aria-disabled 4ms
   ✓ Rating > Disabled State > should not change value when disabled 1ms
   ✓ Rating > Disabled State > should not be focusable when disabled 0ms
   ✓ Rating > Readonly State > should have data-readonly attribute 0ms
   ✓ Rating > Readonly State > should have aria-readonly 0ms
   ✓ Rating > Readonly State > should not change value when readonly 0ms
   ✓ Rating > Readonly State > should not be focusable when readonly 0ms
   ✓ Rating > Half Ratings > should support half ratings when allowHalf is true 0ms
   ✓ Rating > Half Ratings > should set half rating when clicking left half of item 1ms
   ✓ Rating > Half Ratings > should set full rating when clicking right half of item 1ms
   ✓ Rating > Half Ratings > should not allow half ratings when allowHalf is false 1ms
   ✓ Rating > Mouse Interaction > should set hover value on mousemove 3ms
   ✓ Rating > Mouse Interaction > should clear hover value on mouseleave 7ms
   ✓ Rating > Keyboard Navigation > should increase rating on ArrowRight 1ms
   ✓ Rating > Keyboard Navigation > should increase rating on ArrowUp 0ms
   ✓ Rating > Keyboard Navigation > should decrease rating on ArrowLeft 0ms
   ✓ Rating > Keyboard Navigation > should decrease rating on ArrowDown 0ms
   ✓ Rating > Keyboard Navigation > should set rating to 0 on Home key 1ms
   ✓ Rating > Keyboard Navigation > should set rating to max on End key 0ms
   ✓ Rating > Keyboard Navigation > should not exceed max on ArrowRight 0ms
   ✓ Rating > Keyboard Navigation > should not go below 0 on ArrowLeft 0ms
   ✓ Rating > Keyboard Navigation > should use half step when allowHalf is true 1ms
   ✓ Rating > Keyboard Navigation > should not respond to keyboard when disabled 0ms
   ✓ Rating > Keyboard Navigation > should not respond to keyboard when readonly 0ms
   ✓ Rating > ARIA Attributes > should have role="slider" 0ms
   ✓ Rating > ARIA Attributes > should have aria-label 0ms
   ✓ Rating > ARIA Attributes > should have aria-valuenow 9ms
   ✓ Rating > ARIA Attributes > should have aria-valuemin=0 0ms
   ✓ Rating > ARIA Attributes > should have aria-valuemax equal to max 0ms
   ✓ Rating > ARIA Attributes > should be focusable with tabIndex=0 when not disabled/readonly 0ms
   ✓ Rating > Rating Item Data Attributes > should have data-rating-item attribute 0ms
   ✓ Rating > Rating Item Data Attributes > should have data-index attribute 0ms
   ✓ Rating > Rating Item Data Attributes > should have data-filled when item is filled 0ms
   ✓ Rating > Edge Cases > should handle 0 rating 0ms
   ✓ Rating > Edge Cases > should handle max rating 0ms
   ✓ Rating > Edge Cases > should clamp value above max 1ms
   × Rating > Edge Cases > should handle rapid clicks 1ms
     → expected '0' to be '1' // Object.is equality
   ✓ Rating > Real-world Scenarios > should work as a product rating display (readonly) 0ms
   ✓ Rating > Real-world Scenarios > should work as an interactive rating input 0ms
   ✓ Rating > Real-world Scenarios > should work with custom icons 0ms
 ✓ tests/unit/primitives/Select.spec.ts (61 tests) 14ms
 ✓ tests/unit/primitives/Separator.test.ts (51 tests) 14ms
 ✓ tests/unit/primitives/Skeleton.test.ts (34 tests) 14ms
 ❯ tests/unit/primitives/Select.test.ts (45 tests | 1 failed) 87ms
   ✓ Select Primitive > Component Exports > should export Select component 1ms
   ✓ Select Primitive > Component Exports > should export SelectTrigger component 0ms
   ✓ Select Primitive > Component Exports > should export SelectValue component 0ms
   ✓ Select Primitive > Component Exports > should export SelectIcon component 0ms
   ✓ Select Primitive > Component Exports > should export SelectContent component 0ms
   ✓ Select Primitive > Component Exports > should export SelectViewport component 0ms
   ✓ Select Primitive > Component Exports > should export SelectItem component 0ms
   ✓ Select Primitive > Component Exports > should export SelectItemText component 0ms
   ✓ Select Primitive > Component Exports > should export SelectItemIndicator component 0ms
   ✓ Select Primitive > Component Exports > should export SelectGroup component 0ms
   ✓ Select Primitive > Component Exports > should export SelectLabel component 0ms
   ✓ Select Primitive > Component Exports > should export SelectSeparator component 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Trigger as Select.Trigger 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Value as Select.Value 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Icon as Select.Icon 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Content as Select.Content 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Viewport as Select.Viewport 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Item as Select.Item 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach ItemText as Select.ItemText 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach ItemIndicator as Select.ItemIndicator 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Group as Select.Group 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Label as Select.Label 0ms
   ✓ Select Primitive > Sub-component Attachment > should attach Separator as Select.Separator 0ms
   ✓ Select Primitive > Basic Rendering > should render select with trigger 3ms
   ✓ Select Primitive > Basic Rendering > should render SelectValue with placeholder when no value selected 1ms
   ✓ Select Primitive > Basic Rendering > should render SelectIcon with aria-hidden 1ms
   ✓ Select Primitive > Open/Close State > should open when trigger is clicked 6ms
   ✓ Select Primitive > Open/Close State > should toggle when trigger is clicked multiple times 9ms
   ✓ Select Primitive > Open/Close State > should support controlled open state 6ms
   ✓ Select Primitive > Open/Close State > should call onOpenChange when opened/closed 10ms
   ✓ Select Primitive > Open/Close State > should support defaultOpen prop 2ms
   × Select Primitive > Value Selection > should select item when clicked 11ms
     → expected 'true' to be 'false' // Object.is equality
   ✓ Select Primitive > Value Selection > should support controlled value 4ms
   ✓ Select Primitive > Value Selection > should call onValueChange when item is selected 5ms
   ✓ Select Primitive > Value Selection > should display selected value text in SelectValue 2ms
   ✓ Select Primitive > Disabled State > should support disabled prop 1ms
   ✓ Select Primitive > Disabled State > should not open when disabled 2ms
   ✓ Select Primitive > Disabled State > should support disabled items 3ms
   ✓ Select Primitive > Required State > should support required prop 0ms
   ✓ Select Primitive > Accessibility > should have proper ARIA attributes on trigger 0ms
   ✓ Select Primitive > Accessibility > should have proper ARIA attributes on content 3ms
   ✓ Select Primitive > Accessibility > should have proper ARIA attributes on items 3ms
   ✓ Select Primitive > Portal Rendering > should render content in portal when open 2ms
   ✓ Select Primitive > Edge Cases > should handle SelectValue with custom children 5ms
   ✓ Select Primitive > Form Integration > should support name prop 0ms
 ✓ tests/unit/primitives/Sheet.spec.ts (101 tests) 19ms
 ✓ tests/unit/primitives/SimpleGrid.test.ts (60 tests) 16ms
 ✓ tests/unit/primitives/Space.test.ts (52 tests) 17ms
 ✓ tests/unit/primitives/Spacer.test.ts (57 tests) 17ms
 ✓ tests/unit/primitives/Stack.test.ts (34 tests) 14ms
 ✓ tests/unit/primitives/Spinner.test.ts (34 tests) 23ms
stdout | tests/unit/primitives/Stepper.spec.ts > Stepper Primitive > StepperContent Structure > should create content with value
[handleComponentError] Called with error: Stepper components must be used within Stepper
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Stepper.spec.ts > Stepper Primitive > StepperContent Structure > should accept additional props
[handleComponentError] Called with error: Stepper components must be used within Stepper
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Stepper.spec.ts (85 tests) 38ms
 ✓ tests/unit/primitives/Switch.test.ts (15 tests) 25ms
 ✓ tests/unit/primitives/Table.test.ts (52 tests) 22ms
 ✓ tests/unit/primitives/Textarea.test.ts (50 tests) 31ms
 ❯ tests/unit/primitives/TagsInput.test.ts (77 tests | 1 failed) 42ms
   ✓ TagsInput > Rendering Tests > should render TagsInput root 3ms
   ✓ TagsInput > Rendering Tests > should render as div element 1ms
   ✓ TagsInput > Rendering Tests > should have role="group" 1ms
   ✓ TagsInput > Rendering Tests > should have aria-label 0ms
   ✓ TagsInput > Rendering Tests > should render with disabled state 0ms
   ✓ TagsInput > Rendering Tests > should not have data-disabled when not disabled 0ms
   ✓ TagsInput > Rendering Tests > should render with children using function (Pattern 17) 1ms
   ✓ TagsInput > Rendering Tests > should render multiple children using function (Pattern 17) 1ms
   ✓ TagsInput > Rendering Tests > should render with empty children 0ms
   ✓ TagsInput > Rendering Tests > should render with maxTags prop 0ms
   ✓ TagsInput > Context Tests > should provide tags signal through context 0ms
   ✓ TagsInput > Context Tests > should provide disabled state through context 0ms
   ✓ TagsInput > Context Tests > should provide maxTags through context 0ms
   ✓ TagsInput > Context Tests > should provide addTag function through context 0ms
   ✓ TagsInput > Context Tests > should provide removeTag function through context 0ms
   ✓ TagsInput > Context Tests > should provide inputValue signal through context 0ms
   ✓ TagsInput > Context Tests > should provide canAddMore function through context 0ms
   ✓ TagsInput > Context Tests > should allow sub-components to access context 0ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should work in uncontrolled mode with defaultValue 0ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should work in controlled mode with value prop 0ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should call onValueChange callback when tags change 2ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should use controlled value over internal state 0ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should default to empty array when no value provided 0ms
   ✓ TagsInput > Controlled/Uncontrolled Tests > should call onTagAdd when tag is added 0ms
   ✓ TagsInput > Tag Addition Tests > should add tag on Enter key 0ms
   ✓ TagsInput > Tag Addition Tests > should add tag on comma delimiter 0ms
   ✓ TagsInput > Tag Addition Tests > should trim whitespace from tags 0ms
   ✓ TagsInput > Tag Addition Tests > should not add empty tag 0ms
   ✓ TagsInput > Tag Addition Tests > should not add tag when disabled 0ms
   ✓ TagsInput > Tag Addition Tests > should not add duplicate tag by default 0ms
   ✓ TagsInput > Tag Addition Tests > should allow duplicate tags when allowDuplicates is true 0ms
   ✓ TagsInput > Tag Addition Tests > should not exceed maxTags limit 0ms
   ✓ TagsInput > Tag Addition Tests > should clear input value after adding tag 5ms
   ✓ TagsInput > Tag Addition Tests > should call custom validator when adding tag 1ms
   ✓ TagsInput > Tag Addition Tests > should reject tag when validator returns error 0ms
   × TagsInput > Tag Addition Tests > should handle custom delimiter array 8ms
     → expected "spy" to be called with arguments: [ [ 'tag1' ] ][90m

Number of calls: [1m0[22m
[39m
   ✓ TagsInput > Tag Removal Tests > should remove tag on remove button click 1ms
   ✓ TagsInput > Tag Removal Tests > should call onTagRemove callback 0ms
   ✓ TagsInput > Tag Removal Tests > should remove last tag on Backspace when input is empty 0ms
   ✓ TagsInput > Tag Removal Tests > should not remove tag on Backspace when input has value 0ms
   ✓ TagsInput > Tag Removal Tests > should not remove tag when disabled 0ms
   ✓ TagsInput > Tag Removal Tests > should stop propagation on remove button click 0ms
   ✓ TagsInput > Tag Removal Tests > should have aria-label for remove button 0ms
   ✓ TagsInput > Tag Removal Tests > should disable remove button when disabled 0ms
   ✓ TagsInput > TagsInputField Tests > should render as input element 0ms
   ✓ TagsInput > TagsInputField Tests > should have default placeholder 0ms
   ✓ TagsInput > TagsInputField Tests > should use custom placeholder 0ms
   ✓ TagsInput > TagsInputField Tests > should clear placeholder when max tags reached 0ms
   ✓ TagsInput > TagsInputField Tests > should have aria-label 0ms
   ✓ TagsInput > TagsInputField Tests > should be disabled when TagsInput is disabled 0ms
   ✓ TagsInput > TagsInputField Tests > should be disabled when max tags reached 0ms
   ✓ TagsInput > TagsInputField Tests > should accept additional props 0ms
   ✓ TagsInput > TagsInputTag Tests > should render tag with value 0ms
   ✓ TagsInput > TagsInputTag Tests > should have data-value attribute 0ms
   ✓ TagsInput > TagsInputTag Tests > should display value as text by default 0ms
   ✓ TagsInput > TagsInputTag Tests > should render custom children 0ms
   ✓ TagsInput > TagsInputTag Tests > should work with TagsInputTagRemove as child 0ms
   ✓ TagsInput > TagsInputTagRemove Tests > should render as button 0ms
   ✓ TagsInput > TagsInputTagRemove Tests > should have default × character 0ms
   ✓ TagsInput > TagsInputTagRemove Tests > should render custom children 0ms
   ✓ TagsInput > TagsInputTagRemove Tests > should have aria-label with tag value 0ms
   ✓ TagsInput > TagsInputTagRemove Tests > should accept additional props 0ms
   ✓ TagsInput > Paste Handling Tests > should split pasted text by delimiter 0ms
   ✓ TagsInput > Paste Handling Tests > should handle paste with multiple delimiters 0ms
   ✓ TagsInput > Paste Handling Tests > should trim whitespace from pasted tags 0ms
   ✓ TagsInput > Paste Handling Tests > should not paste when disabled 0ms
   ✓ TagsInput > Paste Handling Tests > should handle paste without delimiters normally 0ms
   ✓ TagsInput > Edge Cases > should handle empty children 0ms
   ✓ TagsInput > Edge Cases > should handle maxTags of 0 (unlimited) 0ms
   ✓ TagsInput > Edge Cases > should handle empty string as delimiter 0ms
   ✓ TagsInput > Edge Cases > should use default props when missing 0ms
   ✓ TagsInput > Edge Cases > should handle rapid tag additions 0ms
   ✓ TagsInput > Integration Tests > should work with all components together 0ms
   ✓ TagsInput > Integration Tests > should handle complete tag lifecycle 0ms
   ✓ TagsInput > Integration Tests > should enforce validation across all interactions 0ms
   ✓ TagsInput > Integration Tests > should coordinate field state with tag count 3ms
   ✓ TagsInput > Integration Tests > should render complete tags input with all features 1ms
 ✓ tests/unit/primitives/Timeline.test.ts (91 tests) 19ms
stdout | tests/unit/primitives/Toast.spec.ts > Toast Primitive > Type Safety > should handle missing toast prop gracefully
[handleComponentError] Called with error: Cannot read properties of undefined (reading 'variant')
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Toast.spec.ts (81 tests) 29ms
 ✓ tests/unit/primitives/Toggle.test.ts (41 tests) 20ms
 ❯ tests/unit/primitives/Toast.test.ts (76 tests | 2 failed) 34ms
   ✓ ToastProvider > Rendering > should render children 3ms
   ✓ ToastProvider > Rendering > should provide context to children 1ms
   ✓ ToastProvider > Context Values > should have default maxToasts of 3 0ms
   ✓ ToastProvider > Context Values > should use custom maxToasts 1ms
   ✓ ToastProvider > Context Values > should have default duration of 5000 1ms
   ✓ ToastProvider > Context Values > should use custom duration 0ms
   ✓ ToastProvider > Adding Toasts > should add toast to context 0ms
   ✓ ToastProvider > Adding Toasts > should return toast ID 0ms
   ✓ ToastProvider > Adding Toasts > should generate unique IDs for toasts 1ms
   ✓ ToastProvider > Adding Toasts > should add toast with all properties 0ms
   ✓ ToastProvider > Adding Toasts > should use default duration if not specified 0ms
   ✓ ToastProvider > Adding Toasts > should override provider duration with toast duration 0ms
   ✓ ToastProvider > Removing Toasts > should remove toast by ID 0ms
   ✓ ToastProvider > Removing Toasts > should only remove specified toast 0ms
   ✓ ToastProvider > Removing Toasts > should handle removing non-existent toast 0ms
   ✓ ToastProvider > MaxToasts Limit > should limit toasts to maxToasts 0ms
   ✓ ToastProvider > MaxToasts Limit > should remove oldest toasts when exceeding limit 0ms
   ✓ ToastProvider > MaxToasts Limit > should handle maxToasts=1 0ms
   × ToastProvider > Auto-dismiss > should auto-dismiss toast after duration 6ms
     → expected 1 to be +0 // Object.is equality
   × ToastProvider > Auto-dismiss > should auto-dismiss multiple toasts independently 1ms
     → expected 2 to be 1 // Object.is equality
   ✓ ToastProvider > Auto-dismiss > should not auto-dismiss when duration is 0 0ms
   ✓ ToastProvider > Auto-dismiss > should not auto-dismiss when duration is negative 0ms
   ✓ ToastViewport > Rendering > should render as ordered list inside portal 2ms
   ✓ ToastViewport > Rendering > should have role="region" 1ms
   ✓ ToastViewport > Rendering > should have default aria-label 0ms
   ✓ ToastViewport > Rendering > should use custom label 0ms
   ✓ ToastViewport > Rendering > should have tabIndex=-1 0ms
   ✓ ToastViewport > Rendering > should apply additional props 0ms
   ✓ ToastViewport > Rendering Toasts > should render no toasts initially 0ms
   ✓ ToastViewport > Rendering Toasts > should render toasts from context 1ms
   ✓ ToastViewport > Rendering Toasts > should render multiple toasts 1ms
   ✓ ToastViewport > Hotkey > should focus first toast on default hotkey (F8) 1ms
   ✓ ToastViewport > Hotkey > should use custom hotkey 0ms
   ✓ ToastViewport > Hotkey > should not focus on wrong hotkey 0ms
   ✓ ToastViewport > Hotkey > should handle no toasts when hotkey pressed 0ms
   ✓ Toast > Rendering > should render as list item 0ms
   ✓ Toast > Rendering > should have data-toast attribute 0ms
   ✓ Toast > Rendering > should have role="status" 0ms
   ✓ Toast > Rendering > should have aria-live="polite" 0ms
   ✓ Toast > Rendering > should have aria-atomic="true" 0ms
   ✓ Toast > Variants > should have default variant 0ms
   ✓ Toast > Variants > should apply success variant 0ms
   ✓ Toast > Variants > should apply error variant 0ms
   ✓ Toast > Variants > should apply warning variant 0ms
   ✓ Toast > Variants > should apply info variant 0ms
   ✓ Toast > Title > should render title when provided 0ms
   ✓ Toast > Title > should not render title element when not provided 0ms
   ✓ Toast > Title > should render title as div 0ms
   ✓ Toast > Description > should render description when provided 0ms
   ✓ Toast > Description > should not render description element when not provided 0ms
   ✓ Toast > Description > should render description as div 0ms
   ✓ Toast > Description > should render both title and description 0ms
   ✓ Toast > Action Button > should render action button when provided 0ms
   ✓ Toast > Action Button > should not render action button when not provided 0ms
   ✓ Toast > Action Button > should render action as button 0ms
   ✓ Toast > Action Button > should call action onClick when clicked 0ms
   ✓ Toast > Action Button > should call onDismiss when action clicked 0ms
   ✓ Toast > Action Button > should call both action onClick and onDismiss 0ms
   ✓ Toast > Action Button > should prevent default on action click 0ms
   ✓ Toast > Close Button > should always render close button 0ms
   ✓ Toast > Close Button > should render close button as button 0ms
   ✓ Toast > Close Button > should have aria-label="Close" 0ms
   ✓ Toast > Close Button > should render × symbol 0ms
   ✓ Toast > Close Button > should call onDismiss when clicked 0ms
   ✓ Toast > Close Button > should not throw when onDismiss not provided 0ms
   ✓ Toast > Complete Toast > should render all parts together 0ms
   ✓ Toast > Complete Toast > should render minimal toast with only title 0ms
   ✓ Toast > Complete Toast > should render toast with only description 0ms
   ✓ Toast Integration > should render toast in viewport 0ms
   ✓ Toast Integration > should remove toast from viewport when dismissed 0ms
   ✓ Toast Integration > should handle multiple toasts with different variants 0ms
   ✓ Toast Integration > should auto-dismiss toasts in viewport 0ms
   ✓ Toast Integration > should respect maxToasts limit in viewport 0ms
   ✓ Toast Integration > should call action and dismiss toast 0ms
   ✓ Toast Integration > should handle rapid toast additions 1ms
   ✓ Toast Integration > should maintain toast order (newest last) 0ms
 ✓ tests/unit/primitives/TimePicker.test.ts (84 tests) 84ms
 ✓ tests/unit/primitives/Toolbar.test.ts (108 tests) 25ms
stdout | tests/unit/primitives/ToggleGroup.test.ts > ToggleGroup > Multiple mode > should render toggle group with multiple type
=== DEBUG ===
DOM: <div data-toggle-group="" data-orientation="horizontal" role="group" aria-orientation="horizontal"><button type="button" role="button" aria-pressed="false" data-state="off" data-value="bold" tabindex="-1">Bold</button><button type="button" role="button" aria-pressed="false" data-state="off" data-value="italic" tabindex="-1">Italic</button></div>
All buttons: [33m2[39m
Items with role=button: [33m2[39m

 ✓ tests/unit/primitives/ToggleGroup.test.ts (41 tests) 101ms
 ✓ tests/unit/core/component/define.test.ts (15 tests) 4ms
 ✓ tests/unit/core/component/context.test.ts (22 tests) 6ms
 ✓ tests/unit/primitives/VisuallyHidden.test.ts (53 tests) 28ms
 ✓ tests/unit/primitives/Transfer.test.ts (64 tests) 238ms
stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should catch errors from child components
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should catch errors from child components
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:32:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:40:27[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:32:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:40:27[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:37:22

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render default fallback UI on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render default fallback UI on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:54:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:61:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:54:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:61:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:59:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render custom fallback component on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render custom fallback component on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:71:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:76:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:71:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:76:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:74:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should pass error info to onError callback
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should pass error info to onError callback
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:87:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:92:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:87:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:92:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:90:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should expose reset function via context
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should expose reset function via context
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:111:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:126:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:111:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:126:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:124:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should call onReset when reset is triggered
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should call onReset when reset is triggered
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:135:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:154:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:135:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:154:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:150:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should expose retry function via context
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should expose retry function via context
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:168:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:183:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:168:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:183:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:181:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should respect maxRetries limit
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should respect maxRetries limit
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:191:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:218:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:191:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:218:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:215:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should track error count
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should track error count
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:230:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:235:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:230:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:235:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:233:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error message
[handleComponentError] Called with error: Custom error message
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Custom error message
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error message
  Error: Error: Custom error message
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:249:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:254:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Custom error message
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:249:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:254:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:252:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error stack
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error stack
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:266:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:271:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:266:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:271:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:269:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture component stack
[handleComponentError] Called with error: Component stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Component stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture component stack
  Error: Error: Component stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:284:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:289:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Component stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:284:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:289:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:287:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > useErrorBoundary hook > should return error context when inside error boundary
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > useErrorBoundary hook > should return error context when inside error boundary
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:317:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:335:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:317:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:335:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:333:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > withErrorBoundary HOC > should catch errors from wrapped component
[handleComponentError] Called with error: HOC test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: HOC test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > withErrorBoundary HOC > should catch errors from wrapped component
  Error: Error: HOC test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:359:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: HOC test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:359:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:370:21[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:368:46

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle errors without message
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle errors without message
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:443:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:448:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:77:10[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:141:47[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:238:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:443:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:60:22
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:56:17[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:448:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:308:18
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:94:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:465:14[90m)[39m
      at component2 [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:92:24[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:446:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle non-Error objects thrown
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle non-Error objects thrown
  Error: String error
  Error: String error

 ✓ tests/unit/core/component/error-boundary.test.ts (22 tests) 25ms
 ✓ tests/unit/primitives/VirtualList.test.ts (73 tests) 103ms
stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should catch errors in mount callbacks
[handleComponentError] Called with error: Mount failed
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    }
  ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should support multiple error handlers
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    },
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    }
  ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m2[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should handle errors in error handlers gracefully
[handleComponentError] Called with error: Mount failed
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > Error boundary pattern > should catch and handle child errors in boundary
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

 ✓ tests/unit/core/component/lifecycle.test.ts (16 tests) 16ms
 ✓ tests/unit/core/component/lazy.test.ts (18 tests) 118ms
 ✓ tests/unit/core/component/reactive-props.test.ts (20 tests) 11ms
 ✓ tests/unit/core/component/props.test.ts (24 tests) 5ms
 ✓ tests/unit/core/component/refs.test.ts (33 tests) 14ms
 ✓ tests/unit/core/reactivity/batch.test.ts (23 tests) 8ms
 ✓ tests/unit/core/reactivity/computed.test.ts (24 tests) 81ms
 ✓ tests/unit/core/reactivity/computed-store-pattern.test.ts (20 tests) 98ms
stderr | tests/unit/core/reactivity/context.test.ts > Context > ComputationImpl > should track dependencies
Error in effect computation: TypeError: sig.get is not a function
    at ComputationImpl.execute [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:131:17[90m)[39m
    at ComputationImpl.run [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:165:14[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:133:23
    at ReactiveContextImpl.batch [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:478:9[90m)[39m
    at batch [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:12:11[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:129:9
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:453:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:26:18[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:124:7
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11

 ✓ tests/unit/core/reactivity/context.test.ts (30 tests) 13ms
stderr | tests/unit/core/reactivity/dependency-graph.test.ts > DependencyGraph > Topological sorting > should handle cycles in topological sort
Cycle detected in dependency graph

 ✓ tests/unit/core/reactivity/dependency-graph.test.ts (25 tests) 6ms
stderr | tests/unit/core/reactivity/effect.test.ts > Effect > Error handling > should handle errors in cleanup function
Error in effect cleanup function: Error: Cleanup error
    at EffectImpl.cleanupFn [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/effect.test.ts:382:21[90m)[39m
    at EffectImpl.dispose [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/effect.ts:169:14[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/effect.ts:198:42
    at OwnerImpl.dispose [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:318:22[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:453:37
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/effect.test.ts:13:5
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)

 ✓ tests/unit/core/reactivity/sequential-updates.test.ts (9 tests) 5ms
 ✓ tests/unit/core/reactivity/signal.test.ts (19 tests) 12ms
 ✓ tests/unit/primitives/utils/focus.spec.ts (22 tests) 16ms
 ✓ tests/unit/primitives/utils/id.spec.ts (15 tests) 3ms
 ✓ tests/unit/core/reactivity/store.test.ts (27 tests) 9ms
 ✓ tests/unit/primitives/utils/position.test.ts (30 tests) 11ms
stderr | tests/unit/core/reactivity/effect.test.ts > Effect > Integration with batch > should handle nested batches in effects
Test timeout reached, runs: [ [33m0[39m ]

 ✓ tests/unit/core/reactivity/effect.test.ts (20 tests) 327ms
 ✓ tests/unit/primitives/utils/scroll-lock.spec.ts (18 tests) 7ms
 ✓ tests/unit/core/reactivity/resource.test.ts (22 tests) 2908ms
   ✓ Resource > Advanced patterns > should support caching pattern  405ms
 ❯ tests/unit/primitives/Notification.test.ts (60 tests | 32 failed) 160243ms
   ✓ Notification > Rendering Tests > 1. Renders container with data-notification-container 4ms
   ✓ Notification > Rendering Tests > 2. Renders with correct placement data attribute 1ms
   ✓ Notification > Rendering Tests > 3. Renders position styles for topRight (default) 1ms
   ✓ Notification > Rendering Tests > 4. Renders position styles for topLeft 0ms
   ✓ Notification > Rendering Tests > 5. Renders position styles for bottomRight 1ms
   ✓ Notification > Rendering Tests > 6. Renders position styles for bottomLeft 0ms
   ✓ Notification > Rendering Tests > 7. Renders fixed position and z-index 0ms
   ✓ Notification > Rendering Tests > 8. Renders notification with role="alert" 3ms
   ✓ Notification > Rendering Tests > 9. Renders title and description 3ms
   ✓ Notification > Rendering Tests > 10. Renders close button when closable=true (default) 3ms
   ✓ Notification > Notify Function Tests > 11. notify() adds notification to list 2ms
   ✓ Notification > Notify Function Tests > 12. notify() returns notification id 0ms
   ✓ Notification > Notify Function Tests > 13. notify() generates unique ids 0ms
   ✓ Notification > Notify Function Tests > 14. Multiple notifications render 2ms
   ✓ Notification > Notify Function Tests > 15. Notification has correct data-type attribute 3ms
   ✓ Notification > Notify Function Tests > 16. Default type is "info" 2ms
   ✓ Notification > Notify Function Tests > 17. Custom types (success, warning, error) work 2ms
   ✓ Notification > Notify Function Tests > 18. Title renders correctly 2ms
   ✓ Notification > Notify Function Tests > 19. Description renders when provided 4ms
   ✓ Notification > Notify Function Tests > 20. Description does not render when omitted 6ms
   ✓ Notification > Notify Function Tests > 21. Closable button shows by default 2ms
   ✓ Notification > Notify Function Tests > 22. Closable=false hides close button 2ms
   ✓ Notification > Close Function Tests > 23. closeNotification() removes notification 4ms
   ✓ Notification > Close Function Tests > 24. Close button click removes notification 6ms
   ✓ Notification > Close Function Tests > 25. Closing one does not affect others 3ms
   ✓ Notification > Close Function Tests > 26. Closing non-existent id is safe 1ms
   ✓ Notification > Close Function Tests > 27. Multiple closes are safe 6ms
   × Notification > Auto-dismiss Tests > 28. Auto-dismisses after default duration (4500ms) 5006ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 29. Auto-dismisses after custom duration 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 30. duration=0 prevents auto-dismiss 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 31. Multiple notifications dismiss independently 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 32. Dismissed notification is removed from DOM 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 33. Timer cleanup on manual close 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 34. No memory leaks from timers 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Auto-dismiss Tests > 35. Rapid notifications handle timers correctly 5000ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > MaxCount Tests > 36. Default maxCount is 5 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > MaxCount Tests > 37. Custom maxCount limits displayed notifications 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > MaxCount Tests > 38. maxCount=1 shows only latest 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > MaxCount Tests > 39. Exceeding maxCount hides oldest 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > MaxCount Tests > 40. Removing notification updates display 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 41. Module-level signal updates reactively 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 42. Notifications list is reactive 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 43. Adding notification triggers re-render 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 44. Removing notification triggers re-render 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 45. Empty state renders empty container 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 46. State persists across component re-mounts 5001ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 47. Multiple Notification components share state 5014ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > State Management Tests > 48. Clearing all notifications works 5013ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Accessibility Tests > 49. Each notification has role="alert" 5013ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Accessibility Tests > 50. Close button is focusable 5011ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Accessibility Tests > 51. Close button has accessible text (×) 5009ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Accessibility Tests > 52. Screen reader announcements work (role="alert") 5010ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 53. Empty title (should still render) 5010ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 54. Very long title 5008ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 55. Very long description 5009ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 56. Rapid notify() calls 5010ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 57. notify() during auto-dismiss 5014ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Notification > Edge Cases > 58. closeNotification during timer 5008ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Notification > Edge Cases > 59. Changing placement dynamically 8ms
   × Notification > Edge Cases > 60. Zero duration with close button 5007ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
