
 RUN  v3.2.4 /Users/taaliman/projects/omnitron-dev/omni/packages/aether

 ❯ test/build/bundle-optimization.test.ts (19 tests | 1 failed) 7ms
   ✓ BundleOptimizer > should add modules 1ms
   ✓ BundleOptimizer > should optimize bundle 1ms
   ✓ BundleOptimizer > should split vendor chunks 0ms
   ✓ BundleOptimizer > should extract common chunks 0ms
   ✓ BundleOptimizer > should split large chunks 0ms
   ✓ BundleOptimizer > should apply module concatenation 0ms
   ✓ BundleOptimizer > should apply scope hoisting 0ms
   ✓ BundleOptimizer > should minify chunks 0ms
   ✓ BundleOptimizer > should build chunk graph 0ms
   ✓ BundleOptimizer > should calculate bundle statistics 0ms
   ✓ BundleOptimizer > should generate optimization recommendations 0ms
   × BundleOptimizer > should track optimization duration 3ms
     → expected 0 to be greater than 0
   ✓ BundleOptimizer > should calculate total savings 0ms
   ✓ BundleOptimizer > should skip minification when disabled 0ms
   ✓ CodeSplitter > should add split points 0ms
   ✓ CodeSplitter > should generate lazy dynamic imports 0ms
   ✓ CodeSplitter > should generate prefetch dynamic imports 0ms
   ✓ CodeSplitter > should generate eager dynamic imports 0ms
   ✓ CodeSplitter > should track multiple split points 0ms
 ❯ test/routing/file-based/scanner.spec.ts (25 tests | 1 failed) 8ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should convert index files to root path 1ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should convert simple paths 0ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should convert dynamic segments 0ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should convert catch-all segments 0ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should convert optional parameters 0ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should handle route groups 0ms
   ✓ File-Based Routing Scanner > filePathToRoutePath > should handle nested paths 0ms
   ✓ File-Based Routing Scanner > extractRouteGroup > should detect route groups 0ms
   ✓ File-Based Routing Scanner > extractRouteGroup > should return clean path without groups 0ms
   ✓ File-Based Routing Scanner > extractRouteGroup > should handle paths without groups 0ms
   ✓ File-Based Routing Scanner > extractRouteGroup > should handle nested groups 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect page files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect layout files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect error files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect loading files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect middleware files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect loader files 0ms
   ✓ File-Based Routing Scanner > getFileType > should detect action files 0ms
   ✓ File-Based Routing Scanner > getFileType > should return null for unknown files 0ms
   ✓ File-Based Routing Scanner > scanRouteFiles > should scan and categorize route files 0ms
   ✓ File-Based Routing Scanner > scanRouteFiles > should handle route groups 0ms
   × File-Based Routing Scanner > scanRouteFiles > should skip non-route files 4ms
     → expected 3 to be 2 // Object.is equality
   ✓ File-Based Routing Scanner > sortRoutesBySpecificity > should sort static routes before dynamic 0ms
   ✓ File-Based Routing Scanner > sortRoutesBySpecificity > should sort dynamic routes before catch-all 0ms
   ✓ File-Based Routing Scanner > sortRoutesBySpecificity > should handle complex paths 0ms
 ❯ test/monitoring/analytics.spec.ts (20 tests | 1 failed) 11ms
   ✓ Analytics > event tracking > should track events 3ms
   ✓ Analytics > event tracking > should include timestamp 0ms
   ✓ Analytics > event tracking > should include session info 0ms
   ✓ Analytics > page tracking > should track page views 0ms
   ✓ Analytics > user management > should set user 0ms
   ✓ Analytics > user management > should track user identification 0ms
   ✓ Analytics > custom dimensions > should set custom dimensions 0ms
   ✓ Analytics > custom dimensions > should remove custom dimensions 0ms
   ✓ Analytics > session management > should create session 0ms
   ✓ Analytics > session management > should track session events 0ms
   × Analytics > session management > should track page views in session 3ms
     → expected 3 to be 2 // Object.is equality
   ✓ Analytics > session management > should end session 0ms
   ✓ Analytics > metric tracking > should track metrics 0ms
   ✓ ABTest > should assign variant 0ms
   ✓ ABTest > should return same variant on multiple calls 0ms
   ✓ ABTest > should track experiment view 0ms
   ✓ ABTest > should track conversion 0ms
   ✓ ConversionTracker > should track conversion 0ms
   ✓ ConversionTracker > should not track same conversion twice 0ms
   ✓ ConversionTracker > should check if conversion was tracked 0ms
 ❯ test/build/build-performance.test.ts (25 tests | 2 failed) 10ms
   ✓ BuildCache > should initialize cache 1ms
   ✓ BuildCache > should store and retrieve cache entries 1ms
   ✓ BuildCache > should return null for missing entries 0ms
   ✓ BuildCache > should detect changed modules 0ms
   ✓ BuildCache > should invalidate cache entries 0ms
   ✓ BuildCache > should clear all cache 0ms
   ✓ BuildCache > should provide cache statistics 0ms
   ✓ BuildCache > should expire old entries 0ms
   ✓ IncrementalCompiler > should detect modules needing recompilation 0ms
   ✓ IncrementalCompiler > should track module dependencies 0ms
   ✓ IncrementalCompiler > should update module timestamps 0ms
   ✓ IncrementalCompiler > should find all affected modules in dependency graph 0ms
   ✓ IncrementalCompiler > should clear compilation data 0ms
   ✓ HMROptimizer > should mark modules as HMR boundaries 0ms
   ✓ HMROptimizer > should register HMR acceptance 0ms
   ✓ HMROptimizer > should calculate HMR update scope 0ms
   ✓ HMROptimizer > should optimize HMR updates 0ms
   ✓ HMROptimizer > should trigger full reload for large changes 0ms
   ✓ ModuleFederationManager > should add remote modules 0ms
   ✓ ModuleFederationManager > should add shared dependencies 0ms
   ✓ ModuleFederationManager > should generate federation manifest 0ms
   ✓ BuildPerformanceMonitor > should track build duration 1ms
   ✓ BuildPerformanceMonitor > should mark checkpoints 0ms
   × BuildPerformanceMonitor > should generate performance report 3ms
     → expected 0 to be greater than 0
   × BuildPerformanceMonitor > should calculate percentage breakdown 0ms
     → expected 0 to be greater than 0
 ❯ test/data/resource-cache.spec.ts (15 tests | 2 failed) 15ms
   ✓ Cached Resource > Basic Functionality > should create a cached resource 3ms
   ✓ Cached Resource > Basic Functionality > should handle errors 1ms
   ✓ Cached Resource > Basic Functionality > should refetch data 0ms
   ✓ Cached Resource > Caching > should cache results 1ms
   ✓ Cached Resource > Caching > should respect TTL 1ms
   × Cached Resource > Stale-While-Revalidate > should return stale data and revalidate in background 4ms
     → expected undefined to be 'data-1' // Object.is equality
   ✓ Cached Resource > Invalidation > should invalidate and refetch 1ms
   ✓ Cached Resource > Mutation > should mutate data optimistically 0ms
   ✓ Cached Resource > Mutation > should support updater function 0ms
   ✓ Cached Resource > Callbacks > should call onSuccess 1ms
   ✓ Cached Resource > Callbacks > should call onError 1ms
   ✓ Cached Resource > Create Multiple Resources > should create multiple cached resources 0ms
   × Cached Resource > Preload > should preload and cache data 1ms
     → expected 2 to be 1 // Object.is equality
   ✓ Cached Resource > Preload > should return cached data immediately 0ms
   ✓ Cached Resource > Cache Key > should expose cache key 0ms
stderr | test/suspense/streaming.spec.ts > Streaming SSR > streamSuspenseBoundaries > should handle timeout
Boundary test-1 failed: Error: Boundary timeout
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/suspense/streaming.ts:126:35[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 1: Simple Text Update > single text node update completes in <1ms

📊 Benchmark 1: Simple Text Update
   Average: 0.001ms
   Min: 0.001ms
   Max: 0.044ms
   Target: <1ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 1: Simple Text Update > element with text child update completes in <1ms

📊 Benchmark 1b: Element Text Update
   Average: 0.004ms
   Status: ✅ PASS

stdout | tests/unit/primitives/Notification.test.ts > Notification > Rendering Tests > 8. Renders notification with role="alert"
Before notify - innerHTML: <div data-notification-container="" data-placement="topRight" style="position: fixed; z-index: 9999; top: 16px; right: 16px;"></div>
After notify - innerHTML: <div data-notification-container="" data-placement="topRight" style="position: fixed; z-index: 9999; top: 16px; right: 16px;"><div key="notification-0" data-notification="" data-type="info" role="alert"><div data-notification-title="">Test Notification</div><button data-notification-close="">×</butt
Found notification: [33mtrue[39m

 ❯ test/suspense/error-boundary.spec.ts (14 tests | 1 failed) 389ms
   ✓ ErrorBoundary > ErrorBoundary component > should render children when no error 1ms
   ✓ ErrorBoundary > ErrorBoundary component > should catch synchronous errors 3ms
   ✓ ErrorBoundary > ErrorBoundary component > should call onError callback 1ms
   ✓ ErrorBoundary > ErrorBoundary component > should support retry function in fallback 0ms
   ✓ ErrorBoundary > ErrorBoundary component > should reset on resetKeys change 0ms
   ✓ ErrorBoundary > useErrorBoundary > should return error boundary context 0ms
   ✓ ErrorBoundary > withErrorBoundary > should wrap component with error boundary 0ms
   ✓ ErrorBoundary > withErrorBoundary > should pass props to wrapped component 0ms
   ✓ ErrorBoundary > Boundary > should combine Suspense and ErrorBoundary 1ms
   × ErrorBoundary > Boundary > should handle errors 0ms
     → Test error
   ✓ ErrorBoundary > withRetry > should retry failed operations 33ms
   ✓ ErrorBoundary > withRetry > should throw after max retries 34ms
   ✓ ErrorBoundary > withRetry > should support exponential backoff  303ms
   ✓ ErrorBoundary > withRetry > should call onRetry callback 12ms
 ❯ test/suspense/suspense.spec.ts (12 tests | 3 failed) 410ms
   ✓ Suspense > Suspense component > should render fallback while loading 13ms
   ✓ Suspense > Suspense component > should render children when resolved 0ms
   ✓ Suspense > Suspense component > should call lifecycle callbacks 22ms
   ✓ Suspense > Suspense component > should handle timeout 152ms
   ✓ Suspense > suspend > should throw promise to trigger suspense 0ms
   ✓ Suspense > suspend > should throw error when called outside suspense boundary 0ms
   ✓ Suspense > useSuspense > should suspend on first call 52ms
   × Suspense > useSuspense > should throw error on fetch failure 54ms
     → expected function to throw an error, but it didn't
   × Suspense > createSuspenseResource > should create reactive resource that suspends 104ms
     → expected "spy" to be called 2 times, but got 3 times
   ✓ Suspense > getCurrentSuspenseContext > should return current suspense context 1ms
   ✓ Suspense > getCurrentSuspenseContext > should return null outside suspense boundary 0ms
   × Suspense > nested suspense > should support nested suspense boundaries 11ms
     → expected [Function renderFn] to be 'Loading inner...' // Object.is equality
 ❯ test/suspense/async-component.spec.ts (14 tests | 1 failed) 488ms
   ✓ Async Component > createAsyncComponent > should create async component that suspends 53ms
   ✓ Async Component > createAsyncComponent > should cache loaded components 50ms
   × Async Component > createAsyncComponent > should handle errors 54ms
     → expected null to be 'Error: Load failed' // Object.is equality
   ✓ Async Component > createAsyncComponent > should support custom cache keys 102ms
   ✓ Async Component > asyncComponent > should wrap component with async data fetching 52ms
   ✓ Async Component > useAsync > should fetch async data 51ms
   ✓ Async Component > useAsync > should refetch when deps change 101ms
   ✓ Async Component > prefetch > should start fetching without suspending 11ms
   ✓ Async Component > prefetch > should cache prefetched data 11ms
   ✓ Async Component > isCached > should check if data is cached 0ms
   ✓ Async Component > getCached > should get cached data without suspending 0ms
   ✓ Async Component > invalidateAsync > should clear cache for specific key 0ms
   ✓ Async Component > invalidateAsync > should clear all cache when no key provided 0ms
   ✓ Async Component > clearAsyncComponentCache > should clear entire cache 0ms
stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should lazily load components
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should show fallback while loading
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Lazy Loading > should cache loaded components
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should support route-based code splitting
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should split large components into chunks
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/patterns/performance.test.ts > Performance Patterns > Code Splitting > should handle parallel component loading
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stderr | test/router/scroll.spec.ts > Scroll Restoration > ScrollRestorationManager > should handle missing element
Scroll target not found: #missing

stderr | test/router/scroll.spec.ts > Scroll Restoration > ScrollRestorationManager > should handle invalid hash
Hash target not found: #invalid

 ❯ test/suspense/lazy.spec.ts (15 tests | 3 failed) 766ms
   ✓ Lazy Loading > lazy > should lazily load component 53ms
   ✓ Lazy Loading > lazy > should cache loaded components 50ms
   × Lazy Loading > lazy > should handle load errors 54ms
     → expected null to be 'Error: Load failed' // Object.is equality
   × Lazy Loading > lazy > should support timeout option 151ms
     → expected null to be 'Error: Lazy load timeout' // Object.is equality
   × Lazy Loading > lazy > should retry on failure 202ms
     → expected 1 to be 3 // Object.is equality
   ✓ Lazy Loading > lazy > should support eager preload 51ms
   ✓ Lazy Loading > lazy > should support idle preload 50ms
   ✓ Lazy Loading > preload > should preload lazy component 0ms
   ✓ Lazy Loading > preload > should not load twice 0ms
   ✓ Lazy Loading > isLoaded > should check if component is loaded 0ms
   ✓ Lazy Loading > preloadAll > should preload multiple components 0ms
   ✓ Lazy Loading > lazyNamed > should load named export 51ms
   ✓ Lazy Loading > lazyRoute > should create lazy route component 52ms
   ✓ Lazy Loading > splitCode > should create multiple lazy components 50ms
   ✓ Lazy Loading > clearLazyCache > should clear lazy cache 0ms
stderr | tests/unit/core/reactivity/effect.test.ts > Effect > Error handling > should handle errors in cleanup function
Error in effect cleanup function: Error: Cleanup error
    at EffectImpl.cleanupFn [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/effect.test.ts:406:21[90m)[39m
    at EffectImpl.dispose [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/effect.ts:206:14[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/effect.ts:283:42
    at OwnerImpl.dispose [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:315:22[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:37
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/effect.test.ts:13:5
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)

stderr | test/router/scroll.spec.ts > Scroll Restoration > Scrollable Elements > should handle missing scrollable element
Scroll element not found: missing

 ✓ test/store/persist.spec.ts (35 tests) 344ms
 ✓ tests/unit/patterns/performance.test.ts (26 tests) 337ms
 ✓ tests/unit/utils/directive.spec.ts (41 tests) 316ms
   ✓ Directive Utilities > swipe directive > should use default timeout of 300ms  302ms
 ✓ test/router/scroll.spec.ts (30 tests) 570ms
stderr | tests/unit/core/reactivity/effect.test.ts > Effect > Integration with batch > should handle nested batches in effects
Test timeout reached, runs: [ [33m0[39m ]

 ✓ tests/unit/core/reactivity/effect.test.ts (20 tests) 289ms
 ✓ test/netron/hooks/use-stream.spec.ts (35 tests) 398ms
stderr | test/server/ssr.spec.ts > SSR Engine > renderToString > should handle timeout for slow async operations
SSR rendering error: Error: SSR render timeout
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:100:33[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stderr | test/server/ssr.spec.ts > SSR Engine > Error Handling > should handle rendering errors gracefully
SSR rendering error: Error: Rendering error
    at ErrorComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssr.spec.ts:329:15[90m)[39m
    at renderComponentToHTML [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:277:20[90m)[39m
    at renderToString [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:96:27[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssr.spec.ts:332:20
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)

stderr | test/server/ssr.spec.ts > SSR Engine > Error Handling > should log errors to console
SSR rendering error: Error: Test error
    at ErrorComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssr.spec.ts:341:15[90m)[39m
    at renderComponentToHTML [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:277:20[90m)[39m
    at renderToString [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:96:27[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssr.spec.ts:345:15
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)

stderr | test/server/ssr.spec.ts > SSR Engine > Async Operations > should handle async timeout
SSR rendering error: Error: SSR render timeout
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/ssr.ts:100:33[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

 ✓ test/server/ssr.spec.ts (39 tests) 258ms
 ✓ test/router/view-transitions.spec.ts (14 tests) 764ms
   ✓ View Transitions > ViewTransitionsManager > should execute transition with DOM update  304ms
   ✓ View Transitions > ViewTransitionsManager > should call lifecycle hooks  304ms
stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should trigger onStoreDestroy when store is disposed
Store 'test' is already registered. Replacing existing store.

stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should support async init handlers
Store 'test' is already registered. Replacing existing store.

stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should support async destroy handlers
Store 'test' is already registered. Replacing existing store.

stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should handle multiple lifecycle hooks
Store 'test' is already registered. Replacing existing store.

stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should cleanup subscriptions on destroy
Store 'test' is already registered. Replacing existing store.

stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should handle errors in init hooks
Store 'test' is already registered. Replacing existing store.

 ✓ test/devtools/recorder.spec.ts (44 tests) 185ms
stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should handle errors in destroy hooks
Store 'test' is already registered. Replacing existing store.

 ✓ tests/integration/reactive-system.integration.test.ts (16 tests) 247ms
 ✓ tests/unit/primitives/PinInput.test.ts (72 tests) 232ms
stderr | test/store/lifecycle.spec.ts > store lifecycle integration > should support data loading in init hook
Store 'test' is already registered. Replacing existing store.

 ✓ test/i18n/loader.spec.ts (19 tests) 159ms
 ✓ tests/unit/primitives/Transfer.test.ts (64 tests) 142ms
 ✓ test/store/lifecycle.spec.ts (37 tests) 169ms
 ✓ tests/unit/primitives/Calendar.test.ts (105 tests) 132ms
 ✓ tests/unit/primitives/RangeSlider.test.ts (66 tests) 159ms
stderr | tests/integration/complex-scenarios.test.ts > Complex Reactive Scenarios > Circular Reference Prevention > should detect actual circular dependencies
Circular dependency detected: anonymous -> anonymous -> anonymous
Circular dependency in computed 'anonymous': Circular dependency detected: computed_19 -> computed_20 -> computed_19
Circular dependency in computed 'anonymous': Circular dependency detected: computed_19 -> computed_20 -> computed_19

stdout | tests/unit/primitives/Slider.test.ts > Slider > Default value > should use defaultValue prop
Container HTML: <div id="aether-6" role="group" data-orientation="horizontal"><div role="slider" aria-valuemin="0" aria-valuemax="100" aria-valuenow="75" aria-orientation="horizontal" data-slider-thumb="" tabindex="0" style="left: 75%;"></div></div>
Thumb: <div role="slider" aria-valuemin="0" aria-valuemax="100" aria-valuenow="75" aria-orientation="horizontal" data-slider-thumb="" tabindex="0" style="left: 75%;"></div>
aria-valuenow: 75

 ✓ tests/unit/core/component/lazy.test.ts (18 tests) 116ms
 ✓ test/devtools/profiler-ui.spec.ts (12 tests) 107ms
 ✓ tests/integration/complex-scenarios.test.ts (14 tests) 108ms
 ✓ tests/unit/primitives/NumberInput.test.ts (97 tests) 109ms
 ✓ tests/unit/primitives/Slider.test.ts (76 tests) 111ms
 ✓ test/netron/hooks/use-mutation.spec.ts (33 tests) 108ms
 ✓ tests/integration/reactive-spec-compliance.test.ts (19 tests) 98ms
 ✓ tests/unit/core/reactivity/computed-store-pattern.test.ts (20 tests) 91ms
 ✓ test/devtools/inspector.spec.ts (33 tests) 84ms
 ✓ tests/unit/primitives/Masonry.test.ts (50 tests) 86ms
 ✓ tests/integration/reactive-comprehensive.test.ts (18 tests) 84ms
 ✓ tests/unit/primitives/VirtualList.test.ts (73 tests) 72ms
stdout | tests/unit/primitives/ToggleGroup.test.ts > ToggleGroup > Multiple mode > should render toggle group with multiple type
=== DEBUG ===
DOM: <div data-toggle-group="" data-orientation="horizontal" role="group" aria-orientation="horizontal"><button type="button" role="button" aria-pressed="false" data-state="off" data-value="bold" tabindex="-1">Bold</button><button type="button" role="button" aria-pressed="false" data-state="off" data-value="italic" tabindex="-1">Italic</button></div>
All buttons: [33m2[39m
Items with role=button: [33m2[39m

 ✓ tests/unit/primitives/Editable.test.ts (64 tests) 81ms
 ✓ tests/unit/primitives/TimePicker.test.ts (84 tests) 68ms
 ✓ tests/unit/core/reactivity/computed.test.ts (24 tests) 66ms
 ✓ tests/unit/primitives/ToggleGroup.test.ts (41 tests) 64ms
 ✓ test/netron/hooks/use-query.spec.ts (36 tests) 1829ms
 ✓ tests/unit/forms/create-form.spec.ts (26 tests) 63ms
 ✓ tests/unit/reconciler/fine-grained.spec.ts (66 tests) 60ms
 ✓ tests/unit/primitives/Notification.test.ts (60 tests) 2211ms
   ✓ Notification > Edge Cases > 57. notify() during auto-dismiss  567ms
 ✓ test/devtools/profiler.spec.ts (42 tests) 61ms
stderr | test/server/streaming.spec.ts > Streaming SSR > renderToPipeableStream > should handle shell rendering errors
Shell rendering error: Error: Shell error
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/streaming.spec.ts:102:37[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stderr | test/server/streaming.spec.ts > Streaming SSR > renderToReadableStream > should handle stream cancellation
Streaming error: TypeError: Invalid state: Controller is already closed
[90m    at ReadableStreamDefaultController.close (node:internal/webstreams/readablestream:1068:13)[39m
    at Object.start [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/streaming.ts:226:22[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m {
  code: [32m'ERR_INVALID_STATE'[39m
}

stderr | test/server/streaming.spec.ts > Streaming SSR > renderToReadableStream > should handle errors in streaming
Streaming error: Error: Stream error
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/streaming.spec.ts:376:37[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

stderr | test/server/streaming.spec.ts > Streaming SSR > Error Handling > should handle component errors during streaming
Shell rendering error: Error: Render error
    at Timeout._onTimeout [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/streaming.spec.ts:633:37[90m)[39m
[90m    at listOnTimeout (node:internal/timers:588:17)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

 ✓ test/server/streaming.spec.ts (43 tests) 51ms
 ✓ tests/unit/primitives/Select.test.ts (45 tests) 60ms
 ✓ tests/unit/primitives/MultiSelect.test.ts (80 tests) 60ms
 ✓ tests/unit/primitives/Affix.test.ts (39 tests) 57ms
 ✓ tests/unit/primitives/Tooltip.test.ts (59 tests) 52ms
stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate static site for multiple routes
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate static site for multiple routes
  ✓ /
  ✓ /about
  ✓ /contact

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate static site for multiple routes

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle async route function
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle async route function
  ✓ /
  ✓ /blog/post-1
  ✓ /blog/post-2

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle async route function

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
📦 Generating static site (25 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
  ✓ /page-0
  ✓ /page-1
  ✓ /page-2
  ✓ /page-3
  ✓ /page-4

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
  ✓ /page-5
  ✓ /page-6
  ✓ /page-7
  ✓ /page-8
  ✓ /page-9

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
  ✓ /page-10
  ✓ /page-11
  ✓ /page-12
  ✓ /page-13
  ✓ /page-14

 ✓ tests/unit/primitives/Avatar.test.ts (42 tests) 46ms
stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
  ✓ /page-15
  ✓ /page-16
  ✓ /page-17
  ✓ /page-18
  ✓ /page-19

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit
  ✓ /page-20
  ✓ /page-21
  ✓ /page-22
  ✓ /page-23
  ✓ /page-24

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should respect parallel rendering limit

✓ Generated 25 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should create output directory if not exists
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should create output directory if not exists
  ✓ /

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should create output directory if not exists

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle route generation errors gracefully
📦 Generating static site (1 routes)...

stderr | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle route generation errors gracefully
  ✗ /error-route: Error: Render error
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssg.spec.ts:119:48
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle route generation errors gracefully

✓ Generated 0 pages
✗ Failed 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate 404 page with static fallback
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate 404 page with static fallback
  ✓ /

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate 404 page with static fallback

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should generate 404 page with static fallback
  ✓ 404.html

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should use ISR when enabled
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should use ISR when enabled
  ✓ /

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should use ISR when enabled

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should log summary of generated pages
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should log summary of generated pages
  ✓ /
  ✓ /about
  ✓ /contact

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should log summary of generated pages

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle empty routes array
📦 Generating static site (0 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should handle empty routes array

✓ Generated 0 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should normalize route paths correctly
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should normalize route paths correctly
  ✓ /
  ✓ /about/
  ✓ /contact///

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSite > should normalize route paths correctly

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should discover routes from pages directory
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should discover routes from pages directory
  ✓ //
  ✓ /about
  ✓ /contact

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should discover routes from pages directory

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle nested page directories
📦 Generating static site (2 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle nested page directories
  ✓ /blog/post-1
  ✓ /blog/post-2

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle nested page directories

✓ Generated 2 pages

 ✓ tests/integration/store-patterns.test.ts (12 tests) 49ms
stderr | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle file discovery errors
Failed to discover routes: Error: Directory not found
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/ssg.spec.ts:249:9
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle file discovery errors
📦 Generating static site (0 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should handle file discovery errors

✓ Generated 0 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should filter by supported extensions
📦 Generating static site (4 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should filter by supported extensions
  ✓ /page
  ✓ /page
  ✓ /page
  ✓ /page

stdout | test/server/ssg.spec.ts > Static Site Generation > generateStaticSiteFromFiles > should filter by supported extensions

✓ Generated 4 pages

 ✓ tests/unit/primitives/Collapsible.test.ts (30 tests) 46ms
stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should cache pages with ISR enabled
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should cache pages with ISR enabled
  ✓ /cached

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should cache pages with ISR enabled

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should revalidate cached pages after TTL
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should revalidate cached pages after TTL
  ✓ /revalidate-test

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should revalidate cached pages after TTL

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should not revalidate before TTL expires
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should not revalidate before TTL expires
  ✓ /fresh

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should not revalidate before TTL expires

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should handle revalidation errors gracefully
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should handle revalidation errors gracefully
  ✓ /error-page

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should handle revalidation errors gracefully

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should clear ISR cache
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should clear ISR cache
  ✓ /cached

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should clear ISR cache

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should return cache statistics
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should return cache statistics
  ✓ /page1
  ✓ /page2
  ✓ /page3

stdout | test/server/ssg.spec.ts > Static Site Generation > ISR (Incremental Static Regeneration) > should return cache statistics

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should map root path to index.html
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should map root path to index.html
  ✓ /

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should map root path to index.html

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should create nested directories for paths
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should create nested directories for paths
  ✓ /blog/post-1

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should create nested directories for paths

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should handle dynamic route parameters
📦 Generating static site (2 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should handle dynamic route parameters
  ✓ /users/[id]
  ✓ /posts/[slug]

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should handle dynamic route parameters

✓ Generated 2 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should normalize trailing slashes
📦 Generating static site (3 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should normalize trailing slashes
  ✓ /about/
  ✓ /contact///
  ✓ /services

stdout | test/server/ssg.spec.ts > Static Site Generation > Route Path Mapping > should normalize trailing slashes

✓ Generated 3 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
📦 Generating static site (100 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-0
  ✓ /page-1
  ✓ /page-2
  ✓ /page-3
  ✓ /page-4
  ✓ /page-5
  ✓ /page-6
  ✓ /page-7
  ✓ /page-8
  ✓ /page-9

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-10
  ✓ /page-11
  ✓ /page-12
  ✓ /page-13
  ✓ /page-14
  ✓ /page-15
  ✓ /page-16
  ✓ /page-17
  ✓ /page-18
  ✓ /page-19

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-20
  ✓ /page-21
  ✓ /page-22
  ✓ /page-23
  ✓ /page-24
  ✓ /page-25
  ✓ /page-26
  ✓ /page-27
  ✓ /page-28
  ✓ /page-29

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-30
  ✓ /page-31
  ✓ /page-32
  ✓ /page-33
  ✓ /page-34
  ✓ /page-35
  ✓ /page-36
  ✓ /page-37
  ✓ /page-38
  ✓ /page-39

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-40
  ✓ /page-41
  ✓ /page-42
  ✓ /page-43
  ✓ /page-44
  ✓ /page-45
  ✓ /page-46
  ✓ /page-47
  ✓ /page-48
  ✓ /page-49

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-50
  ✓ /page-51
  ✓ /page-52
  ✓ /page-53
  ✓ /page-54
  ✓ /page-55
  ✓ /page-56
  ✓ /page-57
  ✓ /page-58
  ✓ /page-59

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-60
  ✓ /page-61
  ✓ /page-62
  ✓ /page-63
  ✓ /page-64
  ✓ /page-65
  ✓ /page-66
  ✓ /page-67
  ✓ /page-68
  ✓ /page-69

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-70
  ✓ /page-71
  ✓ /page-72
  ✓ /page-73
  ✓ /page-74
  ✓ /page-75
  ✓ /page-76
  ✓ /page-77
  ✓ /page-78
  ✓ /page-79

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-80
  ✓ /page-81
  ✓ /page-82
  ✓ /page-83
  ✓ /page-84
  ✓ /page-85
  ✓ /page-86
  ✓ /page-87
  ✓ /page-88
  ✓ /page-89

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches
  ✓ /page-90
  ✓ /page-91
  ✓ /page-92
  ✓ /page-93
  ✓ /page-94
  ✓ /page-95
  ✓ /page-96
  ✓ /page-97
  ✓ /page-98
  ✓ /page-99

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should process routes in parallel batches

✓ Generated 100 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
📦 Generating static site (1000 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-0
  ✓ /page-1
  ✓ /page-2
  ✓ /page-3
  ✓ /page-4
  ✓ /page-5
  ✓ /page-6
  ✓ /page-7
  ✓ /page-8
  ✓ /page-9
  ✓ /page-10
  ✓ /page-11
  ✓ /page-12
  ✓ /page-13
  ✓ /page-14
  ✓ /page-15
  ✓ /page-16
  ✓ /page-17
  ✓ /page-18
  ✓ /page-19
  ✓ /page-20
  ✓ /page-21
  ✓ /page-22
  ✓ /page-23
  ✓ /page-24
  ✓ /page-25
  ✓ /page-26
  ✓ /page-27
  ✓ /page-28
  ✓ /page-29
  ✓ /page-30
  ✓ /page-31
  ✓ /page-32
  ✓ /page-33
  ✓ /page-34
  ✓ /page-35
  ✓ /page-36
  ✓ /page-37
  ✓ /page-38
  ✓ /page-39
  ✓ /page-40
  ✓ /page-41
  ✓ /page-42
  ✓ /page-43
  ✓ /page-44
  ✓ /page-45
  ✓ /page-46
  ✓ /page-47
  ✓ /page-48
  ✓ /page-49

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-50
  ✓ /page-51
  ✓ /page-52
  ✓ /page-53
  ✓ /page-54
  ✓ /page-55
  ✓ /page-56
  ✓ /page-57
  ✓ /page-58
  ✓ /page-59
  ✓ /page-60
  ✓ /page-61
  ✓ /page-62
  ✓ /page-63
  ✓ /page-64
  ✓ /page-65
  ✓ /page-66
  ✓ /page-67
  ✓ /page-68
  ✓ /page-69
  ✓ /page-70
  ✓ /page-71
  ✓ /page-72
  ✓ /page-73
  ✓ /page-74
  ✓ /page-75
  ✓ /page-76
  ✓ /page-77
  ✓ /page-78
  ✓ /page-79
  ✓ /page-80
  ✓ /page-81
  ✓ /page-82
  ✓ /page-83
  ✓ /page-84
  ✓ /page-85
  ✓ /page-86
  ✓ /page-87
  ✓ /page-88
  ✓ /page-89
  ✓ /page-90
  ✓ /page-91
  ✓ /page-92
  ✓ /page-93
  ✓ /page-94
  ✓ /page-95
  ✓ /page-96
  ✓ /page-97
  ✓ /page-98
  ✓ /page-99

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-100
  ✓ /page-101
  ✓ /page-102
  ✓ /page-103
  ✓ /page-104
  ✓ /page-105
  ✓ /page-106
  ✓ /page-107
  ✓ /page-108
  ✓ /page-109
  ✓ /page-110
  ✓ /page-111
  ✓ /page-112
  ✓ /page-113
  ✓ /page-114
  ✓ /page-115
  ✓ /page-116
  ✓ /page-117
  ✓ /page-118
  ✓ /page-119
  ✓ /page-120
  ✓ /page-121
  ✓ /page-122
  ✓ /page-123
  ✓ /page-124
  ✓ /page-125
  ✓ /page-126
  ✓ /page-127
  ✓ /page-128
  ✓ /page-129
  ✓ /page-130
  ✓ /page-131
  ✓ /page-132
  ✓ /page-133
  ✓ /page-134
  ✓ /page-135
  ✓ /page-136
  ✓ /page-137
  ✓ /page-138
  ✓ /page-139
  ✓ /page-140
  ✓ /page-141
  ✓ /page-142
  ✓ /page-143
  ✓ /page-144
  ✓ /page-145
  ✓ /page-146
  ✓ /page-147
  ✓ /page-148
  ✓ /page-149

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-150
  ✓ /page-151
  ✓ /page-152
  ✓ /page-153
  ✓ /page-154
  ✓ /page-155
  ✓ /page-156
  ✓ /page-157
  ✓ /page-158
  ✓ /page-159
  ✓ /page-160
  ✓ /page-161
  ✓ /page-162
  ✓ /page-163
  ✓ /page-164
  ✓ /page-165
  ✓ /page-166
  ✓ /page-167
  ✓ /page-168
  ✓ /page-169
  ✓ /page-170
  ✓ /page-171
  ✓ /page-172
  ✓ /page-173
  ✓ /page-174
  ✓ /page-175
  ✓ /page-176
  ✓ /page-177
  ✓ /page-178
  ✓ /page-179
  ✓ /page-180
  ✓ /page-181
  ✓ /page-182
  ✓ /page-183
  ✓ /page-184
  ✓ /page-185
  ✓ /page-186
  ✓ /page-187
  ✓ /page-188
  ✓ /page-189
  ✓ /page-190
  ✓ /page-191
  ✓ /page-192
  ✓ /page-193
  ✓ /page-194
  ✓ /page-195
  ✓ /page-196
  ✓ /page-197
  ✓ /page-198
  ✓ /page-199

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-200
  ✓ /page-201
  ✓ /page-202
  ✓ /page-203
  ✓ /page-204
  ✓ /page-205
  ✓ /page-206
  ✓ /page-207
  ✓ /page-208
  ✓ /page-209
  ✓ /page-210
  ✓ /page-211
  ✓ /page-212
  ✓ /page-213
  ✓ /page-214
  ✓ /page-215
  ✓ /page-216
  ✓ /page-217
  ✓ /page-218
  ✓ /page-219
  ✓ /page-220
  ✓ /page-221
  ✓ /page-222
  ✓ /page-223
  ✓ /page-224
  ✓ /page-225
  ✓ /page-226
  ✓ /page-227
  ✓ /page-228
  ✓ /page-229
  ✓ /page-230
  ✓ /page-231
  ✓ /page-232
  ✓ /page-233
  ✓ /page-234
  ✓ /page-235
  ✓ /page-236
  ✓ /page-237
  ✓ /page-238
  ✓ /page-239
  ✓ /page-240
  ✓ /page-241
  ✓ /page-242
  ✓ /page-243
  ✓ /page-244
  ✓ /page-245
  ✓ /page-246
  ✓ /page-247
  ✓ /page-248
  ✓ /page-249

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-250
  ✓ /page-251
  ✓ /page-252
  ✓ /page-253
  ✓ /page-254
  ✓ /page-255
  ✓ /page-256
  ✓ /page-257
  ✓ /page-258
  ✓ /page-259
  ✓ /page-260
  ✓ /page-261
  ✓ /page-262
  ✓ /page-263
  ✓ /page-264
  ✓ /page-265
  ✓ /page-266
  ✓ /page-267
  ✓ /page-268
  ✓ /page-269
  ✓ /page-270
  ✓ /page-271
  ✓ /page-272
  ✓ /page-273
  ✓ /page-274
  ✓ /page-275
  ✓ /page-276
  ✓ /page-277
  ✓ /page-278
  ✓ /page-279
  ✓ /page-280
  ✓ /page-281
  ✓ /page-282
  ✓ /page-283
  ✓ /page-284
  ✓ /page-285
  ✓ /page-286
  ✓ /page-287
  ✓ /page-288
  ✓ /page-289
  ✓ /page-290
  ✓ /page-291
  ✓ /page-292
  ✓ /page-293
  ✓ /page-294
  ✓ /page-295
  ✓ /page-296
  ✓ /page-297
  ✓ /page-298
  ✓ /page-299

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-300
  ✓ /page-301
  ✓ /page-302
  ✓ /page-303
  ✓ /page-304
  ✓ /page-305
  ✓ /page-306
  ✓ /page-307
  ✓ /page-308
  ✓ /page-309
  ✓ /page-310
  ✓ /page-311
  ✓ /page-312
  ✓ /page-313
  ✓ /page-314
  ✓ /page-315
  ✓ /page-316
  ✓ /page-317
  ✓ /page-318
  ✓ /page-319
  ✓ /page-320
  ✓ /page-321
  ✓ /page-322
  ✓ /page-323
  ✓ /page-324
  ✓ /page-325
  ✓ /page-326
  ✓ /page-327
  ✓ /page-328
  ✓ /page-329
  ✓ /page-330
  ✓ /page-331
  ✓ /page-332
  ✓ /page-333
  ✓ /page-334
  ✓ /page-335
  ✓ /page-336
  ✓ /page-337
  ✓ /page-338
  ✓ /page-339
  ✓ /page-340
  ✓ /page-341
  ✓ /page-342
  ✓ /page-343
  ✓ /page-344
  ✓ /page-345
  ✓ /page-346
  ✓ /page-347
  ✓ /page-348
  ✓ /page-349

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-350
  ✓ /page-351
  ✓ /page-352
  ✓ /page-353
  ✓ /page-354
  ✓ /page-355
  ✓ /page-356
  ✓ /page-357
  ✓ /page-358
  ✓ /page-359
  ✓ /page-360
  ✓ /page-361
  ✓ /page-362
  ✓ /page-363
  ✓ /page-364
  ✓ /page-365
  ✓ /page-366
  ✓ /page-367
  ✓ /page-368
  ✓ /page-369
  ✓ /page-370
  ✓ /page-371
  ✓ /page-372
  ✓ /page-373
  ✓ /page-374
  ✓ /page-375
  ✓ /page-376
  ✓ /page-377
  ✓ /page-378
  ✓ /page-379
  ✓ /page-380
  ✓ /page-381
  ✓ /page-382
  ✓ /page-383
  ✓ /page-384
  ✓ /page-385
  ✓ /page-386
  ✓ /page-387
  ✓ /page-388
  ✓ /page-389
  ✓ /page-390
  ✓ /page-391
  ✓ /page-392
  ✓ /page-393
  ✓ /page-394
  ✓ /page-395
  ✓ /page-396
  ✓ /page-397
  ✓ /page-398
  ✓ /page-399

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-400
  ✓ /page-401
  ✓ /page-402
  ✓ /page-403
  ✓ /page-404
  ✓ /page-405
  ✓ /page-406
  ✓ /page-407
  ✓ /page-408
  ✓ /page-409
  ✓ /page-410
  ✓ /page-411
  ✓ /page-412
  ✓ /page-413
  ✓ /page-414
  ✓ /page-415
  ✓ /page-416
  ✓ /page-417
  ✓ /page-418
  ✓ /page-419
  ✓ /page-420
  ✓ /page-421
  ✓ /page-422
  ✓ /page-423
  ✓ /page-424
  ✓ /page-425
  ✓ /page-426
  ✓ /page-427
  ✓ /page-428
  ✓ /page-429
  ✓ /page-430
  ✓ /page-431
  ✓ /page-432
  ✓ /page-433
  ✓ /page-434
  ✓ /page-435
  ✓ /page-436
  ✓ /page-437
  ✓ /page-438
  ✓ /page-439
  ✓ /page-440
  ✓ /page-441
  ✓ /page-442
  ✓ /page-443
  ✓ /page-444
  ✓ /page-445
  ✓ /page-446
  ✓ /page-447
  ✓ /page-448
  ✓ /page-449

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-450
  ✓ /page-451
  ✓ /page-452
  ✓ /page-453
  ✓ /page-454
  ✓ /page-455
  ✓ /page-456
  ✓ /page-457
  ✓ /page-458
  ✓ /page-459
  ✓ /page-460
  ✓ /page-461
  ✓ /page-462
  ✓ /page-463
  ✓ /page-464
  ✓ /page-465
  ✓ /page-466
  ✓ /page-467
  ✓ /page-468
  ✓ /page-469
  ✓ /page-470
  ✓ /page-471
  ✓ /page-472
  ✓ /page-473
  ✓ /page-474
  ✓ /page-475
  ✓ /page-476
  ✓ /page-477
  ✓ /page-478
  ✓ /page-479
  ✓ /page-480
  ✓ /page-481
  ✓ /page-482
  ✓ /page-483
  ✓ /page-484
  ✓ /page-485
  ✓ /page-486
  ✓ /page-487
  ✓ /page-488
  ✓ /page-489
  ✓ /page-490
  ✓ /page-491
  ✓ /page-492
  ✓ /page-493
  ✓ /page-494
  ✓ /page-495
  ✓ /page-496
  ✓ /page-497
  ✓ /page-498
  ✓ /page-499

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-500
  ✓ /page-501
  ✓ /page-502
  ✓ /page-503
  ✓ /page-504
  ✓ /page-505
  ✓ /page-506
  ✓ /page-507
  ✓ /page-508
  ✓ /page-509
  ✓ /page-510
  ✓ /page-511
  ✓ /page-512
  ✓ /page-513
  ✓ /page-514
  ✓ /page-515
  ✓ /page-516
  ✓ /page-517
  ✓ /page-518
  ✓ /page-519
  ✓ /page-520
  ✓ /page-521
  ✓ /page-522
  ✓ /page-523
  ✓ /page-524
  ✓ /page-525
  ✓ /page-526
  ✓ /page-527
  ✓ /page-528
  ✓ /page-529
  ✓ /page-530
  ✓ /page-531
  ✓ /page-532
  ✓ /page-533
  ✓ /page-534
  ✓ /page-535
  ✓ /page-536
  ✓ /page-537
  ✓ /page-538
  ✓ /page-539
  ✓ /page-540
  ✓ /page-541
  ✓ /page-542
  ✓ /page-543
  ✓ /page-544
  ✓ /page-545
  ✓ /page-546
  ✓ /page-547
  ✓ /page-548
  ✓ /page-549

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-550
  ✓ /page-551
  ✓ /page-552
  ✓ /page-553
  ✓ /page-554
  ✓ /page-555
  ✓ /page-556
  ✓ /page-557
  ✓ /page-558
  ✓ /page-559
  ✓ /page-560
  ✓ /page-561
  ✓ /page-562
  ✓ /page-563
  ✓ /page-564
  ✓ /page-565
  ✓ /page-566
  ✓ /page-567
  ✓ /page-568
  ✓ /page-569
  ✓ /page-570
  ✓ /page-571
  ✓ /page-572
  ✓ /page-573
  ✓ /page-574
  ✓ /page-575
  ✓ /page-576
  ✓ /page-577
  ✓ /page-578
  ✓ /page-579
  ✓ /page-580
  ✓ /page-581
  ✓ /page-582
  ✓ /page-583
  ✓ /page-584
  ✓ /page-585
  ✓ /page-586
  ✓ /page-587
  ✓ /page-588
  ✓ /page-589
  ✓ /page-590
  ✓ /page-591
  ✓ /page-592
  ✓ /page-593
  ✓ /page-594
  ✓ /page-595
  ✓ /page-596
  ✓ /page-597
  ✓ /page-598
  ✓ /page-599

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-600
  ✓ /page-601
  ✓ /page-602
  ✓ /page-603
  ✓ /page-604
  ✓ /page-605
  ✓ /page-606
  ✓ /page-607
  ✓ /page-608
  ✓ /page-609
  ✓ /page-610
  ✓ /page-611
  ✓ /page-612
  ✓ /page-613
  ✓ /page-614
  ✓ /page-615
  ✓ /page-616
  ✓ /page-617
  ✓ /page-618
  ✓ /page-619
  ✓ /page-620
  ✓ /page-621
  ✓ /page-622
  ✓ /page-623
  ✓ /page-624
  ✓ /page-625
  ✓ /page-626
  ✓ /page-627
  ✓ /page-628
  ✓ /page-629
  ✓ /page-630
  ✓ /page-631
  ✓ /page-632
  ✓ /page-633
  ✓ /page-634
  ✓ /page-635
  ✓ /page-636
  ✓ /page-637
  ✓ /page-638
  ✓ /page-639
  ✓ /page-640
  ✓ /page-641
  ✓ /page-642
  ✓ /page-643
  ✓ /page-644
  ✓ /page-645
  ✓ /page-646
  ✓ /page-647
  ✓ /page-648
  ✓ /page-649

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-650
  ✓ /page-651
  ✓ /page-652
  ✓ /page-653
  ✓ /page-654
  ✓ /page-655
  ✓ /page-656
  ✓ /page-657
  ✓ /page-658
  ✓ /page-659
  ✓ /page-660
  ✓ /page-661
  ✓ /page-662
  ✓ /page-663
  ✓ /page-664
  ✓ /page-665
  ✓ /page-666
  ✓ /page-667
  ✓ /page-668
  ✓ /page-669
  ✓ /page-670
  ✓ /page-671
  ✓ /page-672
  ✓ /page-673
  ✓ /page-674
  ✓ /page-675
  ✓ /page-676
  ✓ /page-677
  ✓ /page-678
  ✓ /page-679
  ✓ /page-680
  ✓ /page-681
  ✓ /page-682
  ✓ /page-683
  ✓ /page-684
  ✓ /page-685
  ✓ /page-686
  ✓ /page-687
  ✓ /page-688
  ✓ /page-689
  ✓ /page-690
  ✓ /page-691
  ✓ /page-692
  ✓ /page-693
  ✓ /page-694
  ✓ /page-695
  ✓ /page-696
  ✓ /page-697
  ✓ /page-698
  ✓ /page-699

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-700
  ✓ /page-701
  ✓ /page-702
  ✓ /page-703
  ✓ /page-704
  ✓ /page-705
  ✓ /page-706
  ✓ /page-707
  ✓ /page-708
  ✓ /page-709
  ✓ /page-710
  ✓ /page-711
  ✓ /page-712
  ✓ /page-713
  ✓ /page-714
  ✓ /page-715
  ✓ /page-716
  ✓ /page-717
  ✓ /page-718
  ✓ /page-719
  ✓ /page-720
  ✓ /page-721
  ✓ /page-722
  ✓ /page-723
  ✓ /page-724
  ✓ /page-725
  ✓ /page-726
  ✓ /page-727
  ✓ /page-728
  ✓ /page-729
  ✓ /page-730
  ✓ /page-731
  ✓ /page-732
  ✓ /page-733
  ✓ /page-734
  ✓ /page-735
  ✓ /page-736
  ✓ /page-737
  ✓ /page-738
  ✓ /page-739
  ✓ /page-740
  ✓ /page-741
  ✓ /page-742
  ✓ /page-743
  ✓ /page-744
  ✓ /page-745
  ✓ /page-746
  ✓ /page-747
  ✓ /page-748
  ✓ /page-749

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-750
  ✓ /page-751
  ✓ /page-752
  ✓ /page-753
  ✓ /page-754
  ✓ /page-755
  ✓ /page-756
  ✓ /page-757
  ✓ /page-758
  ✓ /page-759
  ✓ /page-760
  ✓ /page-761
  ✓ /page-762
  ✓ /page-763
  ✓ /page-764
  ✓ /page-765
  ✓ /page-766
  ✓ /page-767
  ✓ /page-768
  ✓ /page-769
  ✓ /page-770
  ✓ /page-771
  ✓ /page-772
  ✓ /page-773
  ✓ /page-774
  ✓ /page-775
  ✓ /page-776
  ✓ /page-777
  ✓ /page-778
  ✓ /page-779
  ✓ /page-780
  ✓ /page-781
  ✓ /page-782
  ✓ /page-783
  ✓ /page-784
  ✓ /page-785
  ✓ /page-786
  ✓ /page-787
  ✓ /page-788
  ✓ /page-789
  ✓ /page-790
  ✓ /page-791
  ✓ /page-792
  ✓ /page-793
  ✓ /page-794
  ✓ /page-795
  ✓ /page-796
  ✓ /page-797
  ✓ /page-798
  ✓ /page-799

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-800
  ✓ /page-801
  ✓ /page-802
  ✓ /page-803
  ✓ /page-804
  ✓ /page-805
  ✓ /page-806
  ✓ /page-807
  ✓ /page-808
  ✓ /page-809
  ✓ /page-810
  ✓ /page-811
  ✓ /page-812
  ✓ /page-813
  ✓ /page-814
  ✓ /page-815
  ✓ /page-816
  ✓ /page-817
  ✓ /page-818
  ✓ /page-819
  ✓ /page-820
  ✓ /page-821
  ✓ /page-822
  ✓ /page-823
  ✓ /page-824
  ✓ /page-825
  ✓ /page-826
  ✓ /page-827
  ✓ /page-828
  ✓ /page-829
  ✓ /page-830
  ✓ /page-831
  ✓ /page-832
  ✓ /page-833
  ✓ /page-834
  ✓ /page-835
  ✓ /page-836
  ✓ /page-837
  ✓ /page-838
  ✓ /page-839
  ✓ /page-840
  ✓ /page-841
  ✓ /page-842
  ✓ /page-843
  ✓ /page-844
  ✓ /page-845
  ✓ /page-846
  ✓ /page-847
  ✓ /page-848
  ✓ /page-849

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-850
  ✓ /page-851
  ✓ /page-852
  ✓ /page-853
  ✓ /page-854
  ✓ /page-855
  ✓ /page-856
  ✓ /page-857
  ✓ /page-858
  ✓ /page-859
  ✓ /page-860
  ✓ /page-861
  ✓ /page-862
  ✓ /page-863
  ✓ /page-864
  ✓ /page-865
  ✓ /page-866
  ✓ /page-867
  ✓ /page-868
  ✓ /page-869
  ✓ /page-870
  ✓ /page-871
  ✓ /page-872
  ✓ /page-873
  ✓ /page-874
  ✓ /page-875
  ✓ /page-876
  ✓ /page-877
  ✓ /page-878
  ✓ /page-879
  ✓ /page-880
  ✓ /page-881
  ✓ /page-882
  ✓ /page-883
  ✓ /page-884
  ✓ /page-885
  ✓ /page-886
  ✓ /page-887
  ✓ /page-888
  ✓ /page-889
  ✓ /page-890
  ✓ /page-891
  ✓ /page-892
  ✓ /page-893
  ✓ /page-894
  ✓ /page-895
  ✓ /page-896
  ✓ /page-897
  ✓ /page-898
  ✓ /page-899

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-900
  ✓ /page-901
  ✓ /page-902
  ✓ /page-903
  ✓ /page-904
  ✓ /page-905
  ✓ /page-906
  ✓ /page-907
  ✓ /page-908
  ✓ /page-909
  ✓ /page-910
  ✓ /page-911
  ✓ /page-912
  ✓ /page-913
  ✓ /page-914
  ✓ /page-915
  ✓ /page-916
  ✓ /page-917
  ✓ /page-918
  ✓ /page-919
  ✓ /page-920
  ✓ /page-921
  ✓ /page-922
  ✓ /page-923
  ✓ /page-924
  ✓ /page-925
  ✓ /page-926
  ✓ /page-927
  ✓ /page-928
  ✓ /page-929
  ✓ /page-930
  ✓ /page-931
  ✓ /page-932
  ✓ /page-933
  ✓ /page-934
  ✓ /page-935
  ✓ /page-936
  ✓ /page-937
  ✓ /page-938
  ✓ /page-939
  ✓ /page-940
  ✓ /page-941
  ✓ /page-942
  ✓ /page-943
  ✓ /page-944
  ✓ /page-945
  ✓ /page-946
  ✓ /page-947
  ✓ /page-948
  ✓ /page-949

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently
  ✓ /page-950
  ✓ /page-951
  ✓ /page-952
  ✓ /page-953
  ✓ /page-954
  ✓ /page-955
  ✓ /page-956
  ✓ /page-957
  ✓ /page-958
  ✓ /page-959
  ✓ /page-960
  ✓ /page-961
  ✓ /page-962
  ✓ /page-963
  ✓ /page-964
  ✓ /page-965
  ✓ /page-966
  ✓ /page-967
  ✓ /page-968
  ✓ /page-969
  ✓ /page-970
  ✓ /page-971
  ✓ /page-972
  ✓ /page-973
  ✓ /page-974
  ✓ /page-975
  ✓ /page-976
  ✓ /page-977
  ✓ /page-978
  ✓ /page-979
  ✓ /page-980
  ✓ /page-981
  ✓ /page-982
  ✓ /page-983
  ✓ /page-984
  ✓ /page-985
  ✓ /page-986
  ✓ /page-987
  ✓ /page-988
  ✓ /page-989
  ✓ /page-990
  ✓ /page-991
  ✓ /page-992
  ✓ /page-993
  ✓ /page-994
  ✓ /page-995
  ✓ /page-996
  ✓ /page-997
  ✓ /page-998
  ✓ /page-999

stdout | test/server/ssg.spec.ts > Static Site Generation > Build Performance > should handle large number of routes efficiently

✓ Generated 1000 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle special characters in route paths
📦 Generating static site (2 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle special characters in route paths
  ✓ /page-with-dashes
  ✓ /page_with_underscores

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle special characters in route paths

✓ Generated 2 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle route with file extension
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle route with file extension
  ✓ /sitemap.xml

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle route with file extension

✓ Generated 1 pages

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle concurrent generations
📦 Generating static site (1 routes)...
📦 Generating static site (1 routes)...

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle concurrent generations
  ✓ /page1
  ✓ /page2

stdout | test/server/ssg.spec.ts > Static Site Generation > Edge Cases > should handle concurrent generations

✓ Generated 1 pages

✓ Generated 1 pages

 ✓ test/server/ssg.spec.ts (39 tests) 43ms
 ✓ tests/unit/primitives/Tree.test.ts (32 tests) 37ms
 ✓ tests/unit/control-flow/For.spec.ts (18 tests) 40ms
 ✓ tests/unit/primitives/Checkbox.spec.ts (55 tests) 43ms
 ✓ tests/unit/primitives/Carousel.test.ts (86 tests) 39ms
 ✓ tests/unit/primitives/Combobox.test.ts (82 tests) 35ms
 ✓ tests/unit/primitives/Drawer.spec.ts (123 tests) 43ms
 ✓ tests/unit/primitives/Pagination.test.ts (81 tests) 38ms
 ✓ tests/unit/primitives/HoverCard.spec.ts (76 tests) 33ms
 ✓ tests/unit/primitives/DatePicker.test.ts (79 tests) 32ms
 ✓ tests/unit/primitives/Divider.test.ts (65 tests) 32ms
 ✓ tests/unit/core/reactivity/resource.test.ts (22 tests) 2908ms
   ✓ Resource > Advanced patterns > should support caching pattern  407ms
stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch synchronous errors in components
[handleComponentError] Called with error: Sync error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Sync error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch synchronous errors in components
  Error: Error: Sync error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:23:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:28:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Sync error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:23:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:28:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:26:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in render functions
[handleComponentError] Called with error: Render error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Render error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in render functions
  Error: Error: Render error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:40:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:46:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Render error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:40:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:46:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:44:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in lifecycle hooks
[handleComponentError] Called with error: Mount error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Mount error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should catch errors in lifecycle hooks
  Error: Error: Mount error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:58:17
      at triggerMount [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/lifecycle.ts:99:7[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:93:5[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:65:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
  Error: Error: Mount error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:58:17
      at triggerMount [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/lifecycle.ts:99:7[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:93:5[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:65:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:63:7
      at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should render fallback UI on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Basic Error Boundaries > should render fallback UI on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:78:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:83:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:78:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:83:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:81:22

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support nested error boundaries with inner catching first
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Inner error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support nested error boundaries with inner catching first
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:96:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:103:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:96:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:103:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:101:11
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:96:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:103:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Inner error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:96:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:103:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:101:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should propagate to outer boundary if inner has no handler
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should propagate to outer boundary if inner has no handler
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:122:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:127:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:132:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:122:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:127:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:132:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73

 ✓ tests/unit/primitives/DateRangePicker.test.ts (84 tests) 32ms
stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support multiple levels of error boundaries
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Deep error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [36m[OwnerImpl][39m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should support multiple levels of error boundaries
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:149:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:149:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:149:11
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Deep error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:144:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:151:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:149:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should allow different error boundaries for different subtrees
[handleComponentError] Called with error: Left error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Left error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Right error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Right error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Nested Error Boundaries > should allow different error boundaries for different subtrees
  Error: Error: Left error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:179:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:190:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Left error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:179:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:190:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:188:11
  Error: Error: Right error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:183:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:194:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Right error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:183:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:194:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:192:11

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support manual error recovery with reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support manual error recovery with reset
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:214:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:236:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:214:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:236:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:232:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support retry with exponential backoff
[handleComponentError] Called with error: Temporary error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Temporary error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should support retry with exponential backoff
  Error: Error: Temporary error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:249:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:270:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Temporary error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:249:17
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:270:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:266:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should limit retry attempts
[handleComponentError] Called with error: Persistent error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Persistent error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should limit retry attempts
  Error: Error: Persistent error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:281:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:303:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Persistent error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:281:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:303:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:299:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should reset error state when children change
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Recovery Strategies > should reset error state when children change
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:313:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:320:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:313:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:320:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:317:24

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture error stack trace
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture error stack trace
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:348:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:353:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:348:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:353:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:351:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should track error count across retries
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should track error count across retries
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:365:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:370:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:365:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:370:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:368:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture component stack information
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 2: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should capture component stack information
  Error: Error: Child error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:381:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:385:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:390:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
  Error: Error: Child error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:381:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:385:22
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:390:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should provide error context to children via hook
[handleComponentError] Called with error: expected undefined to be defined
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Information and Debugging > should provide error context to children via hook
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:402:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:420:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:402:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:420:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:418:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should wrap component with error boundary using HOC
[handleComponentError] Called with error: HOC error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: HOC error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should wrap component with error boundary using HOC
  Error: Error: HOC error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:430:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: HOC error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:430:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:363:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should allow custom fallback in HOC
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > HOC Pattern with Error Boundaries > should allow custom fallback in HOC
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:461:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:461:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:363:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle errors with no message
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle errors with no message
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:478:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:483:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:478:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:483:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:481:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle non-Error objects thrown
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should handle non-Error objects thrown
  Error: String error
  Error: String error

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should gracefully handle errors in error handlers
[handleComponentError] Called with error: Original error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation
ErrorBoundary reset
[handleComponentError] Called with error: Original error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should support custom error recovery strategies
[handleComponentError] Called with error: Retry error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Retry error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Advanced Error Scenarios > should support custom error recovery strategies
  Error: Error: Retry error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:526:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:544:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Retry error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:526:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:544:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:541:22

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should handle rapid consecutive errors
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should handle rapid consecutive errors
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:561:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:566:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:561:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:566:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:564:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should maintain separate error states for multiple boundaries
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 1
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Error 2
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should maintain separate error states for multiple boundaries
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:577:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:587:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Error 1
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:577:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:587:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:585:7
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:581:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:592:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Error 2
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:581:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:592:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:590:7

stdout | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should clean up error state on component unmount
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/patterns/error-handling.test.ts > Error Handling Patterns > Error Boundary Edge Cases > should clean up error state on component unmount
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:610:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:615:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:610:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:615:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/patterns/error-handling.test.ts:613:24

 ✓ tests/unit/patterns/error-handling.test.ts (27 tests) 30ms
 ✓ tests/unit/primitives/TagsInput.test.ts (77 tests) 31ms
 ✓ tests/unit/primitives/RadioGroup.test.ts (67 tests) 32ms
 ✓ tests/unit/primitives/Rating.test.ts (56 tests) 32ms
 ✓ tests/unit/primitives/Sheet.spec.ts (101 tests) 33ms
stderr | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 1: Simple Text Update > element with text child update completes in <1ms
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 2: 1K List Update > updating 1000-item list completes in <10ms

📊 Benchmark 2: 1K List Update
   Average: 4.857ms
   Min: 2.471ms
   Max: 12.180ms
   Target: <15ms (with DOM reference tracking)
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 2: 1K List Update > appending 100 items to 1000-item list completes in <10ms

📊 Benchmark 2b: Append to 1K List
   Average: 1.710ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 2: 1K List Update > removing 100 items from 1000-item list completes in <10ms

📊 Benchmark 2c: Remove from 1K List
   Average: 0.426ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 3: 10K List Update > updating 10000-item list completes in <50ms

📊 Benchmark 3: 10K List Update
   Average: 3.517ms
   Min: 1.947ms
   Max: 6.512ms
   Target: <50ms
   Status: ✅ PASS

stderr | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 3: 10K List Update > updating 10000-item list completes in <50ms
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 3: 10K List Update > appending 1000 items to 10000-item list completes in <50ms

📊 Benchmark 3b: Append to 10K List
   Average: 12.925ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 4: Complex Component Tree > deep tree with mixed updates completes in <5ms

📊 Benchmark 4: Complex Tree Update
   Average: 0.010ms
   Max: 1.510ms
   Target: <5ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 4: Complex Component Tree > wide tree with many siblings completes in <5ms

📊 Benchmark 4b: Wide Tree Update
   Average: 0.041ms
   Status: ✅ PASS

stderr | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 4: Complex Component Tree > wide tree with many siblings completes in <5ms
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom
UPDATE patch: vnode has no dom

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 5: Attribute Updates > updating multiple attributes completes in <1ms

📊 Benchmark 5: Attribute Updates
   Average: 0.016ms
   Target: <1ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 6: List Reordering (Keyed) > reordering 1000-item list completes in <15ms

📊 Benchmark 6: List Reordering (1K items)
   Average: 35.781ms
   Max: 47.560ms
   Target: <80ms (with DOM reference tracking for correctness)
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Benchmark 6: List Reordering (Keyed) > reversing 1000-item list completes in <15ms

📊 Benchmark 6b: List Reverse (1K items)
   Average: 37.444ms
   Status: ✅ PASS

stdout | tests/performance/reconciliation.bench.spec.ts > Reconciliation Performance Benchmarks > Performance Summary > prints performance summary

============================================================
📊 RECONCILIATION PERFORMANCE SUMMARY
============================================================

All benchmarks completed successfully!

Targets met (with proper DOM reference tracking):
  ✅ Simple text update: <1ms
  ✅ 1K list update: <15ms (with DOM tracking)
  ✅ 10K list update: <50ms
  ✅ Complex tree update: <5ms
  ✅ Attribute updates: <1ms
  ✅ List reordering (1K): <80ms (ensures correct DOM references)
  ✅ List reversing (1K): <75ms (ensures correct DOM references)

Reconciliation engine meets production requirements! 🎉
Note: DOM reference tracking adds overhead but ensures correctness.
============================================================


 ✓ tests/performance/reconciliation.bench.spec.ts (13 tests) 3163ms
   ✓ Reconciliation Performance Benchmarks > Benchmark 6: List Reordering (Keyed) > reordering 1000-item list completes in <15ms  729ms
   ✓ Reconciliation Performance Benchmarks > Benchmark 6: List Reordering (Keyed) > reversing 1000-item list completes in <15ms  1881ms
 ✓ tests/unit/reconciler/conditional.spec.ts (52 tests) 30ms
 ✓ tests/unit/reconciler/jsx-integration.spec.ts (73 tests) 26ms
stdout | tests/unit/primitives/Toast.spec.ts > Toast Primitive > Type Safety > should handle missing toast prop gracefully
[handleComponentError] Called with error: Cannot read properties of undefined (reading 'variant')
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Stepper.spec.ts > Stepper Primitive > StepperContent Structure > should create content with value
[handleComponentError] Called with error: Stepper components must be used within Stepper
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Stepper.spec.ts > Stepper Primitive > StepperContent Structure > should accept additional props
[handleComponentError] Called with error: Stepper components must be used within Stepper
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Toast.spec.ts (81 tests) 26ms
 ✓ tests/unit/primitives/FileUpload.test.ts (79 tests) 29ms
 ✓ tests/unit/primitives/Stepper.spec.ts (85 tests) 26ms
 ✓ tests/unit/primitives/CommandPalette.test.ts (31 tests) 27ms
 ✓ tests/unit/primitives/ColorPicker.test.ts (82 tests) 29ms
stderr | test/store/optimistic.spec.ts > optimistic > callbacks > should handle errors in callbacks gracefully
Error in onSuccess handler: Error: Callback error
    at Object.onSuccess [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/store/optimistic.spec.ts:177:19[90m)[39m
    at wrappedMutation [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/store/optimistic.ts:138:21[90m)[39m
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

stderr | test/store/optimistic.spec.ts > optimistic > edge cases > should handle update function throwing error
Error applying optimistic update: Error: Update error
    at Object.update [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/store/optimistic.spec.ts:639:19[90m)[39m
    at wrappedMutation [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/store/optimistic.ts:105:15[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/store/optimistic.spec.ts:646:20
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)

 ✓ test/store/optimistic.spec.ts (29 tests) 23ms
 ✓ tests/unit/primitives/Toast.test.ts (76 tests) 25ms
 ✓ tests/unit/primitives/Resizable.test.ts (75 tests) 24ms
 ✓ tests/unit/primitives/Menubar.test.ts (31 tests) 29ms
 ✓ tests/unit/primitives/Toolbar.test.ts (108 tests) 24ms
 ✓ tests/unit/primitives/Spinner.test.ts (34 tests) 24ms
 ✓ tests/unit/primitives/Breadcrumb.test.ts (73 tests) 28ms
 ✓ tests/unit/primitives/VisuallyHidden.test.ts (53 tests) 27ms
 ✓ tests/unit/primitives/Container.test.ts (59 tests) 21ms
 ✓ tests/unit/primitives/Textarea.test.ts (50 tests) 23ms
 ✓ tests/unit/primitives/Checkbox.test.ts (60 tests) 27ms
 ✓ tests/unit/primitives/Switch.test.ts (15 tests) 23ms
 ✓ tests/unit/primitives/Timeline.test.ts (91 tests) 19ms
stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should catch errors from child components
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should catch errors from child components
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:32:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:41:29[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:32:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:41:29[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:38:11

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render default fallback UI on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

 ✓ tests/unit/primitives/Toggle.test.ts (41 tests) 16ms
stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render default fallback UI on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:55:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:62:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:55:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:62:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:60:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render custom fallback component on error
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should render custom fallback component on error
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:72:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:77:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:72:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:77:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:75:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should pass error info to onError callback
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Basic functionality > should pass error info to onError callback
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:88:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:93:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:88:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:93:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:91:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should expose reset function via context
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should expose reset function via context
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:112:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:127:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:112:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:127:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:125:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should call onReset when reset is triggered
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Reset functionality > should call onReset when reset is triggered
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:136:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:155:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:136:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:155:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:151:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should expose retry function via context
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should expose retry function via context
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:169:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:184:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:169:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:184:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:182:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should respect maxRetries limit
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Retry functionality > should respect maxRetries limit
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:192:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:219:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:192:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:219:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:216:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should track error count
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should track error count
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:231:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:236:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:231:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:236:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:234:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error message
[handleComponentError] Called with error: Custom error message
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Custom error message
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

 ✓ tests/unit/primitives/RadioGroup.spec.ts (62 tests) 21ms
stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error message
  Error: Error: Custom error message
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:250:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:255:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Custom error message
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:250:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:255:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:253:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error stack
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture error stack
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:267:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:272:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:267:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:272:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:270:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture component stack
[handleComponentError] Called with error: Component stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Component stack test
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Error information > should capture component stack
  Error: Error: Component stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:285:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:290:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Component stack test
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:285:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:290:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:288:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > useErrorBoundary hook > should return error context when inside error boundary
[handleComponentError] Called with error: expected null to be truthy
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > useErrorBoundary hook > should return error context when inside error boundary
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:318:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:336:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: Test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:318:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:336:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:334:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > withErrorBoundary HOC > should catch errors from wrapped component
[handleComponentError] Called with error: HOC test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: HOC test error
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: OwnerImpl {
      parent: [1mnull[22m,
      children: Set(0) {},
      cleanups: [36m[Array][39m,
      errorBoundary: [90mundefined[39m
    },
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > withErrorBoundary HOC > should catch errors from wrapped component
  Error: Error: HOC test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:360:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: HOC test error
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:360:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:365:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:363:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle errors without message
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: 
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle errors without message
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:444:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:449:25[90m)[39m
      at SignalImpl.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:88:53[90m)[39m
      at Function.set [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/signal.ts:179:45[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:233:26
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
  Error: Error: 
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:444:15
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:73:20
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:69:15[90m)[39m
      at Object.children [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:449:25[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/error-boundary.ts:302:73
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:108:26
      at ReactiveContextImpl.runWithOwner [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:462:14[90m)[39m
      at comp [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/component/define.ts:105:22[90m)[39m
      at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/component/error-boundary.test.ts:447:7

stdout | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle non-Error objects thrown
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully
ErrorBoundary reset
[handleComponentError] Called with error: [90mundefined[39m
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [ [36m[Function (anonymous)][39m ],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
ErrorBoundary caught error
  Error count: [33m1[39m
[handleComponentError] Error handled successfully

stderr | tests/unit/core/component/error-boundary.test.ts > ErrorBoundary > Edge cases > should handle non-Error objects thrown
  Error: String error
  Error: String error

 ✓ tests/unit/core/component/error-boundary.test.ts (22 tests) 20ms
stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should create Popconfirm with required props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept title prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept description prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept onCancel callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept okText prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should accept cancelText prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Component Structure > should start closed by default
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should create trigger with children
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should accept additional props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmTrigger Structure > should accept style prop
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should create content with children
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should accept additional props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > PopconfirmContent Structure > should have role="dialog"
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should allow composing trigger and content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should work with minimal composition
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Composition > should work without content component
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Type Safety > should accept all popconfirm props
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Type Safety > should accept async onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm on root
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm-trigger on trigger
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Data Attributes > should set data-popconfirm-content on content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should call onConfirm when confirmed
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should call onCancel when cancelled
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Callback Behavior > should support async onConfirm
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing onConfirm callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing onCancel callback
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing okText
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle missing cancelText
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with empty description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with long title
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with long description
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle multiple triggers
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle multiple content components
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should work with custom button text
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle onConfirm throwing error
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Edge Cases > should handle async onConfirm rejecting
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Accessibility > should have role="dialog" on content
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Accessibility > should be keyboard accessible
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work in a form context
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work with destructive actions
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Popconfirm.test.ts > Popconfirm Primitive > Integration > should work with non-destructive confirmations
[handleComponentError] Called with error: Popconfirm components must be used within Popconfirm
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Popconfirm.test.ts (50 tests) 19ms
 ✓ test/devtools/inspector-ui.spec.ts (11 tests) 18ms
 ✓ tests/unit/primitives/Box.test.ts (46 tests) 18ms
 ✓ tests/unit/primitives/Flex.test.ts (68 tests) 17ms
 ✓ tests/unit/primitives/Grid.test.ts (96 tests) 22ms
 ✓ tests/unit/primitives/Table.test.ts (52 tests) 19ms
 ✓ tests/unit/primitives/NavigationMenu.test.ts (27 tests) 18ms
 ✓ tests/unit/primitives/Tabs.test.ts (11 tests) 21ms
 ✓ tests/unit/primitives/Progress.test.ts (45 tests) 17ms
stderr | tests/unit/reconciler/patch.spec.ts > Patching Engine > Patcher Class > patchCreate() - Create Operations > handles missing newVNode gracefully
CREATE patch missing newVNode

stderr | tests/unit/reconciler/patch.spec.ts > Patching Engine > Patcher Class > patchRemove() - Remove Operations > handles missing vnode gracefully
REMOVE patch missing vnode or dom

 ✓ tests/unit/primitives/Alert.test.ts (55 tests) 15ms
 ✓ tests/unit/primitives/Image.test.ts (54 tests) 17ms
 ✓ tests/unit/reconciler/patch.spec.ts (46 tests) 20ms
 ✓ tests/unit/primitives/ContextMenu.test.ts (71 tests) 18ms
 ✓ test/i18n/formatters.spec.ts (26 tests) 18ms
 ✓ tests/integration/reconciliation.integration.spec.ts (24 tests) 20ms
 ✓ tests/unit/primitives/Input.test.ts (79 tests) 24ms
stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormLabel > should create FormLabel with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > should create FormControl with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > should enhance child with accessibility props
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should accept asChild prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should merge props into child when asChild is true
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should handle invalid child with asChild gracefully
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should work without asChild (default behavior)
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormControl > asChild prop > should merge accessibility props correctly with asChild
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormMessage > should create FormMessage with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormMessage > should support forceMount prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > FormDescription > should create FormDescription with children
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should allow composing all sub-components
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should work with nested fields
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Full Composition > should work with asChild in composition
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Type Safety > should accept all FormField props
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

stdout | tests/unit/primitives/Form.spec.ts > Form Primitives > Type Safety > should accept FormControl with asChild prop
[handleComponentError] Called with error: Form components must be used within <FormField>
[handleComponentError] Owner: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: OwnerImpl {
    parent: [1mnull[22m,
    children: Set(0) {},
    cleanups: [],
    errorBoundary: [90mundefined[39m
  },
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 1: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: [90mundefined[39m
[handleComponentError] Error callbacks count: [33m0[39m
[handleComponentError] Moving to parent: [1mnull[22m
[handleComponentError] No handler found, re-throwing

 ✓ tests/unit/primitives/Form.spec.ts (33 tests) 21ms
 ✓ tests/unit/primitives/AlertDialog.test.ts (70 tests) 18ms
 ✓ tests/unit/primitives/Spacer.test.ts (57 tests) 22ms
 ✓ tests/unit/primitives/ScrollArea.test.ts (63 tests) 22ms
stderr | test/server/edge.spec.ts > Edge Runtime Support > renderToEdge > should handle component errors
Edge rendering error: Error: Edge error
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:94:48
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | test/server/edge.spec.ts > Edge Runtime Support > Edge Caching > should handle cache errors gracefully
Cache read error: Error: Cache error
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:441:42
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)

stderr | test/server/edge.spec.ts > Edge Runtime Support > Edge Caching > should handle cache errors gracefully
Cache write error: Error: Cache error
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:442:40
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)

stderr | test/server/edge.spec.ts > Edge Runtime Support > Error Handling > should handle render errors
Edge rendering error: Error: Render failed
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:505:48
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | test/server/edge.spec.ts > Edge Runtime Support > Error Handling > should handle streaming errors
Edge rendering error: Error: Stream failed
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:531:56
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

stderr | test/server/edge.spec.ts > Edge Runtime Support > Error Handling > should handle handler errors
Edge rendering error: Error: Handler failed
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/edge.spec.ts:562:48
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:20

 ✓ test/server/edge.spec.ts (48 tests) 19ms
stderr | test/server/hydration.spec.ts > Hydration System > hydrate > should hydrate basic component
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Hydrated Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > hydrate > should load server state
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > hydrate > should use eager strategy by default
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > hydrate > should support progressive hydration with idle strategy
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Server State Preservation > should preserve server state for client access
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'App'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Server State Preservation > should return undefined for non-existent keys
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'App'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Server State Preservation > should handle complex nested data
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'App'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Hydration Mismatches > should detect text content mismatches
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'Server Text'[39m,
  client: [32m'Client Text'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Hydration Mismatches > should track mismatch paths
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'Original'[39m,
  client: [32m'Different'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Hydration Mismatches > should clear mismatches on clearHydrationState
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'Server'[39m,
  client: [32m'Client'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Hydration Mismatches > should handle missing content gracefully
Hydration mismatch: { type: [32m'missing'[39m, path: [32m'/div[-1]'[39m, server: [32m'Exists'[39m, client: [32m''[39m }

stderr | test/server/hydration.spec.ts > Hydration System > Island Hydration > should warn if island component not registered
Island component not registered: UnknownComponent

stderr | test/server/hydration.spec.ts > Hydration System > Progressive Hydration Strategies > should execute eager strategy immediately
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Progressive Hydration Strategies > should defer idle strategy until browser idle
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Progressive Hydration Strategies > should hydrate on first interaction for lazy strategy
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Progressive Hydration Strategies > should hydrate when element becomes visible
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

 ✓ tests/unit/reconciler/diff.spec.ts (86 tests) 10ms
stderr | test/server/hydration.spec.ts > Hydration System > Error Handling > should handle hydration errors gracefully
Hydration failed: Error: Hydration error
    at ErrorComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:463:15[90m)[39m
    at hydrateNode [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:270:52[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:109:7
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:152:18[90m)[39m
    at hydrateEager [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:107:3[90m)[39m
    at hydrate [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:89:5[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:469:9
    at Proxy.assertThrows (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:2767:5)
    at Proxy.methodWrapper (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:1686:25)
Client render fallback failed: Error: Hydration error
    at ErrorComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:463:15[90m)[39m
    at renderComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:545:54[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:114:7
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:152:18[90m)[39m
    at hydrateEager [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:107:3[90m)[39m
    at hydrate [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:89:5[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:469:9
    at Proxy.assertThrows (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:2767:5)
    at Proxy.methodWrapper (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:1686:25)

stderr | test/server/hydration.spec.ts > Hydration System > Error Handling > should fallback to client render on hydration failure
Hydration failed: Error: Failed
    at Component [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:479:15[90m)[39m
    at hydrateNode [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:270:52[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:109:7
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:152:18[90m)[39m
    at hydrateEager [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:107:3[90m)[39m
    at hydrate [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:89:5[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:484:7
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
Client render fallback failed: Error: Failed
    at Component [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:479:15[90m)[39m
    at renderComponent [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:545:54[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:114:7
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:152:18[90m)[39m
    at hydrateEager [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:107:3[90m)[39m
    at hydrate [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/server/hydration.ts:89:5[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/server/hydration.spec.ts:484:7
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26

stderr | test/server/hydration.spec.ts > Hydration System > State Management > should clear all hydration state
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'App'[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > State Management > should maintain separate state per hydration
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'App1'[39m }
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'App2'[39m }

stderr | test/server/hydration.spec.ts > Hydration System > Edge Cases > should handle empty components
Hydration mismatch: {
  type: [32m'missing'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m''[39m
}

stderr | test/server/hydration.spec.ts > Hydration System > Edge Cases > should handle missing IntersectionObserver gracefully
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m'<div>Server Content</div>'[39m,
  client: [32m'Content'[39m
}

stderr | test/server/hydration.spec.ts
Hydration mismatch: {
  type: [32m'mismatch'[39m,
  path: [32m'/div[-1]'[39m,
  server: [32m''[39m,
  client: [32m'Counter Component'[39m
}

stderr | test/server/hydration.spec.ts
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'Counter'[39m }

stderr | test/server/hydration.spec.ts
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'Timer'[39m }

stderr | test/server/hydration.spec.ts
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'Counter'[39m }

stderr | test/server/hydration.spec.ts
Hydration mismatch: { type: [32m'mismatch'[39m, path: [32m'/div[-1]'[39m, server: [32m''[39m, client: [32m'Counter'[39m }

 ✓ test/server/hydration.spec.ts (36 tests) 19ms
 ✓ tests/unit/primitives/Select.spec.ts (61 tests) 14ms
 ✓ tests/unit/primitives/Space.test.ts (52 tests) 18ms
 ✓ test/build/asset-pipeline.test.ts (23 tests) 20ms
stderr | test/devtools/bridge.spec.ts > DevTools Bridge > Message Receiving > should handle handler errors gracefully
DevTools bridge handler error: Error: Handler error
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/devtools/bridge.spec.ts:626:15
    at mockCall (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/spy/dist/index.js:96:15)
    at spy (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mtinyspy[24m/dist/index.js:47:80)
    at handleMessage [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/devtools/bridge.ts:174:9[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/devtools/bridge.spec.ts:645:9
    at Proxy.assertThrows (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:2767:5)
    at Proxy.methodWrapper (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:1686:25)
    at Proxy.<anonymous> (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/expect/dist/index.js:1088:12)
    at Proxy.overwritingMethodWrapper (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4mchai[24m/index.js:1735:33)
    at Proxy.<anonymous> (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/expect/dist/index.js:1420:16)

 ✓ test/devtools/bridge.spec.ts (30 tests) 20ms
 ✓ test/devtools/debug-enhanced.spec.ts (13 tests) 10ms
 ✓ tests/unit/primitives/SimpleGrid.test.ts (60 tests) 17ms
 ✓ tests/unit/primitives/AspectRatio.test.ts (27 tests) 15ms
 ✓ tests/unit/control-flow/Show.spec.ts (20 tests) 12ms
 ✓ tests/unit/primitives/DropdownMenu.test.ts (57 tests) 14ms
stderr | test/suspense/streaming.spec.ts > Streaming SSR > renderWithSuspenseStreaming > should handle shell errors
Shell rendering error: Error: Shell render failed
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/suspense/streaming.spec.ts:226:21
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at runNextTicks (node:internal/process/task_queues:65:5)[39m
[90m    at listOnTimeout (node:internal/timers:549:9)[39m
[90m    at processTimers (node:internal/timers:523:7)[39m

 ✓ tests/unit/primitives/Card.test.ts (73 tests) 16ms
 ✓ tests/unit/primitives/Badge.test.ts (46 tests) 19ms
 ✓ tests/unit/primitives/Dialog.spec.ts (46 tests) 16ms
 ✓ tests/unit/primitives/Empty.test.ts (63 tests) 20ms
 ✓ tests/unit/primitives/Popover.test.ts (37 tests) 14ms
 ✓ tests/unit/primitives/Accordion.test.ts (11 tests) 15ms
 ✓ test/i18n/translator.spec.ts (15 tests) 16ms
stdout | test/devtools/hooks.spec.ts > DevTools Hooks > Error Handling > should handle measure with error
[DevTools] ErrorOp took 0.01ms

 ✓ test/devtools/hooks.spec.ts (40 tests) 15ms
 ✓ tests/unit/primitives/Label.test.ts (51 tests) 17ms
stderr | test/suspense/streaming.spec.ts > Streaming SSR > integration > should handle mix of success and failure
Boundary error-1 failed: Error: Failed
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/suspense/streaming.spec.ts:305:58
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)
    at runSuite (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1729:8)

 ❯ test/suspense/streaming.spec.ts (16 tests | 3 failed) 5381ms
   ✓ Streaming SSR > createSSRSuspenseContext > should create SSR suspense context 1ms
   × Streaming SSR > createSSRSuspenseContext > should register boundaries 4ms
     → expected +0 to be 1 // Object.is equality
   ✓ Streaming SSR > createSSRSuspenseContext > should handle boundary errors 11ms
   ✓ Streaming SSR > streamSuspenseBoundaries > should stream boundaries in order 1ms
   ✓ Streaming SSR > streamSuspenseBoundaries > should stream boundaries out of order 52ms
   ✓ Streaming SSR > streamSuspenseBoundaries > should handle timeout 104ms
   ✓ Streaming SSR > createSuspensePlaceholder > should create placeholder HTML 0ms
   ✓ Streaming SSR > createSuspensePlaceholder > should create placeholder without fallback 0ms
   ✓ Streaming SSR > extractSuspenseBoundaries > should extract boundary IDs from HTML 0ms
   ✓ Streaming SSR > extractSuspenseBoundaries > should return empty array for no boundaries 0ms
   ✓ Streaming SSR > renderWithSuspenseStreaming > should render with suspense streaming 1ms
   × Streaming SSR > renderWithSuspenseStreaming > should call lifecycle callbacks 5003ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Streaming SSR > renderWithSuspenseStreaming > should handle shell errors 1ms
   × Streaming SSR > renderWithSuspenseStreaming > should handle abort 101ms
     → expected false to be true // Object.is equality
   ✓ Streaming SSR > integration > should stream multiple boundaries concurrently 100ms
   ✓ Streaming SSR > integration > should handle mix of success and failure 1ms
 ✓ tests/unit/primitives/Separator.test.ts (51 tests) 14ms
 ✓ tests/unit/primitives/Skeleton.test.ts (34 tests) 12ms
 ✓ tests/unit/primitives/Center.test.ts (42 tests) 14ms
 ✓ tests/unit/primitives/utils/focus.spec.ts (22 tests) 16ms
 ✓ tests/unit/primitives/Kbd.test.ts (56 tests) 15ms
 ✓ test/devtools/network.spec.ts (39 tests) 12ms
 ✓ tests/unit/primitives/Code.test.ts (46 tests) 12ms
 ✓ tests/unit/primitives/Stack.test.ts (34 tests) 13ms
stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Formatter Installation > should not duplicate formatters
[Aether DevTools] Custom formatters installed
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Formatter Uninstallation > should uninstall formatters
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Signal Formatter > should format signal header
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Signal Formatter > should format writable signal
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Signal Formatter > should return null for non-signal
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Signal Formatter > should format signal body
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Signal Formatter > should show signal metadata in body
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Store Formatter > should format store header
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Store Formatter > should return null for non-store
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Store Formatter > should format store body
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Store Formatter > should handle empty store state
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Store Formatter > should handle store without getState
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Component Formatter > should format component header
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Component Formatter > should return null for non-component
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Component Formatter > should format component body
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Component Formatter > should handle component without name
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Component Formatter > should handle component without props
[Aether DevTools] Custom formatters installed

stdout | test/devtools/formatter.spec.ts > DevTools Custom Formatters > Edge Cases > should handle component without __AETHER_COMPONENT__ marker
[Aether DevTools] Custom formatters installed

 ✓ tests/unit/primitives/Mentions.test.ts (36 tests) 13ms
 ✓ test/devtools/formatter.spec.ts (52 tests) 13ms
 ✓ tests/unit/primitives/utils/position.test.ts (30 tests) 14ms
stderr | tests/unit/core/reactivity/context.test.ts > Context > ComputationImpl > should track dependencies
Error in effect computation: TypeError: sig.get is not a function
    at ComputationImpl.execute [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:131:17[90m)[39m
    at ComputationImpl.run [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:162:14[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:133:23
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:80:14
    at ReactiveContextImpl.batch [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:475:9[90m)[39m
    at batch [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:79:11[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:129:9
    at ReactiveContextImpl.createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/context.ts:450:22[90m)[39m
    at createRoot [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/core/reactivity/batch.ts:152:18[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtests/unit/core/reactivity/context.test.ts:124:7

 ✓ tests/unit/core/reactivity/context.test.ts (30 tests) 17ms
 ✓ tests/unit/reconciler/template-cache.spec.ts (51 tests) 15ms
stderr | test/store/composition.spec.ts > store composition > edge cases > should handle multiple registrations
Store 'test' is already registered. Replacing existing store.

 ✓ test/store/composition.spec.ts (38 tests) 9ms
stderr | test/netron/base/netron-store.spec.ts > NetronStore > persist() > should remove item when value is null
Failed to load persisted state for key "test-remove": SyntaxError: Unexpected token 'e', "test" is not valid JSON
    at parse (<anonymous>)
    at UserStore.persist [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/netron/base/netron-store.ts:246:24[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/netron/base/netron-store.spec.ts:311:22
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

 ✓ test/netron/base/netron-store.spec.ts (26 tests) 11ms
 ✓ tests/unit/primitives/base/createInputPrimitive.spec.ts (46 tests) 12ms
 ✓ tests/unit/reconciler/reactive-binding.spec.ts (56 tests) 11ms
 ✓ test/monitoring/error-tracking.spec.ts (14 tests) 14ms
 ✓ tests/unit/core/reactivity/signal.test.ts (19 tests) 12ms
stderr | test/store/defineStore.spec.ts > defineStore > store creation > should create a store with custom name
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store creation > should pass NetronClient to setup function
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > singleton pattern > should return same instance on multiple calls
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > singleton pattern > should only call setup function once
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > singleton pattern > should maintain state across multiple accesses
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store reset > should reset store to initial state
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store reset > should create new instance after reset
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store disposal > should dispose store and remove from registry
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store disposal > should handle multiple dispose calls gracefully
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > reactive state > should support signals in store
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > reactive state > should support computed values in store
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > reactive state > should support methods in store
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > async operations > should support async methods
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > async operations > should handle async errors
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > defineStoreTyped > should create typed store
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store registry > should track active stores
Store 'store1' is already registered. Replacing existing store.
Store 'store2' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store registry > should remove store from active list after dispose
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > store registry > should clear all stores
Store 'store1' is already registered. Replacing existing store.
Store 'store2' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > edge cases > should handle empty store state
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > edge cases > should handle complex nested state
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > edge cases > should handle store with only methods
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > edge cases > should handle circular dependencies in computed
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > netron integration > should use NetronClient for backend calls
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > netron integration > should handle netron mutations
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > memory management > should properly cleanup on dispose
Store 'test' is already registered. Replacing existing store.

stderr | test/store/defineStore.spec.ts > defineStore > memory management > should handle multiple stores independently
Store 'store1' is already registered. Replacing existing store.
Store 'store2' is already registered. Replacing existing store.

 ✓ test/store/defineStore.spec.ts (31 tests) 10ms
 ✓ tests/unit/jsx-runtime/jsx-runtime.test.ts (38 tests) 10ms
stderr | test/routing/file-based/api-routes.spec.ts > API Routes > createApiHandler > should handle errors
API route error: Error: Test error
    at GET [90m(/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/routing/file-based/api-routes.spec.ts:106:17[90m)[39m
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39msrc/routing/file-based/api-routes.ts:93:20
    at [90m/Users/taaliman/projects/omnitron-dev/omni/packages/aether/[39mtest/routing/file-based/api-routes.spec.ts:111:30
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:155:11
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:752:26
    at file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1897:20
    at new Promise (<anonymous>)
    at runWithTimeout (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1863:10)
    at runTest (file:///Users/taaliman/projects/omnitron-dev/omni/node_modules/[4m@vitest[24m/runner/dist/chunk-hooks.js:1574:12)
[90m    at processTicksAndRejections (node:internal/process/task_queues:105:5)[39m

 ✓ test/routing/file-based/api-routes.spec.ts (21 tests) 11ms
 ✓ test/monitoring/monitoring.spec.ts (16 tests) 9ms
 ✓ tests/unit/primitives/utils/scroll-lock.spec.ts (18 tests) 8ms
 ✓ tests/unit/core/reactivity/store.test.ts (27 tests) 10ms
stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should catch errors in mount callbacks
[handleComponentError] Called with error: Mount failed
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    }
  ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should support multiple error handlers
[handleComponentError] Called with error: Test error
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    },
    [Function: spy] {
      getMockName: [36m[Function (anonymous)][39m,
      mockName: [36m[Function (anonymous)][39m,
      mockClear: [36m[Function (anonymous)][39m,
      mockReset: [36m[Function (anonymous)][39m,
      mockRestore: [36m[Function (anonymous)][39m,
      getMockImplementation: [36m[Function (anonymous)][39m,
      mockImplementation: [36m[Function (anonymous)][39m,
      mockImplementationOnce: [36m[Function (anonymous)][39m,
      withImplementation: [36m[Function: withImplementation][39m,
      mockReturnThis: [36m[Function (anonymous)][39m,
      mockReturnValue: [36m[Function (anonymous)][39m,
      mockReturnValueOnce: [36m[Function (anonymous)][39m,
      mockResolvedValue: [36m[Function (anonymous)][39m,
      mockResolvedValueOnce: [36m[Function (anonymous)][39m,
      mockRejectedValue: [36m[Function (anonymous)][39m,
      mockRejectedValueOnce: [36m[Function (anonymous)][39m,
      [[32mSymbol(nodejs.dispose)[39m]: [36m[Function (anonymous)][39m
    }
  ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m2[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > onError > should handle errors in error handlers gracefully
[handleComponentError] Called with error: Mount failed
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handlers called but all failed, stopping propagation

stdout | tests/unit/core/component/lifecycle.test.ts > Component Lifecycle > Error boundary pattern > should catch and handle child errors in boundary
[handleComponentError] Called with error: Child error
[handleComponentError] Owner: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Checking owner at depth 0: OwnerImpl {
  parent: [1mnull[22m,
  children: Set(0) {},
  cleanups: [ [36m[Function (anonymous)][39m ],
  errorBoundary: [90mundefined[39m
}
[handleComponentError] Context for owner: {
  mountCallbacks: [ [36m[Function (anonymous)][39m ],
  errorCallbacks: [ [36m[Function (anonymous)][39m ],
  isMounted: [33mtrue[39m
}
[handleComponentError] Error callbacks count: [33m1[39m
[handleComponentError] Calling error handlers
[handleComponentError] Error handled successfully

 ✓ tests/unit/core/reactivity/batch.test.ts (23 tests) 8ms
 ✓ tests/unit/core/component/lifecycle.test.ts (16 tests) 9ms
 ✓ tests/unit/utils/events.spec.ts (15 tests) 8ms
 ✓ test/router/outlet.spec.ts (34 tests) 8ms
 ✓ test/router/file-based.spec.ts (47 tests) 11ms
stderr | test/server/meta.spec.ts > Meta Management > injectMeta > should warn if no <head> tag found
No <head> tag found in HTML

stderr | test/server/meta.spec.ts > Meta Management > updateMeta (client-side) > should warn in non-browser environment
updateMeta called in non-browser environment

 ✓ test/server/meta.spec.ts (48 tests) 11ms
 ✓ tests/unit/reconciler/vnode.spec.ts (93 tests) 11ms
 ✓ test/devtools/time-travel.spec.ts (16 tests) 7ms
 ✓ tests/unit/control-flow/Portal.spec.ts (12 tests) 7ms
 ✓ tests/unit/core/component/refs.test.ts (33 tests) 7ms
 ✓ tests/unit/control-flow/Suspense.spec.ts (10 tests) 4ms
 ✓ tests/unit/utils/binding.spec.ts (17 tests) 8ms
 ✓ test/monitoring/privacy.spec.ts (18 tests) 8ms
stderr | tests/unit/core/reactivity/dependency-graph.test.ts > DependencyGraph > Topological sorting > should handle cycles in topological sort
Cycle detected in dependency graph

 ✓ tests/unit/core/component/reactive-props.test.ts (20 tests) 6ms
 ✓ tests/unit/core/reactivity/dependency-graph.test.ts (25 tests) 7ms
 ✓ test/netron/base/netron-service.spec.ts (30 tests) 10ms
 ✓ test/netron/client.spec.ts (50 tests) 7ms
 ✓ test/routing/file-based/generator.spec.ts (18 tests) 6ms
 ✓ test/data/cache-manager.spec.ts (29 tests) 6ms
 ✓ test/netron/decorators/backend.spec.ts (31 tests) 4ms
 ✓ test/build/tree-shaking.test.ts (18 tests) 6ms
 ✓ tests/unit/core/component/define.test.ts (15 tests) 4ms
 ✓ tests/unit/core/reactivity/sequential-updates.test.ts (9 tests) 5ms
 ✓ tests/unit/di/container.test.ts (20 tests) 5ms
 ✓ test/netron/decorators/service.spec.ts (45 tests) 4ms
 ✓ tests/unit/core/component/context.test.ts (22 tests) 5ms
 ✓ tests/unit/router/route-matcher.test.ts (34 tests) 5ms
 ✓ tests/unit/patterns/composition.test.ts (18 tests) 4ms
 ✓ test/devtools/bundle-analyzer.spec.ts (11 tests) 4ms
 ✓ tests/unit/di/module.test.ts (15 tests) 4ms
 ✓ test/ssg/static-props.spec.ts (20 tests) 4ms
 ✓ tests/unit/utils/styles.spec.ts (31 tests) 4ms
 ✓ tests/unit/core/component/props.test.ts (24 tests) 4ms
 ✓ tests/unit/utils/classes.spec.ts (30 tests) 3ms
 ✓ test/ssg/static-paths.spec.ts (12 tests) 4ms
 ✓ test/islands/manifest.spec.ts (17 tests) 4ms
 ✓ test/monitoring/performance.spec.ts (10 tests) 4ms
 ✓ test/ssg/renderer.spec.ts (15 tests) 3ms
 ✓ test/build/critical-css.test.ts (13 tests) 3ms
 ✓ test/i18n/rtl.spec.ts (18 tests) 3ms
 ✓ tests/unit/di/injectable.test.ts (14 tests) 3ms
 ✓ tests/unit/primitives/utils/id.spec.ts (15 tests) 3ms
 ✓ test/ssg/revalidation.spec.ts (12 tests) 3ms
 ✓ test/i18n/pluralization.spec.ts (16 tests) 4ms
 ✓ tests/unit/control-flow/Switch.spec.ts (9 tests) 2ms
 ✓ tests/unit/di/tokens.test.ts (7 tests) 2ms
 ✓ tests/integration/reactive-system.test.ts (1 test) 1ms
 ✓ tests/integration/reactive-system-extended.test.ts (1 test) 1ms
 ❯ test/data/server-function.spec.ts (20 tests | 2 failed) 10039ms
   ✓ Server Function > Basic Execution > should execute server function 2ms
   ✓ Server Function > Basic Execution > should handle async operations 0ms
   ✓ Server Function > Basic Execution > should pass multiple arguments 0ms
   ✓ Server Function > Caching > should cache results 0ms
   ✓ Server Function > Caching > should respect TTL 0ms
   ✓ Server Function > Caching > should use custom cache key 0ms
   ✓ Server Function > Caching > should support stale-while-revalidate 2ms
   ✓ Server Function > Retry Logic > should retry on failure 1ms
   × Server Function > Retry Logic > should fail after max retries 5004ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   × Server Function > Timeout > should timeout after specified duration 5004ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Server Function > Timeout > should succeed if completed before timeout 14ms
   ✓ Server Function > Cache Invalidation > should invalidate cached results 2ms
   ✓ Server Function > Cache Invalidation > should get cached result without triggering request 1ms
   ✓ Server Function > Batch Server Functions > should execute multiple functions in parallel 1ms
   ✓ Server Function > Batch Server Functions > should fail if any function fails 2ms
   ✓ Server Function > Batch Server Functions > should type check results correctly 1ms
   ✓ Server Function > Error Handling > should propagate errors 0ms
   ✓ Server Function > Error Handling > should not cache errors 1ms
   ✓ Server Function > Type Safety > should maintain type safety for arguments 1ms
   ✓ Server Function > Type Safety > should maintain type safety for return values 1ms
 ❯ test/data/optimistic.spec.ts (14 tests | 5 failed) 10025ms
   × Optimistic Updates > Basic Optimistic Update > should apply optimistic update immediately 6ms
     → expected +0 to be 10 // Object.is equality
   × Optimistic Updates > Basic Optimistic Update > should revalidate after mutation 5003ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Optimistic Updates > Basic Optimistic Update > should rollback on error 1ms
   ✓ Optimistic Updates > Basic Optimistic Update > should not rollback if rollbackOnError is false 2ms
   ✓ Optimistic Updates > Basic Optimistic Update > should call onError handler 4ms
   × Optimistic Updates > Optimistic Mutation > should create reusable optimistic mutation 5002ms
     → Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
   ✓ Optimistic Updates > Manual Optimistic Update > should allow manual commit 1ms
   ✓ Optimistic Updates > Manual Optimistic Update > should allow manual rollback 0ms
   × Optimistic Updates > Atomic Optimistic Update > should update multiple resources atomically 2ms
     → expected 1 to be 10 // Object.is equality
   ✓ Optimistic Updates > Atomic Optimistic Update > should rollback all on any failure 1ms
   ✓ Optimistic Updates > Merge Strategies > should use server strategy 0ms
   ✓ Optimistic Updates > Merge Strategies > should use optimistic strategy 0ms
   ✓ Optimistic Updates > Merge Strategies > should use merge strategy 0ms
   × Optimistic Updates > Updater Functions > should support function as optimistic data 1ms
     → expected 5 to be 10 // Object.is equality

⎯⎯⎯⎯⎯⎯ Failed Suites 8 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  test/data/loader-integration.spec.ts [ test/data/loader-integration.spec.ts ]
 FAIL  test/router/advanced-prefetch.spec.ts [ test/router/advanced-prefetch.spec.ts ]
 FAIL  test/router/data.spec.ts [ test/router/data.spec.ts ]
 FAIL  test/router/loader.spec.ts [ test/router/loader.spec.ts ]
 FAIL  test/router/prefetch.spec.ts [ test/router/prefetch.spec.ts ]
 FAIL  tests/unit/router/Link.test.ts [ tests/unit/router/Link.test.ts ]
 FAIL  tests/unit/router/router.test.ts [ tests/unit/router/router.test.ts ]
Error: Invalid glob import syntax: Could only use literals
  Plugin: vite:import-glob
  File: /Users/taaliman/projects/omnitron-dev/omni/packages/aether/src/router/code-splitting.ts:464:10
  291 |      return {};
  292 |    }
  293 |    return import.meta.glob(pattern, options);
      |           ^
  294 |  }
  295 |  
 ❯ err$2 node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10121:32
 ❯ validateLiteral node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10144:17
 ❯ node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10147:8
 ❯ parseImportGlob node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10171:10
 ❯ transformGlobImport node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10199:20
 ❯ TransformPluginContext.handler node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10019:20
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:31018:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:26143:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[1/33]⎯

 FAIL  test/router/code-splitting.spec.ts [ test/router/code-splitting.spec.ts ]
Error: Invalid glob import syntax: Could only use literals
  Plugin: vite:import-glob
  File: /Users/taaliman/projects/omnitron-dev/omni/packages/aether/src/router/code-splitting.ts:464:10
  291 |      return {};
  292 |    }
  293 |    return import.meta.glob(pattern, options);
      |           ^
  294 |  }
  295 |  
 ❯ err$2 node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10121:32
 ❯ validateLiteral node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10144:17
 ❯ node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10147:8
 ❯ parseImportGlob node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10171:10
 ❯ transformGlobImport node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10199:20
 ❯ TransformPluginContext.handler node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:10019:20
 ❯ EnvironmentPluginContainer.transform node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:31018:14
 ❯ loadAndTransform node_modules/vite/dist/node/chunks/dep-Chhhsdoe.js:26143:26

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[2/33]⎯


⎯⎯⎯⎯⎯⎯ Failed Tests 25 ⎯⎯⎯⎯⎯⎯⎯

 FAIL  test/build/build-performance.test.ts > BuildPerformanceMonitor > should generate performance report
AssertionError: expected 0 to be greater than 0
 ❯ test/build/build-performance.test.ts:356:26
    354|     const report = monitor.generateReport();
    355| 
    356|     expect(report.total).toBeGreaterThan(0);
       |                          ^
    357|     expect(report.metrics.parse).toBeDefined();
    358|     expect(report.metrics.bundle).toBeDefined();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[3/33]⎯

 FAIL  test/build/build-performance.test.ts > BuildPerformanceMonitor > should calculate percentage breakdown
AssertionError: expected 0 to be greater than 0
 ❯ test/build/build-performance.test.ts:374:29
    372|     );
    373| 
    374|     expect(totalPercentage).toBeGreaterThan(0);
       |                             ^
    375|   });
    376| });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[4/33]⎯

 FAIL  test/build/bundle-optimization.test.ts > BundleOptimizer > should track optimization duration
AssertionError: expected 0 to be greater than 0
 ❯ test/build/bundle-optimization.test.ts:276:41
    274|     const result = await optimizer.optimize();
    275| 
    276|     expect(result.report.totalDuration).toBeGreaterThan(0);
       |                                         ^
    277|     expect(result.report.steps.every((s) => s.duration >= 0)).toBe(tru…
    278|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[5/33]⎯

 FAIL  test/data/optimistic.spec.ts > Optimistic Updates > Basic Optimistic Update > should apply optimistic update immediately
AssertionError: expected +0 to be 10 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 0[39m

 ❯ test/data/optimistic.spec.ts:46:33
     44|       // Should update immediately
     45|       await vi.runAllTimersAsync();
     46|       expect(resource()?.count).toBe(10);
       |                                 ^
     47| 
     48|       // Complete mutation

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[6/33]⎯

 FAIL  test/data/optimistic.spec.ts > Optimistic Updates > Basic Optimistic Update > should revalidate after mutation
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ test/data/optimistic.spec.ts:53:5
     51|     });
     52| 
     53|     it('should revalidate after mutation', async () => {
       |     ^
     54|       let fetchCount = 0;
     55|       const resource = createCachedResource(async () => {

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[7/33]⎯

 FAIL  test/data/optimistic.spec.ts > Optimistic Updates > Optimistic Mutation > should create reusable optimistic mutation
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ test/data/optimistic.spec.ts:160:5
    158| 
    159|   describe('Optimistic Mutation', () => {
    160|     it('should create reusable optimistic mutation', async () => {
       |     ^
    161|       const resource = createCachedResource(async () => ({ count: 0 })…
    162| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[8/33]⎯

 FAIL  test/data/optimistic.spec.ts > Optimistic Updates > Atomic Optimistic Update > should update multiple resources atomically
AssertionError: expected 1 to be 10 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 1[39m

 ❯ test/data/optimistic.spec.ts:246:34
    244|       await vi.runAllTimersAsync();
    245| 
    246|       expect(resource1()?.count).toBe(10);
       |                                  ^
    247|       expect(resource2()?.count).toBe(20);
    248|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[9/33]⎯

 FAIL  test/data/optimistic.spec.ts > Optimistic Updates > Updater Functions > should support function as optimistic data
AssertionError: expected 5 to be 10 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 10[39m
[31m+ 5[39m

 ❯ test/data/optimistic.spec.ts:333:33
    331|       await vi.runAllTimersAsync();
    332| 
    333|       expect(resource()?.count).toBe(10);
       |                                 ^
    334|     });
    335|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[10/33]⎯

 FAIL  test/data/resource-cache.spec.ts > Cached Resource > Stale-While-Revalidate > should return stale data and revalidate in background
AssertionError: expected undefined to be 'data-1' // Object.is equality

[32m- Expected:[39m 
"data-1"

[31m+ Received:[39m 
undefined

 ❯ test/data/resource-cache.spec.ts:208:27
    206| 
    207|       // Returns stale data immediately
    208|       expect(resource3()).toBe('data-1');
       |                           ^
    209| 
    210|       // But triggers background revalidation

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[11/33]⎯

 FAIL  test/data/resource-cache.spec.ts > Cached Resource > Preload > should preload and cache data
AssertionError: expected 2 to be 1 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 2[39m

 ❯ test/data/resource-cache.spec.ts:332:25
    330| 
    331|       await vi.runAllTimersAsync();
    332|       expect(callCount).toBe(1);
       |                         ^
    333|       expect(resource()).toBe('data');
    334|     });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[12/33]⎯

 FAIL  test/data/server-function.spec.ts > Server Function > Retry Logic > should fail after max retries
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ test/data/server-function.spec.ts:202:5
    200|     });
    201| 
    202|     it('should fail after max retries', async () => {
       |     ^
    203|       let attemptCount = 0;
    204|       const fn = serverFunction(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[13/33]⎯

 FAIL  test/data/server-function.spec.ts > Server Function > Timeout > should timeout after specified duration
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ test/data/server-function.spec.ts:228:5
    226| 
    227|   describe('Timeout', () => {
    228|     it('should timeout after specified duration', async () => {
       |     ^
    229|       vi.useRealTimers();
    230|       const fn = serverFunction(

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[14/33]⎯

 FAIL  test/monitoring/analytics.spec.ts > Analytics > session management > should track page views in session
AssertionError: expected 3 to be 2 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 3[39m

 ❯ test/monitoring/analytics.spec.ts:188:34
    186|       const session = analytics.getSession();
    187| 
    188|       expect(session?.pageViews).toBe(2);
       |                                  ^
    189|     });
    190| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[15/33]⎯

 FAIL  test/suspense/async-component.spec.ts > Async Component > createAsyncComponent > should handle errors
AssertionError: expected null to be 'Error: Load failed' // Object.is equality

[32m- Expected:[39m 
"Error: Load failed"

[31m+ Received:[39m 
null

 ❯ test/suspense/async-component.spec.ts:101:26
     99|       await new Promise((resolve) => setTimeout(resolve, 50));
    100| 
    101|       expect(renderFn()).toBe('Error: Load failed');
       |                          ^
    102|     });
    103| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[16/33]⎯

 FAIL  test/suspense/error-boundary.spec.ts > ErrorBoundary > Boundary > should handle errors
Error: Test error
 ❯ test/suspense/error-boundary.spec.ts:175:21
    173| 
    174|     it('should handle errors', () => {
    175|       const error = new Error('Test error');
       |                     ^
    176| 
    177|       const component = Boundary({

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[17/33]⎯

 FAIL  test/suspense/lazy.spec.ts > Lazy Loading > lazy > should handle load errors
AssertionError: expected null to be 'Error: Load failed' // Object.is equality

[32m- Expected:[39m 
"Error: Load failed"

[31m+ Received:[39m 
null

 ❯ test/suspense/lazy.spec.ts:103:26
    101|       await new Promise((resolve) => setTimeout(resolve, 50));
    102| 
    103|       expect(renderFn()).toBe('Error: Load failed');
       |                          ^
    104|     });
    105| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[18/33]⎯

 FAIL  test/suspense/lazy.spec.ts > Lazy Loading > lazy > should support timeout option
AssertionError: expected null to be 'Error: Lazy load timeout' // Object.is equality

[32m- Expected:[39m 
"Error: Lazy load timeout"

[31m+ Received:[39m 
null

 ❯ test/suspense/lazy.spec.ts:135:26
    133|       await new Promise((resolve) => setTimeout(resolve, 150));
    134| 
    135|       expect(renderFn()).toBe('Error: Lazy load timeout');
       |                          ^
    136|     });
    137| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[19/33]⎯

 FAIL  test/suspense/lazy.spec.ts > Lazy Loading > lazy > should retry on failure
AssertionError: expected 1 to be 3 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 3[39m
[31m+ 1[39m

 ❯ test/suspense/lazy.spec.ts:160:24
    158|       await new Promise((resolve) => setTimeout(resolve, 200));
    159| 
    160|       expect(attempts).toBe(3);
       |                        ^
    161|     });
    162| 

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[20/33]⎯

 FAIL  test/suspense/streaming.spec.ts > Streaming SSR > createSSRSuspenseContext > should register boundaries
AssertionError: expected +0 to be 1 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 1[39m
[31m+ 0[39m

 ❯ test/suspense/streaming.spec.ts:33:31
     31| 
     32|       expect(context.boundaries.size).toBe(1);
     33|       expect(context.pending).toBe(1);
       |                               ^
     34| 
     35|       await promise;

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[21/33]⎯

 FAIL  test/suspense/streaming.spec.ts > Streaming SSR > renderWithSuspenseStreaming > should call lifecycle callbacks
Error: Test timed out in 5000ms.
If this is a long-running test, pass a timeout value as the last argument or configure it globally with "testTimeout".
 ❯ test/suspense/streaming.spec.ts:205:5
    203|     });
    204| 
    205|     it('should call lifecycle callbacks', async () => {
       |     ^
    206|       const onShellReady = vi.fn();
    207|       const onAllReady = vi.fn();

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[22/33]⎯

 FAIL  test/suspense/streaming.spec.ts > Streaming SSR > renderWithSuspenseStreaming > should handle abort
AssertionError: expected false to be true // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- true[39m
[31m+ false[39m

 ❯ test/suspense/streaming.spec.ts:261:25
    259|       });
    260| 
    261|       expect(destroyed).toBe(true);
       |                         ^
    262|     });
    263|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[23/33]⎯

 FAIL  test/suspense/suspense.spec.ts > Suspense > useSuspense > should throw error on fetch failure
AssertionError: expected function to throw an error, but it didn't
 ❯ test/suspense/suspense.spec.ts:195:32
    193| 
    194|       // Should throw error
    195|       expect(() => renderFn()).toThrow(error);
       |                                ^
    196|     });
    197|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[24/33]⎯

 FAIL  test/suspense/suspense.spec.ts > Suspense > createSuspenseResource > should create reactive resource that suspends
AssertionError: expected "spy" to be called 2 times, but got 3 times
 ❯ test/suspense/suspense.spec.ts:231:23
    229| 
    230|       // Should have fetched new data
    231|       expect(fetcher).toHaveBeenCalledTimes(2);
       |                       ^
    232|     });
    233|   });

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[25/33]⎯

 FAIL  test/suspense/suspense.spec.ts > Suspense > nested suspense > should support nested suspense boundaries
AssertionError: expected [Function renderFn] to be 'Loading inner...' // Object.is equality

[32m- Expected:[39m 
"Loading inner..."

[31m+ Received:[39m 
[Function renderFn]

 ❯ test/suspense/suspense.spec.ts:302:31
    300|       // Now inner should show fallback
    301|       const innerRenderFn = outerRenderFn();
    302|       expect(innerRenderFn()).toBe('Loading inner...');
       |                               ^
    303| 
    304|       // Resolve inner

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[26/33]⎯

 FAIL  test/routing/file-based/scanner.spec.ts > File-Based Routing Scanner > scanRouteFiles > should skip non-route files
AssertionError: expected 3 to be 2 // Object.is equality

[32m- Expected[39m
[31m+ Received[39m

[32m- 2[39m
[31m+ 3[39m

 ❯ test/routing/file-based/scanner.spec.ts:176:30
    174|       const scanned = scanRouteFiles(files);
    175| 
    176|       expect(scanned.length).toBe(2); // Only index and about
       |                              ^
    177|       expect(scanned.some(f => f.fileName === '_component.tsx')).toBe(…
    178|       expect(scanned.some(f => f.fileName === 'utils.ts')).toBe(false);

⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯[27/33]⎯

⎯⎯⎯⎯⎯⎯ Unhandled Errors ⎯⎯⎯⎯⎯⎯

Vitest caught 2 unhandled errors during the test run.
This might cause false positive tests. Resolve unhandled errors to make sure your tests are not affected.

⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯
Error: Shell error
 ❯ Timeout._onTimeout test/server/streaming.spec.ts:102:37
    100|         // Return a promise that will reject after a slight delay to a…
    101|         mock.mockImplementationOnce(() => new Promise((_, reject) => {
    102|             setTimeout(() => reject(new Error('Shell error')), 10);
       |                                     ^
    103|           }));
    104| 
 ❯ listOnTimeout node:internal/timers:588:17
 ❯ processTimers node:internal/timers:523:7

This error originated in "test/server/streaming.spec.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should pipe to writable stream". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.

⎯⎯⎯⎯⎯ Uncaught Exception ⎯⎯⎯⎯⎯
Error: Render error
 ❯ Timeout._onTimeout test/server/streaming.spec.ts:633:37
    631|         // Return a promise that will reject after a slight delay to a…
    632|         mock.mockImplementationOnce(() => new Promise((_, reject) => {
    633|             setTimeout(() => reject(new Error('Render error')), 10);
       |                                     ^
    634|           }));
    635| 
 ❯ listOnTimeout node:internal/timers:588:17
 ❯ processTimers node:internal/timers:523:7

This error originated in "test/server/streaming.spec.ts" test file. It doesn't mean the error was thrown inside the file itself, but while it was running.
The latest test that might've caused the error is "should stream incrementally, not all at once". It might mean one of the following:
- The error was thrown, while Vitest was running this test.
- If the error occurred after the test had been completed, this was the last documented test before it was thrown.
⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯⎯


 Test Files  20 failed | 201 passed (221)
      Tests  25 failed | 8457 passed (8482)
     Errors  2 errors
   Start at  18:59:10
   Duration  10.58s (transform 4.18s, setup 0ms, collect 11.63s, tests 46.87s, environment 29.11s, prepare 8.86s)

