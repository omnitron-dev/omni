
> @omnitron-dev/titan@0.1.0 test /Users/taaliman/projects/luxquant/omnitron-dev/omni/packages/titan
> NODE_OPTIONS='--experimental-vm-modules' jest --forceExit

[Global Setup] Starting global Redis container...
[Global Setup] Using Docker at: /usr/local/bin/docker
[Global Setup] Started Redis container 75e95c750487 on port 10514
[Global Setup] Global Redis ready at redis://localhost:10514
(node:53135) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
  console.info
    [DatabaseManager] Initializing database manager

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.debug
    [DatabaseManager] { name: 'default', attempt: 0, maxRetries: 5 } Attempting database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] { name: 'default', dialect: 'sqlite' } Creating database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

{"level":30,"time":"2025-10-30T21:19:37.237Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
  console.info
    [DatabaseManager] { name: 'default', dialect: 'sqlite' } Database connection established

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.info
    [DatabaseManager] { connectionCount: 1 } Database manager initialized

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

(node:53133) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
(node:53134) ExperimentalWarning: VM Modules is an experimental feature and might change at any time
(Use `node --trace-warnings ...` to show where the warning was created)
  console.info
    [DatabaseManager] Initializing database manager

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.debug
    [DatabaseManager] { name: 'default', attempt: 0, maxRetries: 5 } Attempting database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] { name: 'default', dialect: 'sqlite' } Creating database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.info
    [DatabaseManager] { name: 'default', dialect: 'sqlite' } Database connection established

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.info
    [DatabaseManager] { connectionCount: 1 } Database manager initialized

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

{"level":30,"time":"2025-10-30T21:19:37.245Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:19:37.246Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:19:37.246Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:19:37.246Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:19:37.246Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":5,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
{"level":30,"time":"2025-10-30T21:20:07.235Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:20:07.235Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:20:07.235Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:20:07.236Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:20:07.236Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:20:07.337Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:20:07.337Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:20:07.337Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:20:07.337Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:20:07.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:20:07.347Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:20:07.347Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:20:07.347Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:20:07.347Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:20:07.347Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":0,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
{"level":30,"time":"2025-10-30T21:20:37.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:20:37.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:20:37.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:20:37.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:20:37.346Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:20:37.448Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:20:37.448Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:20:37.448Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:20:37.448Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:20:37.450Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:20:37.452Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:20:37.453Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:20:37.453Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:20:37.453Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:20:37.453Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":1,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
{"level":30,"time":"2025-10-30T21:21:07.450Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:21:07.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:21:07.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:21:07.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:21:07.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:21:07.553Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:21:07.553Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:21:07.553Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:21:07.553Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:21:07.557Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:21:07.561Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:21:07.561Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:21:07.561Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:21:07.561Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:21:07.561Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":1,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
FAIL test/modules/redis/redis.cluster.spec.ts (101.679 s)
  Redis Cluster Support
    Cluster Detection
      ✕ should correctly identify cluster clients (2 ms)
      ✕ should correctly identify non-cluster clients
      ✕ should handle null/undefined in isCluster
    Cluster Client Creation
      ✕ should create cluster client with proper configuration
      ✕ should handle cluster-specific options (1 ms)
    Cluster Manager Integration
      ✕ should manage cluster clients in RedisManager
      ✕ should handle mixed cluster and regular clients
    Cluster Service Operations
      ✕ should handle cluster operations through service
      ✕ should handle cluster pipeline operations
    Cluster Health Checks
      ✕ should check health of cluster clients
    Cluster Error Handling
      ✕ should handle cluster connection errors
      ✕ should handle failover scenarios
    Cluster Script Execution
      ✕ should handle script execution in cluster mode
    Cluster Pub/Sub
      ✕ should handle pub/sub in cluster mode
    Cluster Performance
      ✓ should handle slot distribution (1 ms)
      ✓ should handle hash tags for key grouping

  ● Redis Cluster Support › Cluster Detection › should correctly identify cluster clients

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:16:24)

  ● Redis Cluster Support › Cluster Detection › should correctly identify non-cluster clients

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:16:24)

  ● Redis Cluster Support › Cluster Detection › should handle null/undefined in isCluster

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:16:24)

  ● Redis Cluster Support › Cluster Client Creation › should create cluster client with proper configuration

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:58:24)

  ● Redis Cluster Support › Cluster Client Creation › should handle cluster-specific options

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:58:24)

  ● Redis Cluster Support › Cluster Manager Integration › should manage cluster clients in RedisManager

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:118:24)

  ● Redis Cluster Support › Cluster Manager Integration › should handle mixed cluster and regular clients

    Failed to initialize Redis cluster: Error: Command failed: /usr/local/bin/docker exec redis-cluster-master-0 redis-cli --cluster create 127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 127.0.0.1:7003 127.0.0.1:7004 127.0.0.1:7005 --cluster-replicas 1 --cluster-yes
    Could not connect to Redis at 127.0.0.1:7000: Connection refused

      1513 |       await new Promise((resolve) => setTimeout(resolve, 2000));
      1514 |     } catch (error) {
    > 1515 |       throw new Error(`Failed to initialize Redis cluster: ${error}`);
           |             ^
      1516 |     }
      1517 |   }
      1518 |

      at Function.initializeCluster (src/testing/docker-test-manager.ts:1515:13)
      at Function.initializeCluster [as createRedisCluster] (src/testing/docker-test-manager.ts:1296:30)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:118:24)

  ● Redis Cluster Support › Cluster Service Operations › should handle cluster operations through service

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-46c89a8d008b8997 --label test.cleanup=true --network redis-cluster-ec1fadad3ded5e10 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:197:24)

  ● Redis Cluster Support › Cluster Service Operations › should handle cluster pipeline operations

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-46c89a8d008b8997 --label test.cleanup=true --network redis-cluster-ec1fadad3ded5e10 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:197:24)

  ● Redis Cluster Support › Cluster Health Checks › should check health of cluster clients

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-0933506ed1bebaea --label test.cleanup=true --network redis-cluster-dad592f9cf4b33ba --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:282:24)

  ● Redis Cluster Support › Cluster Error Handling › should handle cluster connection errors

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-cd77203d6275a958 --label test.cleanup=true --network redis-cluster-4bfc33b4e6bf6231 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:332:24)

  ● Redis Cluster Support › Cluster Error Handling › should handle failover scenarios

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-cd77203d6275a958 --label test.cleanup=true --network redis-cluster-4bfc33b4e6bf6231 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:332:24)

  ● Redis Cluster Support › Cluster Script Execution › should handle script execution in cluster mode

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-12d4bede2e9903b3 --label test.cleanup=true --network redis-cluster-cba9ffe341af38d3 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:413:24)

  ● Redis Cluster Support › Cluster Pub/Sub › should handle pub/sub in cluster mode

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-5820047480c2bc6e --label test.cleanup=true --network redis-cluster-c974cacb208d6e04 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.cluster.spec.ts:481:24)

{"level":30,"time":"2025-10-30T21:21:37.558Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:21:37.558Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:21:37.558Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:21:37.558Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:21:37.558Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:21:37.659Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:21:37.660Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:21:37.660Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:21:37.660Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:21:37.663Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:21:37.666Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:21:37.666Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:21:37.666Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:21:37.666Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:21:37.666Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":0,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
{"level":30,"time":"2025-10-30T21:22:07.662Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:22:07.663Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:22:07.663Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:22:07.663Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:22:07.663Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:22:07.765Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:22:07.765Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:22:07.765Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:22:07.765Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:22:07.766Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:22:07.770Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:22:07.770Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:22:07.770Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:22:07.770Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:22:07.770Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":0,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
{"level":30,"time":"2025-10-30T21:22:37.767Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:22:37.768Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:22:37.768Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:22:37.768Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:22:37.768Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:22:37.869Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:22:37.870Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:22:37.870Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:22:37.870Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
{"level":30,"time":"2025-10-30T21:22:37.871Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:22:37.873Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:22:37.873Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:22:37.874Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:22:37.874Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:22:37.874Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":2,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
  console.warn
    [DatabaseHealthIndicator] {
      name: 'default',
      error: TitanError: database health check timed out after 5000ms
          at Object.timeout (/Users/taaliman/projects/luxquant/omnitron-dev/omni/packages/titan/src/errors/factories.ts:111:12)
          at Timeout.timeout [as _onTimeout] (/Users/taaliman/projects/luxquant/omnitron-dev/omni/packages/titan/src/modules/database/database.health.ts:149:67)
          at listOnTimeout (node:internal/timers:588:17)
          at processTimers (node:internal/timers:523:7) {
        code: 408,
        category: 'client',
        httpStatus: 408,
        details: { operation: 'database health check', timeout: 5000 },
        context: {},
        timestamp: 1761859362298,
        requestId: undefined,
        correlationId: undefined,
        spanId: undefined,
        traceId: undefined
      },
      latency: 5002
    } Database health check failed

      18 |     info: (...args: unknown[]) => console.info(`[${prefix}]`, ...args),
      19 |     error: (...args: unknown[]) => console.error(`[${prefix}]`, ...args),
    > 20 |     warn: (...args: unknown[]) => console.warn(`[${prefix}]`, ...args),
         |                                           ^
      21 |     debug: (...args: unknown[]) => console.debug(`[${prefix}]`, ...args),
      22 |     trace: (...args: unknown[]) => console.trace(`[${prefix}]`, ...args),
      23 |     fatal: (...args: unknown[]) => console.error(`[${prefix}] FATAL:`, ...args),

      at Object.warn (src/modules/database/utils/logger.factory.ts:20:43)
      at DatabaseHealthIndicator.warn [as checkConnection] (src/modules/database/database.health.ts:167:19)
      at DatabaseHealthIndicator.check (src/modules/database/database.health.ts:97:27)
      at Object.<anonymous> (test/modules/database/real-world-ecommerce.spec.ts:1121:22)

FAIL test/modules/redis/redis.docker-integration.spec.ts (92.519 s)
  RedisTestManager - Standalone Redis
    Basic Container Creation
      ✓ should create a standalone Redis container (5564 ms)
      ✓ should create Redis with custom port (5742 ms)
      ✓ should create Redis with password (5675 ms)
    withRedis Helper
      ✓ should run test with auto-cleanup (5743 ms)
      ✓ should handle errors and still cleanup (5768 ms)
    Docker Fixture Usage
      ✓ should create fixture with working Redis client (5750 ms)
      ✓ should support multiple databases (11197 ms)
      ✓ should work with password-protected Redis (5585 ms)
    Helper Functions
      ✓ should wait for Redis to be ready (1 ms)
      ✓ should flush Redis data (2 ms)
      ✓ should build connection strings correctly
    withDockerRedis Helper
      ✓ should provide isolated test environment (5702 ms)
      ✓ should handle concurrent tests (5830 ms)
  RedisTestManager - Redis Cluster
    Cluster Creation
      ✕ should create a Redis cluster (60 ms)
      ✕ should create minimal cluster (3 masters, no replicas) (41 ms)
    withRedisCluster Helper
      ✕ should run test with cluster (42 ms)
    Cluster Operations
      ✕ should perform operations on cluster (43 ms)
      ✕ should handle pipeline operations (47 ms)
  Connection String Builder
    ✓ should build simple connection string
    ✓ should build connection string with password
    ✓ should use defaults (1 ms)
  Integration: Real-world Scenarios
    ✓ should support key expiration (6859 ms)
    ✕ should support pub/sub (5694 ms)
    ✓ should support transactions (5714 ms)
    ✓ should support sorted sets (5754 ms)

  ● RedisTestManager - Redis Cluster › Cluster Creation › should create a Redis cluster

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-48fd5f73dfb23dd2 --label test.cleanup=true --network redis-cluster-e6b7b9efe77def70 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:210:25)

  ● RedisTestManager - Redis Cluster › Cluster Creation › should create minimal cluster (3 masters, no replicas)

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-b972a14e923c6d77 --label test.cleanup=true --network redis-cluster-803c98fa4986999d --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:230:25)

  ● RedisTestManager - Redis Cluster › withRedisCluster Helper › should run test with cluster

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-09ab6526072f8537 --label test.cleanup=true --network redis-cluster-e40d0155f7b9eb9b --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at Function.withRedisCluster (src/testing/docker-test-manager.ts:1552:21)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:251:9)

  ● RedisTestManager - Redis Cluster › Cluster Operations › should perform operations on cluster

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-e22a68df1a0568d4 --label test.cleanup=true --network redis-cluster-cc5c8c6162a4e489 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:264:25)

  ● RedisTestManager - Redis Cluster › Cluster Operations › should handle pipeline operations

    Failed to start container redis-cluster-master-0: Error: Command failed: /usr/local/bin/docker run -d --name redis-cluster-master-0 -p 7000:6379 --label test.id=test-f5bf71258872ecf3 --label test.cleanup=true --network redis-cluster-7cce4e307f04e283 --health-cmd redis-cli ping --health-interval 1s --health-timeout 3s --health-retries 5 --health-start-period 2s redis:7-alpine sh -c redis-server --cluster-enabled yes --cluster-config-file nodes.conf --cluster-node-timeout 5000 --appendonly no --save  --port 6379

      479 |         this.usedPorts.delete(port);
      480 |       });
    > 481 |       throw new Error(`Failed to start container ${name}: ${error}`);
          |             ^
      482 |     }
      483 |
      484 |     // Wait for container to be ready

      at DockerTestManager.createContainer (src/testing/docker-test-manager.ts:481:13)
      at Function.createRedisCluster (src/testing/docker-test-manager.ts:1223:27)
      at createDockerRedisClusterFixture (test/modules/redis/utils/redis-test-utils.ts:538:19)
      at withDockerRedisCluster (test/modules/redis/utils/redis-test-utils.ts:699:19)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:291:9)

  ● Integration: Real-world Scenarios › should support pub/sub

    Redis is already connecting/connected

      352 |
      353 |       const subscriber = fixture.client.duplicate();
    > 354 |       await subscriber.connect();
          |                        ^
      355 |
      356 |       subscriber.on('message', (channel, message) => {
      357 |         messages.push(message);

      at ../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:108:24
      at EventEmitter.connect (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:104:25)
      at test/modules/redis/redis.docker-integration.spec.ts:354:24
      at withDockerRedis (test/modules/redis/utils/redis-test-utils.ts:686:18)
      at Object.<anonymous> (test/modules/redis/redis.docker-integration.spec.ts:350:5)

  console.debug
    [RedisManager] Redis client "default-uyxiq3" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-uyxiq3" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uyxiq3" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-uyxiq3" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-uyxiq3" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-uyxiq3" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "secondary-uyxiq3" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-uyxiq3" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-uyxiq3" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-uyxiq3" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uyxiq3" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uyxiq3" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

{"level":30,"time":"2025-10-30T21:23:07.872Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:23:07.872Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:23:07.872Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:23:07.872Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:23:07.872Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:23:07.973Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:23:07.974Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:23:07.974Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:23:07.974Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
  console.debug
    [RedisManager] Redis client "default-2tuive" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-2tuive" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-2tuive" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-2tuive" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-2tuive" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-2tuive" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-2tuive" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-2tuive" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-2tuive" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-2tuive" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-2tuive" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-2tuive" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

{"level":30,"time":"2025-10-30T21:23:13.289Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:23:13.290Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:23:13.290Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:23:13.290Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:23:13.290Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:23:13.290Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":0,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
  console.debug
    [RedisManager] Redis client "default-qcn78" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qcn78" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-qcn78" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-qcn78" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-qcn78" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-qcn78" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-qcn78" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-qcn78" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-qcn78" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-qcn78" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qcn78" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qcn78" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ec49vh" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ec49vh" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ec49vh" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-ec49vh" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-ec49vh" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-ec49vh" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-ec49vh" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-ec49vh" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "secondary-ec49vh" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ec49vh" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ec49vh" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ec49vh" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-pgswj" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-pgswj" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-pgswj" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-pgswj" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-pgswj" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-pgswj" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-pgswj" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-pgswj" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-pgswj" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-pgswj" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-pgswj" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-pgswj" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ek6mks" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ek6mks" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ek6mks" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-ek6mks" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-ek6mks" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-ek6mks" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

{"level":30,"time":"2025-10-30T21:24:07.977Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:24:07.977Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:24:07.977Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:24:07.977Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:24:07.977Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:24:08.079Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:24:08.079Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:24:08.079Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:24:08.079Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
  console.log
    [RedisManager] Redis client "default-ek6mks" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-ek6mks" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-ek6mks" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ek6mks" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ek6mks" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ek6mks" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

{"level":30,"time":"2025-10-30T21:24:13.673Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:24:13.675Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:24:13.676Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:24:13.676Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:24:13.676Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:24:13.676Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":1,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
  console.debug
    [RedisManager] Redis client "default-3hbo7f" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-3hbo7f" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-3hbo7f" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-3hbo7f" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-3hbo7f" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-3hbo7f" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-3hbo7f" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-3hbo7f" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-3hbo7f" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-3hbo7f" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-3hbo7f" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-3hbo7f" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-go6718" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-go6718" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-go6718" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-go6718" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-go6718" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-go6718" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-go6718" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-go6718" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-go6718" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-go6718" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-go6718" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-go6718" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

FAIL test/modules/database/real-world-ecommerce.spec.ts (305.744 s)
  Real-World E-Commerce Application
    User Journey
      ✕ should complete full shopping experience (30003 ms)
      ✕ should handle product recommendations (30001 ms)
      ✕ should provide analytics dashboard (30002 ms)
    Inventory Management
      ✕ should prevent overselling (30002 ms)
      ✕ should update stock on purchase (30003 ms)
    Performance & Health
      ✕ should handle concurrent transactions (30002 ms)
      ✓ should provide health metrics (5030 ms)
      ✕ should handle large result sets efficiently (30002 ms)
    Data Integrity
      ✕ should maintain referential integrity (30002 ms)
      ✕ should handle soft deletes correctly (30002 ms)
      ✕ should handle optimistic locking (30001 ms)

  ● Real-World E-Commerce Application › User Journey › should complete full shopping experience

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      988 |
      989 |   describe('User Journey', () => {
    > 990 |     it('should complete full shopping experience', async () => {
          |     ^
      991 |       // 1. User registration/login
      992 |       const user = await userRepo.findByEmail('customer1@example.com');
      993 |       expect(user).toBeDefined();

      at test/modules/database/real-world-ecommerce.spec.ts:990:5
      at test/modules/database/real-world-ecommerce.spec.ts:989:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › User Journey › should handle product recommendations

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1043 |     });
      1044 |
    > 1045 |     it('should handle product recommendations', async () => {
           |     ^
      1046 |       const user = await userRepo.findByEmail('customer1@example.com');
      1047 |       const recommendations = await ecommerceService.getRecommendations(user!.id, 5);
      1048 |

      at test/modules/database/real-world-ecommerce.spec.ts:1045:5
      at test/modules/database/real-world-ecommerce.spec.ts:989:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › User Journey › should provide analytics dashboard

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1051 |     });
      1052 |
    > 1053 |     it('should provide analytics dashboard', async () => {
           |     ^
      1054 |       const startDate = new Date('2024-01-01');
      1055 |       const endDate = new Date('2024-12-31');
      1056 |

      at test/modules/database/real-world-ecommerce.spec.ts:1053:5
      at test/modules/database/real-world-ecommerce.spec.ts:989:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Inventory Management › should prevent overselling

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1066 |
      1067 |   describe('Inventory Management', () => {
    > 1068 |     it('should prevent overselling', async () => {
           |     ^
      1069 |       const product = await productRepo.findBySku('LAPTOP001');
      1070 |       expect(product).toBeDefined();
      1071 |

      at test/modules/database/real-world-ecommerce.spec.ts:1068:5
      at test/modules/database/real-world-ecommerce.spec.ts:1067:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Inventory Management › should update stock on purchase

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1076 |     });
      1077 |
    > 1078 |     it('should update stock on purchase', async () => {
           |     ^
      1079 |       const product = await productRepo.findBySku('MOUSE001');
      1080 |       const initialStock = product!.stock_quantity;
      1081 |

      at test/modules/database/real-world-ecommerce.spec.ts:1078:5
      at test/modules/database/real-world-ecommerce.spec.ts:1067:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Performance & Health › should handle concurrent transactions

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1095 |
      1096 |   describe('Performance & Health', () => {
    > 1097 |     it('should handle concurrent transactions', async () => {
           |     ^
      1098 |       const users = await userRepo.findActiveCustomers();
      1099 |       const products = await productRepo.findInStock();
      1100 |

      at test/modules/database/real-world-ecommerce.spec.ts:1097:5
      at test/modules/database/real-world-ecommerce.spec.ts:1096:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Performance & Health › should handle large result sets efficiently

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1127 |     });
      1128 |
    > 1129 |     it('should handle large result sets efficiently', async () => {
           |     ^
      1130 |       const startTime = Date.now();
      1131 |
      1132 |       // Search with pagination

      at test/modules/database/real-world-ecommerce.spec.ts:1129:5
      at test/modules/database/real-world-ecommerce.spec.ts:1096:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Data Integrity › should maintain referential integrity

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1150 |
      1151 |   describe('Data Integrity', () => {
    > 1152 |     it('should maintain referential integrity', async () => {
           |     ^
      1153 |       // Try to create order with non-existent user
      1154 |       await expect(
      1155 |         orderRepo.create({

      at test/modules/database/real-world-ecommerce.spec.ts:1152:5
      at test/modules/database/real-world-ecommerce.spec.ts:1151:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Data Integrity › should handle soft deletes correctly

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1169 |     });
      1170 |
    > 1171 |     it('should handle soft deletes correctly', async () => {
           |     ^
      1172 |       // Get an existing category first to ensure foreign key constraint is satisfied
      1173 |       const category = await db.selectFrom('categories').selectAll().executeTakeFirst();
      1174 |

      at test/modules/database/real-world-ecommerce.spec.ts:1171:5
      at test/modules/database/real-world-ecommerce.spec.ts:1151:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  ● Real-World E-Commerce Application › Data Integrity › should handle optimistic locking

    thrown: "Exceeded timeout of 30000 ms for a test.
    Add a timeout value to this test to increase the timeout, if this is a long-running test. See https://jestjs.io/docs/api#testname-fn-timeout."

      1197 |     });
      1198 |
    > 1199 |     it('should handle optimistic locking', async () => {
           |     ^
      1200 |       const product = await productRepo.findBySku('LAPTOP001');
      1201 |       const originalVersion = product!.version;
      1202 |

      at test/modules/database/real-world-ecommerce.spec.ts:1199:5
      at test/modules/database/real-world-ecommerce.spec.ts:1151:3
      at test/modules/database/real-world-ecommerce.spec.ts:906:1

  console.debug
    [RedisManager] Redis client "default-wisl1u" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-wisl1u" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-wisl1u" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-wisl1u" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-wisl1u" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-wisl1u" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-wisl1u" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-wisl1u" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-wisl1u" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-wisl1u" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    Docker available: true

      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:64:13)

  console.log
    ✓ Docker detected - will use real databases for testing

      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:67:15)

  console.log
    Starting postgres container for testing...

      at log (src/modules/database/testing/test-utilities.ts:121:17)

  console.debug
    [RedisManager] Redis client "secondary-wisl1u" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-wisl1u" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    postgres container started on port 26868

      at log (src/modules/database/testing/test-utilities.ts:181:17)

  console.log
    Using postgres for testing (Docker: true)

      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:88:15)

  console.info
    [DatabaseManager] Initializing database manager

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.debug
    [DatabaseManager] { name: 'default', attempt: 0, maxRetries: 5 } Attempting database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] { name: 'default', dialect: 'postgres' } Creating database connection

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client connected

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.info
    [DatabaseManager] { name: 'default', dialect: 'postgres' } Database connection established

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.info
    [DatabaseManager] { connectionCount: 1 } Database manager initialized

      at Object.info (src/modules/database/utils/logger.factory.ts:18:43)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [DatabaseManager] PostgreSQL pool client acquired

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.log
    Stopping postgres container...

      at Object.log [as cleanup] (src/modules/database/testing/test-utilities.ts:191:21)

  console.log
    Starting mysql container for testing...

      at log (src/modules/database/testing/test-utilities.ts:121:17)

  console.error
    [DatabaseManager] {
      error: error: terminating connection due to administrator command
          at Parser.parseErrorMessage (/Users/taaliman/projects/luxquant/omnitron-dev/omni/node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/parser.ts:369:69)
          at Parser.handlePacket (/Users/taaliman/projects/luxquant/omnitron-dev/omni/node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/parser.ts:187:21)
          at Parser.parse (/Users/taaliman/projects/luxquant/omnitron-dev/omni/node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/parser.ts:102:30)
          at Socket.<anonymous> (/Users/taaliman/projects/luxquant/omnitron-dev/omni/node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/index.ts:7:48)
          at Socket.emit (node:events:519:28)
          at addChunk (node:internal/streams/readable:561:12)
          at readableAddChunkPushByteMode (node:internal/streams/readable:512:3)
          at Socket.Readable.push (node:internal/streams/readable:392:5)
          at TCP.onStreamRead (node:internal/stream_base_commons:189:23)
          at TCP.callbackTrampoline (node:internal/async_hooks:130:17) {
        length: 116,
        severity: 'FATAL',
        code: '57P01',
        detail: undefined,
        hint: undefined,
        position: undefined,
        internalPosition: undefined,
        internalQuery: undefined,
        where: undefined,
        schema: undefined,
        table: undefined,
        column: undefined,
        dataType: undefined,
        constraint: undefined,
        file: 'postgres.c',
        line: '3286',
        routine: 'ProcessInterrupts',
        client: Client {
          _events: [Object: null prototype],
          _eventsCount: 1,
          _maxListeners: undefined,
          connectionParameters: [ConnectionParameters],
          user: 'testuser',
          database: 'testdb',
          port: 26868,
          host: '127.0.0.1',
          replication: undefined,
          _Promise: [Function: Promise],
          _types: [TypeOverrides],
          _ending: true,
          _ended: false,
          _connecting: false,
          _connected: true,
          _connectionError: false,
          _queryable: false,
          enableChannelBinding: false,
          connection: [Connection],
          queryQueue: [],
          binary: false,
          processID: 70,
          secretKey: -1587559321,
          ssl: false,
          _connectionTimeoutMillis: 0,
          _connectionCallback: null,
          release: [Function (anonymous)],
          activeQuery: null,
          readyForQuery: true,
          hasExecuted: true,
          _poolUseCount: 9,
          [Symbol(shapeMode)]: false,
          [Symbol(kCapture)]: false
        }
      },
      client: 'present'
    } PostgreSQL pool error

      17 |   return {
      18 |     info: (...args: unknown[]) => console.info(`[${prefix}]`, ...args),
    > 19 |     error: (...args: unknown[]) => console.error(`[${prefix}]`, ...args),
         |                                            ^
      20 |     warn: (...args: unknown[]) => console.warn(`[${prefix}]`, ...args),
      21 |     debug: (...args: unknown[]) => console.debug(`[${prefix}]`, ...args),
      22 |     trace: (...args: unknown[]) => console.trace(`[${prefix}]`, ...args),

      at Object.error (src/modules/database/utils/logger.factory.ts:19:44)
      at BoundPool.error (src/modules/database/database.manager.ts:296:23)
      at Client.idleListener (../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:62:10)
      at Client._handleErrorEvent (../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:350:10)
      at Client._handleErrorMessage (../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/client.js:361:12)
      at ../../node_modules/.pnpm/pg@8.16.3/node_modules/pg/lib/connection.js:116:12
      at Parser.parse (../../node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/parser.ts:103:9)
      at Socket.<anonymous> (../../node_modules/.pnpm/pg-protocol@1.10.3/node_modules/pg-protocol/src/index.ts:7:48)

  console.debug
    [DatabaseManager] PostgreSQL pool client removed

      at Object.debug (src/modules/database/utils/logger.factory.ts:21:44)

  console.debug
    [RedisManager] Redis client "default-uqp96" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-uqp96" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uqp96" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-uqp96" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-uqp96" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-uqp96" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-uqp96" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-uqp96" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "secondary-uqp96" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-uqp96" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uqp96" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-uqp96" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    mysql container started on port 20834

      at log (src/modules/database/testing/test-utilities.ts:181:17)

  console.log
    Using mysql for testing (Docker: true)

      at test/modules/database/docker-integration.spec.ts:154:19

  console.log
    Stopping mysql container...

      at Object.log [as cleanup] (src/modules/database/testing/test-utilities.ts:191:21)

  console.log
    Testing postgres (Docker: true)

      at test/modules/database/docker-integration.spec.ts:202:21

  console.log
    Using in-memory SQLite for testing (forced)

      at log (src/modules/database/testing/test-utilities.ts:206:13)

  console.log
    Starting postgres container for testing...

      at log (src/modules/database/testing/test-utilities.ts:121:17)

  console.debug
    [RedisManager] Redis client "default-w466ux5" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-w466ux5" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-w466ux5" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-w466ux5" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-w466ux5" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-w466ux5" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-w466ux5" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-w466ux5" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "default-w466ux5" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-w466ux5" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-w466ux5" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-w466ux5" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    postgres container started on port 25586

      at log (src/modules/database/testing/test-utilities.ts:181:17)

  console.log
    CI detected - using SQLite

      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:269:17)

  console.log
    Stopping postgres container...

      at Object.log [as cleanup] (src/modules/database/testing/test-utilities.ts:191:21)

FAIL test/modules/database/docker-integration.spec.ts (25.019 s)
  Docker Database Integration
    ✓ should detect Docker availability (4 ms)
    PostgreSQL Integration
      ✓ should create and retrieve users (5 ms)
      ✓ should handle multiple users (5 ms)
    MySQL Integration
      ✕ should work with MySQL in Docker (7493 ms)
    Cross-Database Compatibility
      ✕ should work with all supported databases (5762 ms)
    Fallback Behavior
      ✓ should fallback to SQLite when Docker is not available (2 ms)
      ✓ should use SQLite in CI environments by default (5767 ms)

  ● Docker Database Integration › MySQL Integration › should work with MySQL in Docker

    connect ECONNREFUSED 127.0.0.1:26868

      295 |     `.execute(db);
      296 |   } else if (dialect === 'mysql' || dialect === 'mariadb') {
    > 297 |     await sql`
          |     ^
      298 |       CREATE TABLE IF NOT EXISTS users (
      299 |         id INT AUTO_INCREMENT PRIMARY KEY,
      300 |         email VARCHAR(255) NOT NULL UNIQUE,

      at ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11
      at PostgresDriver.acquireConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/dialect/postgres/postgres-driver.js:21:24)
      at RuntimeDriver.acquireConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/driver/runtime-driver.js:44:28)
      at DefaultConnectionProvider.provideConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/driver/default-connection-provider.js:8:28)
      at DefaultQueryExecutor.executeQuery (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/query-executor/query-executor-base.js:34:16)
      at createUserSchema (test/modules/database/docker-integration.spec.ts:297:5)
      at test/modules/database/docker-integration.spec.ts:178:11
      at withTestDatabase (src/modules/database/testing/test-utilities.ts:247:12)
      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:148:7)

  ● Docker Database Integration › Cross-Database Compatibility › should work with all supported databases

    connect ECONNREFUSED 127.0.0.1:26868

      285 | async function createUserSchema(db: Kysely<any>, dialect: string) {
      286 |   if (dialect === 'postgres') {
    > 287 |     await sql`
          |     ^
      288 |       CREATE TABLE IF NOT EXISTS users (
      289 |         id SERIAL PRIMARY KEY,
      290 |         email VARCHAR(255) NOT NULL UNIQUE,

      at ../../node_modules/.pnpm/pg-pool@3.10.1_pg@8.16.3/node_modules/pg-pool/index.js:45:11
      at PostgresDriver.acquireConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/dialect/postgres/postgres-driver.js:21:24)
      at RuntimeDriver.acquireConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/driver/runtime-driver.js:44:28)
      at DefaultConnectionProvider.provideConnection (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/driver/default-connection-provider.js:8:28)
      at DefaultQueryExecutor.executeQuery (../../node_modules/.pnpm/kysely@0.28.8/node_modules/kysely/dist/esm/query-executor/query-executor-base.js:34:16)
      at createUserSchema (test/modules/database/docker-integration.spec.ts:287:5)
      at test/modules/database/docker-integration.spec.ts:226:13
      at withTestDatabase (src/modules/database/testing/test-utilities.ts:247:12)
      at Object.<anonymous> (test/modules/database/docker-integration.spec.ts:196:9)

{"level":30,"time":"2025-10-30T21:25:08.348Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:25:08.348Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:25:08.348Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:25:08.348Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:25:08.348Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:orders.*:grp:orders.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:orders.*:retry:grp:orders.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: orders.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

{"level":30,"time":"2025-10-30T21:25:08.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:25:08.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:25:08.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:25:08.451Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'orders.created' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'orders.updated' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'orders.deleted' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:events.*:grp:events.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:events.*:retry:grp:events.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: events.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'events.retryTest' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Scheduling retry: stream=rotif:stream:events.*, attempt=2, delay=1000ms

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Retry scheduled successfully: RETRIED

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Moved 1 scheduled messages

      at Object.debug (src/rotif/utils/logger.ts:14:33)

{"level":30,"time":"2025-10-30T21:25:14.420Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:25:14.421Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:25:14.421Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:25:14.421Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:25:14.421Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:25:14.421Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":0,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:tasks.*:grp:tasks.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:tasks.*:retry:grp:tasks.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: tasks.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'tasks.cleanup' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Moved 1 scheduled messages

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [RedisManager] Redis client "default-1437am" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-1437am" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-1437am" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-1437am" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-1437am" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-1437am" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-1437am" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-1437am" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "secondary-1437am" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-1437am" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-1437am" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-1437am" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:metrics.*:grp:metrics.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:metrics.*:retry:grp:metrics.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: metrics.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel0' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel1' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel2' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel3' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel4' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel5' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel6' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel7' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel8' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel9' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel10' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel11' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel12' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel13' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel14' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel15' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel16' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel17' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel18' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel19' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel20' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel21' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel22' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel23' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel24' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel25' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel26' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel27' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel28' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel29' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel30' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel31' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel32' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel33' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel34' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel35' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel36' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel37' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel38' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel39' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel40' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel41' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel42' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel43' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel44' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel45' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel46' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel47' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel48' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel49' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel50' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel51' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel52' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel53' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel54' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel55' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel56' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel57' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel58' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel59' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel60' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel61' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel62' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel63' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel64' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel65' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel66' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel67' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel68' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel69' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel70' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel71' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel72' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel73' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel74' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel75' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel76' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel77' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel78' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel79' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel80' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel81' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel82' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel83' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel84' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel85' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel86' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel87' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel88' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel89' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel90' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 0)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel91' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 1)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel92' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 2)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel93' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 3)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel94' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 4)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel95' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 5)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel96' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 6)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel97' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 7)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel98' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 8)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'metrics.channel99' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)
          at async Promise.all (index 9)

  console.debug
    [RedisManager] Redis client "default-h20dfs" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-h20dfs" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-h20dfs" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-h20dfs" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-h20dfs" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-h20dfs" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-h20dfs" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-h20dfs" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "secondary-h20dfs" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-h20dfs" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-h20dfs" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-h20dfs" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:logs.*:grp:logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:logs.*:retry:grp:logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'logs.info' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.info
    [rotif] INFO: Stopped shared consumer loop for rotif:stream:logs.*:grp:logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Stopped shared consumer loop for rotif:stream:logs.*:retry:grp:logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Unsubscribed from pattern (no more subscribers): logs.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: No active patterns match channel logs.error, skipping publish.

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:alerts.*:grp:alerts.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:alerts.*:retry:grp:alerts.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: alerts.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: [DLQ] Subscribed to DLQ stream

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'alerts.critical' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Scheduling retry: stream=rotif:stream:alerts.*, attempt=2, delay=1000ms

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Retry scheduled successfully: RETRIED

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.debug
    [rotif] DEBUG: Moved 1 scheduled messages

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.error
    [rotif] ERROR: Message 1761859535532-0 moved to DLQ after error: Force DLQ

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at error (src/rotif/rotif.ts:770:25)
      at src/rotif/rotif.ts:918:15

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:dlq.*:grp:dlq.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:dlq.*:retry:grp:dlq.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: dlq.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'dlq.test' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.error
    [rotif] ERROR: Message 1761859538315-0 moved to DLQ after error: forced failure

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at error (src/rotif/rotif.ts:770:25)
      at src/rotif/rotif.ts:918:15

  console.info
    [rotif] INFO: Requeued 1 messages from DLQ

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [RedisManager] Redis client "default-qu7d7o" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qu7d7o" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qu7d7o" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-qu7d7o" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-qu7d7o" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-qu7d7o" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-qu7d7o" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-qu7d7o" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-qu7d7o" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-qu7d7o" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qu7d7o" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-qu7d7o" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Redis successfully connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Pub/Sub subscriber connected

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Lua scripts loaded or reused

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:sessions.*:grp:sessions.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Starting shared consumer loop for rotif:stream:sessions.*:retry:grp:sessions.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: Subscribed to new pattern: sessions.*

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [rotif] DEBUG: Published message to 1 active streams { channel: 'sessions.start' }

      at Object.debug (src/rotif/utils/logger.ts:14:33)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.info
    [rotif] INFO: All subscriptions stopped

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 155.41906986992817ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 211.44623388116605ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 467.66892958728215ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 870.8637120725165ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 1676.1266094954221ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 3212.654010576033ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.debug
    [RedisManager] Redis client "default-3chrv" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-3chrv" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-3chrv" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-3chrv" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-3chrv" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-3chrv" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "secondary-3chrv" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-3chrv" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-3chrv" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-3chrv" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-3chrv" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-3chrv" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscription failed: MaxRetriesPerRequestError: Reached the max retries per request limit (which is 20). Refer to "maxRetriesPerRequest" option for details.
        at Socket.<anonymous> (/Users/taaliman/projects/luxquant/omnitron-dev/omni/node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:182:37)
        at Object.onceWrapper (node:events:634:26)
        at Socket.emit (node:events:519:28)
        at TCP.<anonymous> (node:net:346:12)
        at TCP.callbackTrampoline (node:internal/async_hooks:130:17)

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at error (src/rotif/rotif.ts:587:21)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.debug
    [RedisManager] Redis client "default-thxi4n" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-thxi4n" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-thxi4n" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-thxi4n" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-thxi4n" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-thxi4n" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-thxi4n" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-thxi4n" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-thxi4n" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-thxi4n" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-thxi4n" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-thxi4n" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

{"level":30,"time":"2025-10-30T21:26:08.790Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","options":{},"msg":"Application stopping"}
{"level":30,"time":"2025-10-30T21:26:08.790Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Saving application state"}
{"level":30,"time":"2025-10-30T21:26:08.790Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Closing active connections"}
{"level":30,"time":"2025-10-30T21:26:08.790Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Flushing logs..."}
{"level":30,"time":"2025-10-30T21:26:08.790Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Logs flushed successfully"}
{"level":30,"time":"2025-10-30T21:26:08.892Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","msg":"Application stopped successfully"}
{"level":30,"time":"2025-10-30T21:26:08.892Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Stopping Netron instance"}
{"level":30,"time":"2025-10-30T21:26:08.892Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Netron instance stopped"}
{"level":30,"time":"2025-10-30T21:26:08.892Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service stopped"}
  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Stopping all subscriptions

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.debug
    [RedisManager] Redis client "default-ubhmib" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ubhmib" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ubhmib" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-ubhmib" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-ubhmib" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-ubhmib" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "secondary-ubhmib" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.log
    [RedisManager] Redis client "default-ubhmib" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.debug
    [RedisManager] Redis client "secondary-ubhmib" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ubhmib" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ubhmib" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ubhmib" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

{"level":30,"time":"2025-10-30T21:26:14.466Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Application","msg":"Logger module initialized"}
{"level":30,"time":"2025-10-30T21:26:14.466Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"starting","msg":"Application starting"}
{"level":30,"time":"2025-10-30T21:26:14.466Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"Starting Netron instance"}
{"level":30,"time":"2025-10-30T21:26:14.466Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"netron","netronId":"titan-app-netron","msg":"No transport servers configured, starting in client-only mode"}
{"level":30,"time":"2025-10-30T21:26:14.466Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","module":"Netron","msg":"Netron service started"}
{"level":30,"time":"2025-10-30T21:26:14.467Z","pid":53133,"hostname":"MacBook-Pro-Taaliman.local","name":"titan-app","state":"started","startupTime":1,"modules":["TitanDatabaseModule","TestModule"],"msg":"Application started successfully"}
  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.debug
    [RedisManager] Redis client "secondary-ckoobd" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ckoobd" connecting

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ckoobd" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "secondary-ckoobd" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-ckoobd" ready

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.log
    [RedisManager] Redis client "default-ckoobd" connected successfully

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "default-ckoobd" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 0)

  console.log
    [RedisManager] Redis client "secondary-ckoobd" closed

      at SimpleLogger.log (src/modules/redis/redis.manager.ts:26:13)
          at async Promise.all (index 1)

  console.debug
    [RedisManager] Redis client "default-ckoobd" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "default-ckoobd" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ckoobd" connection closed

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.debug
    [RedisManager] Redis client "secondary-ckoobd" connection ended

      at SimpleLogger.debug (src/modules/redis/redis.manager.ts:38:13)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.error
    [rotif] ERROR: Redis connection error Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:83:19)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

  console.info
    [rotif] INFO: Redis reconnecting in 5000ms...

      at Object.info (src/rotif/utils/logger.ts:21:32)

  console.error
    [rotif] ERROR: Pub/Sub subscriber error: Error: connect ECONNREFUSED 127.0.0.1:6379
        at TCPConnectWrap.afterConnect [as oncomplete] (node:net:1637:16)
        at TCPConnectWrap.callbackTrampoline (node:internal/async_hooks:130:17) {
      errno: -61,
      code: 'ECONNREFUSED',
      syscall: 'connect',
      address: '127.0.0.1',
      port: 6379
    }

      33 |    * @param {any} [meta] - Additional metadata
      34 |    */
    > 35 |   error: (msg, meta) => console.error(`[rotif] ERROR: ${msg}`, meta || ''),
         |                                 ^
      36 | };
      37 |

      at Object.error (src/rotif/utils/logger.ts:35:33)
      at EventEmitter.error (src/rotif/rotif.ts:600:21)
      at EventEmitter.silentEmit (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/Redis.js:483:30)
      at Socket.<anonymous> (../../node_modules/.pnpm/ioredis@5.8.1/node_modules/ioredis/built/redis/event_handler.js:196:14)

