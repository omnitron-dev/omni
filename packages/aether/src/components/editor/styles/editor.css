/**
 * Editor Core Styles
 * Main editor container and content area styling
 */

/* ===== Editor Container ===== */

.aether-editor {
  position: relative;
  display: flex;
  flex-direction: column;
  width: 100%;
  height: 100%;
  background-color: var(--editor-color-background);
  color: var(--editor-color-text);
  font-family: var(--editor-font-family);
  font-size: var(--editor-font-size-base);
  line-height: var(--editor-line-height-base);
  overflow: hidden;
}

.aether-editor *,
.aether-editor *::before,
.aether-editor *::after {
  box-sizing: border-box;
}

/* ===== Editor Layout ===== */

.aether-editor__header {
  display: flex;
  flex-direction: column;
  flex-shrink: 0;
  background-color: var(--editor-color-surface);
  border-bottom: 1px solid var(--editor-color-border);
  z-index: var(--editor-z-sticky);
}

.aether-editor__main {
  display: flex;
  flex: 1;
  min-height: 0;
  overflow: hidden;
}

.aether-editor__content {
  flex: 1;
  position: relative;
  overflow: auto;
  background-color: var(--editor-color-surface);
}

.aether-editor__sidebar {
  flex-shrink: 0;
  width: 300px;
  border-left: 1px solid var(--editor-color-border);
  background-color: var(--editor-color-background-alt);
  overflow: auto;
}

/* ===== ProseMirror Container ===== */

.ProseMirror {
  position: relative;
  padding: var(--editor-content-padding);
  max-width: var(--editor-content-max-width);
  margin: 0 auto;
  min-height: 100%;
  outline: none;
  line-height: var(--editor-content-line-height);
}

.ProseMirror:focus {
  outline: none;
}

/* ===== Selection Styles ===== */

.ProseMirror ::selection {
  background-color: var(--editor-color-selection-bg);
  color: var(--editor-color-selection);
}

.ProseMirror ::-moz-selection {
  background-color: var(--editor-color-selection-bg);
  color: var(--editor-color-selection);
}

.ProseMirror-selectednode {
  outline: 2px solid var(--editor-color-selection);
  outline-offset: 2px;
  border-radius: var(--editor-radius-sm);
}

/* ===== Placeholder ===== */

.ProseMirror p.is-editor-empty:first-child::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--editor-color-text-tertiary);
  pointer-events: none;
  height: 0;
}

.ProseMirror .is-empty::before {
  content: attr(data-placeholder);
  float: left;
  color: var(--editor-color-text-tertiary);
  pointer-events: none;
  height: 0;
}

/* ===== Cursor ===== */

.ProseMirror-cursor {
  position: absolute;
  border-left: 2px solid var(--editor-color-text);
  border-right: none;
  border-top: none;
  border-bottom: none;
  margin-left: -1px;
  pointer-events: none;
}

/* ===== Focus Visible ===== */

.aether-editor :focus-visible {
  outline: 2px solid var(--editor-color-focus);
  outline-offset: 2px;
  border-radius: var(--editor-radius-sm);
}

/* ===== Drag Handles ===== */

.ProseMirror-drag-handle {
  position: absolute;
  left: -2rem;
  top: 0;
  width: 1.5rem;
  height: 1.5rem;
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: grab;
  opacity: 0;
  transition: opacity var(--editor-duration-fast) var(--editor-easing-out);
  color: var(--editor-color-text-tertiary);
}

.ProseMirror-drag-handle:hover {
  opacity: 1;
  color: var(--editor-color-text-secondary);
}

.ProseMirror-drag-handle:active {
  cursor: grabbing;
}

/* ===== Drop Cursor ===== */

.ProseMirror-dropcursor {
  position: absolute;
  pointer-events: none;
  border-left: 2px solid var(--editor-color-primary);
  margin-left: -1px;
}

/* ===== Gap Cursor ===== */

.ProseMirror-gapcursor {
  position: relative;
  display: inline-block;
}

.ProseMirror-gapcursor::after {
  content: '';
  position: absolute;
  top: -2px;
  bottom: -2px;
  width: 2px;
  background-color: var(--editor-color-text);
  animation: blink 1.2s step-end infinite;
}

@keyframes blink {
  0%, 100% {
    opacity: 1;
  }
  50% {
    opacity: 0;
  }
}

/* ===== Collaboration ===== */

.ProseMirror .collaboration-cursor__caret {
  position: relative;
  border-left: 2px solid;
  border-right: none;
  margin-left: -1px;
  margin-right: -1px;
  pointer-events: none;
  word-break: normal;
}

.ProseMirror .collaboration-cursor__label {
  position: absolute;
  top: -1.4em;
  left: -1px;
  font-size: var(--editor-font-size-xs);
  font-weight: var(--editor-font-weight-semibold);
  color: var(--editor-color-text-inverse);
  padding: 0.1rem 0.3rem;
  border-radius: var(--editor-radius-sm);
  white-space: nowrap;
  user-select: none;
  pointer-events: none;
}

/* ===== Loading State ===== */

.aether-editor.is-loading {
  pointer-events: none;
  opacity: 0.6;
}

.aether-editor__loading {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: var(--editor-z-modal);
}

.aether-editor__spinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--editor-color-border);
  border-top-color: var(--editor-color-primary);
  border-radius: var(--editor-radius-full);
  animation: spin 0.8s linear infinite;
}

@keyframes spin {
  to {
    transform: rotate(360deg);
  }
}

/* ===== Error State ===== */

.aether-editor.has-error {
  border: 2px solid var(--editor-color-error);
}

.aether-editor__error {
  padding: var(--editor-spacing-md);
  background-color: var(--editor-color-error-bg);
  color: var(--editor-color-error);
  border: 1px solid var(--editor-color-error);
  border-radius: var(--editor-radius-base);
  margin: var(--editor-spacing-md);
}

/* ===== Readonly State ===== */

.aether-editor.is-readonly .ProseMirror {
  cursor: default;
  background-color: var(--editor-color-background-alt);
}

.aether-editor.is-readonly .aether-editor__header {
  pointer-events: none;
  opacity: 0.7;
}

/* ===== Fullscreen Mode ===== */

.aether-editor.is-fullscreen {
  position: fixed;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  z-index: var(--editor-z-modal);
  background-color: var(--editor-color-background);
}

/* ===== Print Styles ===== */

@media print {
  .aether-editor__header,
  .aether-editor__sidebar {
    display: none;
  }

  .ProseMirror {
    padding: 0;
    max-width: none;
  }
}

/* ===== Scrollbar Styling ===== */

.aether-editor__content::-webkit-scrollbar {
  width: var(--editor-scrollbar-width);
  height: var(--editor-scrollbar-width);
}

.aether-editor__content::-webkit-scrollbar-track {
  background: var(--editor-scrollbar-track);
}

.aether-editor__content::-webkit-scrollbar-thumb {
  background: var(--editor-scrollbar-thumb);
  border-radius: var(--editor-radius-full);
}

.aether-editor__content::-webkit-scrollbar-thumb:hover {
  background: rgba(0, 0, 0, 0.3);
}

/* Firefox scrollbar */
.aether-editor__content {
  scrollbar-width: thin;
  scrollbar-color: var(--editor-scrollbar-thumb) var(--editor-scrollbar-track);
}

/* ===== Responsive Design ===== */

@media (max-width: 768px) {
  .ProseMirror {
    padding: var(--editor-spacing-md);
  }

  .aether-editor__sidebar {
    display: none;
  }

  .aether-editor__content {
    width: 100%;
  }
}

/* ===== Accessibility ===== */

.aether-editor[aria-busy="true"] {
  cursor: wait;
}

.aether-editor[aria-invalid="true"] {
  border-color: var(--editor-color-error);
}

/* Screen reader only */
.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border-width: 0;
}

/* ===== High Contrast Mode ===== */

@media (prefers-contrast: high) {
  .aether-editor {
    border: 2px solid currentColor;
  }

  .ProseMirror-selectednode {
    outline-width: 3px;
  }

  .aether-editor :focus-visible {
    outline-width: 3px;
  }
}

/* ===== Reduced Motion ===== */

@media (prefers-reduced-motion: reduce) {
  .aether-editor *,
  .aether-editor *::before,
  .aether-editor *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
  }

  .ProseMirror-gapcursor::after {
    animation: none;
  }

  .aether-editor__spinner {
    animation: none;
  }
}
