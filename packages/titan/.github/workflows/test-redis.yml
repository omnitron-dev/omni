name: Redis Module Tests

on:
  push:
    branches: [ main, develop ]
    paths:
      - 'packages/titan/src/modules/redis/**'
      - 'packages/titan/test/modules/redis/**'
      - 'packages/titan/test/utils/redis-*'
      - 'packages/titan/test/docker/**'
  pull_request:
    branches: [ main, develop ]
    paths:
      - 'packages/titan/src/modules/redis/**'
      - 'packages/titan/test/modules/redis/**'
      - 'packages/titan/test/utils/redis-*'
      - 'packages/titan/test/docker/**'

jobs:
  test-redis:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x]
        redis-version: [6-alpine, 7-alpine]

    services:
      redis:
        image: redis:${{ matrix.redis-version }}
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v3
      with:
        node-version: ${{ matrix.node-version }}

    - name: Install dependencies
      run: |
        cd packages/titan
        npm install

    - name: Wait for Redis
      run: |
        for i in {1..30}; do
          if redis-cli ping; then
            echo "Redis is ready"
            break
          fi
          echo "Waiting for Redis... ($i/30)"
          sleep 1
        done

    - name: Run Redis module tests
      env:
        USE_REAL_REDIS: true
        REDIS_HOST: localhost
        REDIS_PORT: 6379
      run: |
        cd packages/titan
        npm run test:redis:all

    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results-redis-${{ matrix.node-version }}-${{ matrix.redis-version }}
        path: packages/titan/test-results/

  test-redis-cluster:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '20.x'

    - name: Install dependencies
      run: |
        cd packages/titan
        npm install

    - name: Start Redis cluster
      run: |
        docker-compose -f packages/titan/test/docker/docker-compose.test.yml up -d redis-cluster-node1 redis-cluster-node2 redis-cluster-node3
        sleep 5
        # Initialize cluster
        docker exec redis-cluster-node1-default redis-cli --cluster create \
          127.0.0.1:7000 127.0.0.1:7001 127.0.0.1:7002 \
          --cluster-replicas 0 --cluster-yes

    - name: Run Redis cluster tests
      env:
        USE_REAL_REDIS: true
        REDIS_CLUSTER: true
        REDIS_CLUSTER_NODES: '127.0.0.1:7000,127.0.0.1:7001,127.0.0.1:7002'
      run: |
        cd packages/titan
        npm run test:redis:cluster

    - name: Cleanup
      if: always()
      run: |
        docker-compose -f packages/titan/test/docker/docker-compose.test.yml down -v